"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8462],{"./modules/react/_examples/stories/mdx/Density.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_Density__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/react/_examples/stories/mdx/examples/Density.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Examples/Forms/Density and Alignment"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-density-examples",children:"Canvas Kit Density Examples"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Although we currently don't support a density system, it's common practice to provide varying\noptions to users, especially in the context of forms. Below is an example of how you can style our\nfrom elements to achieve the desired density."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Density__WEBPACK_IMPORTED_MODULE_5__.V})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/react/_examples/stories/mdx/examples/Density.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.V=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_select=__webpack_require__("./modules/react/select/index.ts"),_switch=__webpack_require__("./modules/react/switch/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");const formStyles=(0,_canvasKitStyling.createStyles)({margin:`${_canvasTokensWeb.system.space.x3} ${_canvasTokensWeb.system.space.zero}`,maxWidth:(0,_canvasKitStyling.px2rem)(600),minWidth:_canvasTokensWeb.system.space.zero}),formFieldGroupListStyles=(0,_canvasKitStyling.createStyles)({display:"inline-flex",flexDirection:"row",flexWrap:"wrap"}),sideBySideInputs=(0,_canvasKitStyling.createStencil)({base:{display:"inline-flex",gap:_canvasTokensWeb.system.space.x2,justifyContent:"space-between"},modifiers:{labelOrientation:{horizontalStart:{display:"flex",flexDirection:"column"},horizontalEnd:{display:"flex",flexDirection:"column"},vertical:{display:"inline-flex"}},density:{high:{},medium:{},low:{}}},compound:[{modifiers:{labelOrientation:"horizontalStart",density:"high"},styles:{gap:_canvasTokensWeb.system.space.x4}},{modifiers:{labelOrientation:"horizontalStart",density:"medium"},styles:{gap:_canvasTokensWeb.system.space.x6}},{modifiers:{labelOrientation:"horizontalStart",density:"low"},styles:{gap:_canvasTokensWeb.system.space.x8}},{modifiers:{labelOrientation:"horizontalEnd",density:"high"},styles:{gap:_canvasTokensWeb.system.space.x4}},{modifiers:{labelOrientation:"horizontalEnd",density:"medium"},styles:{gap:_canvasTokensWeb.system.space.x6}},{modifiers:{labelOrientation:"horizontalEnd",density:"low"},styles:{gap:_canvasTokensWeb.system.space.x8}}]}),zipCodeInput=(0,_canvasKitStyling.createStyles)({minWidth:(0,_canvasKitStyling.px2rem)(90)}),zipCodeContainerStyles=(0,_canvasKitStyling.createStyles)({minWidth:_canvasTokensWeb.system.space.zero}),formFieldStencil=(0,_canvasKitStyling.createStencil)({base:{},modifiers:{density:{high:{gap:(0,_canvasKitStyling.px2rem)(2)},medium:{gap:_canvasTokensWeb.system.space.x1},low:{gap:_canvasTokensWeb.system.space.x2}},labelOrientation:{horizontalStart:{},horizontalEnd:{},vertical:{}}},compound:[{modifiers:{labelOrientation:"horizontalStart",density:"high"},styles:{gap:_canvasTokensWeb.system.space.x4}},{modifiers:{labelOrientation:"horizontalStart",density:"medium"},styles:{gap:_canvasTokensWeb.system.space.x6}},{modifiers:{labelOrientation:"horizontalStart",density:"low"},styles:{gap:_canvasTokensWeb.system.space.x8}},{modifiers:{labelOrientation:"horizontalEnd",density:"high"},styles:{gap:_canvasTokensWeb.system.space.x4}},{modifiers:{labelOrientation:"horizontalEnd",density:"medium"},styles:{gap:_canvasTokensWeb.system.space.x6}},{modifiers:{labelOrientation:"horizontalEnd",density:"low"},styles:{gap:_canvasTokensWeb.system.space.x8}}]}),selectStencil=(0,_canvasKitStyling.createStencil)({base:{},modifiers:{density:{high:{height:_canvasTokensWeb.system.space.x8,padding:`${_canvasTokensWeb.system.space.x1} ${_canvasTokensWeb.system.space.x2}`,"& + div":{height:_canvasTokensWeb.system.space.x8}},medium:{height:_canvasTokensWeb.system.space.x10,padding:`${_canvasTokensWeb.system.space.x2}`},low:{height:_canvasKitStyling.calc.add(_canvasTokensWeb.system.space.x10,_canvasTokensWeb.system.space.x2),padding:`${_canvasTokensWeb.system.space.x3} ${_canvasTokensWeb.system.space.x2}`,"& + div":{height:_canvasKitStyling.calc.add(_canvasTokensWeb.system.space.x10,_canvasTokensWeb.system.space.x2)}}}}}),inputStencil=(0,_canvasKitStyling.createStencil)({base:{minWidth:(0,_canvasKitStyling.px2rem)(200)},modifiers:{density:{high:{height:_canvasTokensWeb.system.space.x8,padding:`${_canvasTokensWeb.system.space.x1} ${_canvasTokensWeb.system.space.x2}`},medium:{height:_canvasTokensWeb.system.space.x10,padding:`${_canvasTokensWeb.system.space.x2}`},low:{height:_canvasKitStyling.calc.add(_canvasTokensWeb.system.space.x10,_canvasTokensWeb.system.space.x2),padding:`${_canvasTokensWeb.system.space.x3} ${_canvasTokensWeb.system.space.x2}`}}}}),creditCardInputStencil=(0,_canvasKitStyling.createStencil)({extends:inputStencil,base:{width:_canvasKitStyling.calc.add(_canvasTokensWeb.system.space.x10,_canvasTokensWeb.system.space.x10),minWidth:_canvasKitStyling.calc.add(_canvasTokensWeb.system.space.x10,_canvasTokensWeb.system.space.x10),textAlign:"center"}}),flexContainerStencil=(0,_canvasKitStyling.createStencil)({base:{display:"flex",flexDirection:"column",minWidth:0},modifiers:{density:{high:{gap:_canvasTokensWeb.system.space.x4},medium:{gap:_canvasTokensWeb.system.space.x6},low:{gap:_canvasTokensWeb.system.space.x8}}}}),containerAlignmentStencil=(0,_canvasKitStyling.createStencil)({base:{display:"flex"},modifiers:{alignment:{left:{justifyContent:"flex-start"},center:{justifyContent:"center"}}}}),optionStyles=(0,_canvasKitStyling.createStyles)({display:"flex",gap:_canvasTokensWeb.system.space.x3,flexDirection:"column"}),optionItemStyles=(0,_canvasKitStyling.createStyles)({display:"flex",flexDirection:"column",gap:_canvasTokensWeb.system.space.x3,maxWidth:"fit-content"}),Density=()=>{const[density,setDensity]=_react.default.useState("medium"),[containerAlignment,setContainerAlignment]=_react.default.useState("left"),[labelOrientation,setLabelOrientation]=_react.default.useState("vertical");return _react.default.createElement("div",null,_react.default.createElement(_text.Heading,{size:"small"},"Choose Your Density and Alignment"),_react.default.createElement("div",{className:optionStyles},_react.default.createElement("div",{className:optionItemStyles},_react.default.createElement(_text.Text,null,"Density"),_react.default.createElement(_segmentedControl.SegmentedControl,{onSelect:data=>(data=>{setDensity(data.id)})(data),size:"small"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"choose a density"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"high"},"High"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"medium"},"Medium"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"low"},"Low")))),_react.default.createElement("div",{className:optionItemStyles},_react.default.createElement(_text.Text,null,"Label Orientation"),_react.default.createElement(_segmentedControl.SegmentedControl,{onSelect:data=>(data=>{setLabelOrientation(data.id)})(data),size:"small"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"choose a label orientation"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"vertical"},"Vertical"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"horizontalStart"},"Horizontal Start"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"horizontalEnd"},"Horizontal End")))),_react.default.createElement("div",{className:optionItemStyles},_react.default.createElement(_text.Text,null,"Container Alignment"),_react.default.createElement(_segmentedControl.SegmentedControl,{onSelect:data=>(data=>{setContainerAlignment(data.id)})(data),size:"small"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"choose a density"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"left"},"Left"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"center"},"Center"))))),_react.default.createElement("div",containerAlignmentStencil({alignment:containerAlignment}),_react.default.createElement("form",{action:"#",className:formStyles},_react.default.createElement("div",flexContainerStencil({density}),_react.default.createElement(_formField.FormField,{orientation:labelOrientation,grow:!0,cs:formFieldStencil({density,labelOrientation}),id:"foo"},_react.default.createElement(_formField.FormField.Label,null,"Choose Country"),_react.default.createElement(_select.Select,{items:["Dominican Republic","Spain","United States"]},_react.default.createElement(_formField.FormField.Input,{cs:selectStencil({density}),placeholder:"Choose a country",as:_select.Select.Input}),_react.default.createElement(_select.Select.Popper,null,_react.default.createElement(_select.Select.Card,null,_react.default.createElement(_select.Select.List,null,(item=>_react.default.createElement(_select.Select.Item,null,item))))))),_react.default.createElement(_formField.FormField,{grow:!0,orientation:labelOrientation,cs:formFieldStencil({density,labelOrientation})},_react.default.createElement(_formField.FormField.Label,null,"Full Name"),_react.default.createElement(_formField.FormField.Input,{as:_textInput.TextInput,cs:inputStencil({density})})),_react.default.createElement(_formField.FormField,{grow:!0,orientation:labelOrientation,cs:formFieldStencil({density,labelOrientation})},_react.default.createElement(_formField.FormField.Label,null,"Phone Number"),_react.default.createElement(_formField.FormField.Input,{as:_textInput.TextInput,cs:inputStencil({density})})),_react.default.createElement(_formField.FormField,{grow:!0,orientation:labelOrientation,cs:formFieldStencil({density,labelOrientation})},_react.default.createElement(_formField.FormField.Label,null,"Street Address"),_react.default.createElement(_formField.FormField.Input,{as:_textInput.TextInput,cs:inputStencil({density})})),_react.default.createElement(_formField.FormField,{grow:!0,orientation:labelOrientation,cs:formFieldStencil({density,labelOrientation})},_react.default.createElement(_formField.FormField.Label,null,"City"),_react.default.createElement(_formField.FormField.Input,{as:_textInput.TextInput,cs:inputStencil({density})})),_react.default.createElement("div",sideBySideInputs({labelOrientation,density}),_react.default.createElement(_formField.FormField,{grow:!0,orientation:labelOrientation,cs:formFieldStencil({density,labelOrientation})},_react.default.createElement(_formField.FormField.Label,null,"State"),_react.default.createElement(_formField.FormField.Input,{as:_textInput.TextInput,cs:inputStencil({density})})),_react.default.createElement(_formField.FormField,{grow:!0,orientation:labelOrientation,cs:[formFieldStencil({density,labelOrientation}),zipCodeContainerStyles]},_react.default.createElement(_formField.FormField.Label,null,"Zip Code"),_react.default.createElement(_formField.FormField.Input,{cs:[inputStencil({density}),zipCodeInput],as:_textInput.TextInput}))),_react.default.createElement(_formField.FormField,{orientation:labelOrientation,cs:formFieldStencil({density,labelOrientation})},_react.default.createElement(_formField.FormField.Label,null,"Enable Fast Shipping"),_react.default.createElement(_formField.FormField.Field,null,_react.default.createElement(_formField.FormField.Input,{as:_switch.Switch}))),_react.default.createElement(_formField.FormFieldGroup,{cs:formFieldStencil({density,labelOrientation}),orientation:labelOrientation},_react.default.createElement(_formField.FormFieldGroup.Label,null,"Credit Card"),_react.default.createElement(_formField.FormFieldGroup.Field,null,_react.default.createElement(_formField.FormFieldGroup.List,{cs:formFieldGroupListStyles},_react.default.createElement(_formField.FormFieldGroup.Input,{as:_textInput.TextInput,placeholder:"XXXX",cs:creditCardInputStencil({density})}),_react.default.createElement(_formField.FormFieldGroup.Input,{as:_textInput.TextInput,placeholder:"XXXX",cs:creditCardInputStencil({density})}),_react.default.createElement(_formField.FormFieldGroup.Input,{as:_textInput.TextInput,placeholder:"XXXX",cs:creditCardInputStencil({density})}),_react.default.createElement(_formField.FormFieldGroup.Input,{cs:creditCardInputStencil({density}),placeholder:"XXXX",as:_textInput.TextInput}))))))))};exports.V=Density,Density.displayName="Density",Density.__RAW__="import React from 'react';\nimport {FormField, FormFieldGroup} from '@workday/canvas-kit-react/form-field';\nimport {TextInput} from '@workday/canvas-kit-react/text-input';\nimport {Select} from '@workday/canvas-kit-react/select';\nimport {Switch} from '@workday/canvas-kit-react/switch';\nimport {Heading, Text} from '@workday/canvas-kit-react/text';\nimport {SegmentedControl} from '@workday/canvas-kit-preview-react/segmented-control';\nimport {calc, createStencil, createStyles, px2rem} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\nconst formStyles = createStyles({\n  margin: `${system.space.x3} ${system.space.zero}`,\n  maxWidth: px2rem(600),\n  minWidth: system.space.zero,\n});\n\nconst formFieldGroupListStyles = createStyles({\n  display: 'inline-flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n});\n\nconst sideBySideInputs = createStencil({\n  base: {\n    display: 'inline-flex',\n    gap: system.space.x2,\n    justifyContent: 'space-between',\n  },\n  modifiers: {\n    labelOrientation: {\n      horizontalStart: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      horizontalEnd: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      vertical: {\n        display: 'inline-flex',\n      },\n    },\n    density: {\n      high: {},\n      medium: {},\n      low: {},\n    },\n  },\n  compound: [\n    {\n      modifiers: {labelOrientation: 'horizontalStart', density: 'high'},\n      styles: {\n        gap: system.space.x4,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalStart', density: 'medium'},\n      styles: {\n        gap: system.space.x6,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalStart', density: 'low'},\n      styles: {\n        gap: system.space.x8,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalEnd', density: 'high'},\n      styles: {\n        gap: system.space.x4,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalEnd', density: 'medium'},\n      styles: {\n        gap: system.space.x6,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalEnd', density: 'low'},\n      styles: {\n        gap: system.space.x8,\n      },\n    },\n  ],\n});\n\nconst zipCodeInput = createStyles({\n  minWidth: px2rem(90),\n});\n\nconst zipCodeContainerStyles = createStyles({\n  minWidth: system.space.zero,\n});\n\nconst formFieldStencil = createStencil({\n  base: {},\n  modifiers: {\n    density: {\n      high: {\n        gap: px2rem(2),\n      },\n      medium: {\n        gap: system.space.x1,\n      },\n      low: {\n        gap: system.space.x2,\n      },\n    },\n    labelOrientation: {\n      horizontalStart: {},\n      horizontalEnd: {},\n      vertical: {},\n    },\n  },\n  compound: [\n    {\n      modifiers: {labelOrientation: 'horizontalStart', density: 'high'},\n      styles: {\n        gap: system.space.x4,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalStart', density: 'medium'},\n      styles: {\n        gap: system.space.x6,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalStart', density: 'low'},\n      styles: {\n        gap: system.space.x8,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalEnd', density: 'high'},\n      styles: {\n        gap: system.space.x4,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalEnd', density: 'medium'},\n      styles: {\n        gap: system.space.x6,\n      },\n    },\n    {\n      modifiers: {labelOrientation: 'horizontalEnd', density: 'low'},\n      styles: {\n        gap: system.space.x8,\n      },\n    },\n  ],\n});\n\nconst selectStencil = createStencil({\n  base: {},\n  modifiers: {\n    density: {\n      high: {\n        height: system.space.x8,\n        padding: `${system.space.x1} ${system.space.x2}`,\n        '& + div': {\n          height: system.space.x8,\n        },\n      },\n      medium: {\n        height: system.space.x10,\n        padding: `${system.space.x2}`,\n      },\n      low: {\n        height: calc.add(system.space.x10, system.space.x2),\n        padding: `${system.space.x3} ${system.space.x2}`,\n        '& + div': {\n          height: calc.add(system.space.x10, system.space.x2),\n        },\n      },\n    },\n  },\n});\n\nconst inputStencil = createStencil({\n  base: {\n    minWidth: px2rem(200),\n  },\n  modifiers: {\n    density: {\n      high: {\n        height: system.space.x8,\n        padding: `${system.space.x1} ${system.space.x2}`,\n      },\n      medium: {\n        height: system.space.x10,\n        padding: `${system.space.x2}`,\n      },\n\n      low: {\n        height: calc.add(system.space.x10, system.space.x2),\n        padding: `${system.space.x3} ${system.space.x2}`,\n      },\n    },\n  },\n});\n\nconst creditCardInputStencil = createStencil({\n  extends: inputStencil,\n  base: {\n    width: calc.add(system.space.x10, system.space.x10),\n    minWidth: calc.add(system.space.x10, system.space.x10),\n    textAlign: 'center',\n  },\n});\n\nconst flexContainerStencil = createStencil({\n  base: {\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: 0,\n  },\n  modifiers: {\n    density: {\n      high: {\n        gap: system.space.x4,\n      },\n      medium: {\n        gap: system.space.x6,\n      },\n      low: {\n        gap: system.space.x8,\n      },\n    },\n  },\n});\n\nconst containerAlignmentStencil = createStencil({\n  base: {\n    display: 'flex',\n  },\n  modifiers: {\n    alignment: {\n      left: {\n        justifyContent: 'flex-start',\n      },\n      center: {\n        justifyContent: 'center',\n      },\n    },\n  },\n});\n\nconst optionStyles = createStyles({\n  display: 'flex',\n  gap: system.space.x3,\n  flexDirection: 'column',\n});\n\nconst optionItemStyles = createStyles({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: system.space.x3,\n  maxWidth: 'fit-content',\n});\n\n// high = 32px height on inputs, space between inputs is 16px\n// medium 40px height on inputs, space between inputs is 24px\n// low = 48px height on inputs, space between inputs is 32px\n\nexport const Density = () => {\n  const [density, setDensity] = React.useState<'high' | 'medium' | 'low'>('medium');\n  const [containerAlignment, setContainerAlignment] = React.useState<'left' | 'center'>('left');\n  const [labelOrientation, setLabelOrientation] = React.useState<\n    'vertical' | 'horizontalStart' | 'horizontalEnd'\n  >('vertical');\n\n  const handleDensity = data => {\n    setDensity(data.id);\n  };\n\n  const handleContainerAlignment = data => {\n    setContainerAlignment(data.id);\n  };\n\n  const handleLabelOrientation = data => {\n    setLabelOrientation(data.id);\n  };\n\n  return (\n    <div>\n      <Heading size=\"small\">Choose Your Density and Alignment</Heading>\n      <div className={optionStyles}>\n        <div className={optionItemStyles}>\n          <Text>Density</Text>\n          <SegmentedControl onSelect={data => handleDensity(data)} size=\"small\">\n            <SegmentedControl.List aria-label=\"choose a density\">\n              <SegmentedControl.Item data-id=\"high\">High</SegmentedControl.Item>\n              <SegmentedControl.Item data-id=\"medium\">Medium</SegmentedControl.Item>\n              <SegmentedControl.Item data-id=\"low\">Low</SegmentedControl.Item>\n            </SegmentedControl.List>\n          </SegmentedControl>\n        </div>\n        <div className={optionItemStyles}>\n          <Text>Label Orientation</Text>\n          <SegmentedControl onSelect={data => handleLabelOrientation(data)} size=\"small\">\n            <SegmentedControl.List aria-label=\"choose a label orientation\">\n              <SegmentedControl.Item data-id=\"vertical\">Vertical</SegmentedControl.Item>\n              <SegmentedControl.Item data-id=\"horizontalStart\">\n                Horizontal Start\n              </SegmentedControl.Item>\n              <SegmentedControl.Item data-id=\"horizontalEnd\">Horizontal End</SegmentedControl.Item>\n            </SegmentedControl.List>\n          </SegmentedControl>\n        </div>\n        <div className={optionItemStyles}>\n          <Text>Container Alignment</Text>\n          <SegmentedControl onSelect={data => handleContainerAlignment(data)} size=\"small\">\n            <SegmentedControl.List aria-label=\"choose a density\">\n              <SegmentedControl.Item data-id=\"left\">Left</SegmentedControl.Item>\n              <SegmentedControl.Item data-id=\"center\">Center</SegmentedControl.Item>\n            </SegmentedControl.List>\n          </SegmentedControl>\n        </div>\n      </div>\n\n      <div {...containerAlignmentStencil({alignment: containerAlignment})}>\n        <form action=\"#\" className={formStyles}>\n          <div {...flexContainerStencil({density})}>\n            <FormField\n              orientation={labelOrientation}\n              grow\n              cs={formFieldStencil({density, labelOrientation})}\n              id=\"foo\"\n            >\n              <FormField.Label>Choose Country</FormField.Label>\n              <Select items={['Dominican Republic', 'Spain', 'United States']}>\n                <FormField.Input\n                  cs={selectStencil({density})}\n                  placeholder=\"Choose a country\"\n                  as={Select.Input}\n                />\n                <Select.Popper>\n                  <Select.Card>\n                    <Select.List>{item => <Select.Item>{item}</Select.Item>}</Select.List>\n                  </Select.Card>\n                </Select.Popper>\n              </Select>\n            </FormField>\n            <FormField\n              grow\n              orientation={labelOrientation}\n              cs={formFieldStencil({density, labelOrientation})}\n            >\n              <FormField.Label>Full Name</FormField.Label>\n              <FormField.Input as={TextInput} cs={inputStencil({density})} />\n            </FormField>\n            <FormField\n              grow\n              orientation={labelOrientation}\n              cs={formFieldStencil({density, labelOrientation})}\n            >\n              <FormField.Label>Phone Number</FormField.Label>\n              <FormField.Input as={TextInput} cs={inputStencil({density})} />\n            </FormField>\n            <FormField\n              grow\n              orientation={labelOrientation}\n              cs={formFieldStencil({density, labelOrientation})}\n            >\n              <FormField.Label>Street Address</FormField.Label>\n              <FormField.Input as={TextInput} cs={inputStencil({density})} />\n            </FormField>\n            <FormField\n              grow\n              orientation={labelOrientation}\n              cs={formFieldStencil({density, labelOrientation})}\n            >\n              <FormField.Label>City</FormField.Label>\n              <FormField.Input as={TextInput} cs={inputStencil({density})} />\n            </FormField>\n            <div {...sideBySideInputs({labelOrientation: labelOrientation, density})}>\n              <FormField\n                grow\n                orientation={labelOrientation}\n                cs={formFieldStencil({density, labelOrientation})}\n              >\n                <FormField.Label>State</FormField.Label>\n                <FormField.Input as={TextInput} cs={inputStencil({density})} />\n              </FormField>\n              <FormField\n                grow\n                orientation={labelOrientation}\n                cs={[formFieldStencil({density, labelOrientation}), zipCodeContainerStyles]}\n              >\n                <FormField.Label>Zip Code</FormField.Label>\n                <FormField.Input cs={[inputStencil({density}), zipCodeInput]} as={TextInput} />\n              </FormField>\n            </div>\n            <FormField\n              orientation={labelOrientation}\n              cs={formFieldStencil({density, labelOrientation})}\n            >\n              <FormField.Label>Enable Fast Shipping</FormField.Label>\n              <FormField.Field>\n                <FormField.Input as={Switch} />\n              </FormField.Field>\n            </FormField>\n            <FormFieldGroup\n              cs={formFieldStencil({density, labelOrientation})}\n              orientation={labelOrientation}\n            >\n              <FormFieldGroup.Label>Credit Card</FormFieldGroup.Label>\n              <FormFieldGroup.Field>\n                <FormFieldGroup.List cs={formFieldGroupListStyles}>\n                  <FormFieldGroup.Input\n                    as={TextInput}\n                    placeholder=\"XXXX\"\n                    cs={creditCardInputStencil({density})}\n                  />\n                  <FormFieldGroup.Input\n                    as={TextInput}\n                    placeholder=\"XXXX\"\n                    cs={creditCardInputStencil({density})}\n                  />\n                  <FormFieldGroup.Input\n                    as={TextInput}\n                    placeholder=\"XXXX\"\n                    cs={creditCardInputStencil({density})}\n                  />\n                  <FormFieldGroup.Input\n                    cs={creditCardInputStencil({density})}\n                    placeholder=\"XXXX\"\n                    as={TextInput}\n                  />\n                </FormFieldGroup.List>\n              </FormFieldGroup.Field>\n            </FormFieldGroup>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n"}}]);