"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1283],{"./modules/react/side-panel/stories/visual-testing/SidePanel.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SidePanelStates=void 0;(function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}})(__webpack_require__("./node_modules/react/index.js"));var _testing=__webpack_require__("./modules/react/testing/index.ts"),_sidePanel=__webpack_require__("./modules/react/side-panel/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Containers/Side Panel",component:_sidePanel.SidePanel,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {\\n  SidePanel,\\n  SidePanelBackgroundColor,\\n  SidePanelOpenDirection,\\n} from '@workday/canvas-kit-react/side-panel';\\nimport {space} from '@workday/canvas-kit-react/tokens';\\n\\nexport default {\\n  title: 'Testing/Containers/Side Panel',\\n  component: SidePanel,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SidePanelStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Default', props: {open: true}},\\n          {\\n            label: 'With Heading',\\n            props: {header: 'Navigation', open: true},\\n          },\\n          {\\n            label: 'With Gray Background',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n            },\\n          },\\n          {\\n            label: 'With On Toggle Click',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n          {\\n            label: 'With open direction from right',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openDirection: SidePanelOpenDirection.Right,\\n            },\\n          },\\n          {\\n            label: 'With custom padding',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              padding: space.xxs,\\n            },\\n          },\\n          {\\n            label: 'With custom open width',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openWidth: 350,\\n            },\\n          },\\n          {\\n            label: 'When closed',\\n            props: {\\n              header: 'Navigation',\\n              open: false,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n        ]}\\n        columnProps={[{label: 'Default', props: {}}]}\\n      >\\n        {props => (\\n          <div style={{position: 'relative', height: 200}}>\\n            <SidePanel open={props.open} {...props}>\\n              Side Panel Content\\n            </SidePanel>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"SidePanelStates\": {\n    \"startLoc\": {\n      \"col\": 31,\n      \"line\": 20\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 98\n    },\n    \"startBody\": {\n      \"col\": 31,\n      \"line\": 20\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 98\n    }\n  }\n};\n    \nimport React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {\n  SidePanel,\n  SidePanelBackgroundColor,\n  SidePanelOpenDirection,\n} from '@workday/canvas-kit-react/side-panel';\nimport {space} from '@workday/canvas-kit-react/tokens';\n\nexport default {\n  title: 'Testing/Containers/Side Panel',\n  component: SidePanel,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {\\n  SidePanel,\\n  SidePanelBackgroundColor,\\n  SidePanelOpenDirection,\\n} from '@workday/canvas-kit-react/side-panel';\\nimport {space} from '@workday/canvas-kit-react/tokens';\\n\\nexport default {\\n  title: 'Testing/Containers/Side Panel',\\n  component: SidePanel,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SidePanelStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Default', props: {open: true}},\\n          {\\n            label: 'With Heading',\\n            props: {header: 'Navigation', open: true},\\n          },\\n          {\\n            label: 'With Gray Background',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n            },\\n          },\\n          {\\n            label: 'With On Toggle Click',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n          {\\n            label: 'With open direction from right',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openDirection: SidePanelOpenDirection.Right,\\n            },\\n          },\\n          {\\n            label: 'With custom padding',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              padding: space.xxs,\\n            },\\n          },\\n          {\\n            label: 'With custom open width',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openWidth: 350,\\n            },\\n          },\\n          {\\n            label: 'When closed',\\n            props: {\\n              header: 'Navigation',\\n              open: false,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n        ]}\\n        columnProps={[{label: 'Default', props: {}}]}\\n      >\\n        {props => (\\n          <div style={{position: 'relative', height: 200}}>\\n            <SidePanel open={props.open} {...props}>\\n              Side Panel Content\\n            </SidePanel>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\",\n    \"locationsMap\": {\n      \"side-panel-states\": {\n        \"startLoc\": {\n          \"col\": 31,\n          \"line\": 20\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 98\n        },\n        \"startBody\": {\n          \"col\": 31,\n          \"line\": 20\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 98\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SidePanelStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Default', props: {open: true}},\n          {\n            label: 'With Heading',\n            props: {header: 'Navigation', open: true},\n          },\n          {\n            label: 'With Gray Background',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n            },\n          },\n          {\n            label: 'With On Toggle Click',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n          {\n            label: 'With open direction from right',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openDirection: SidePanelOpenDirection.Right,\n            },\n          },\n          {\n            label: 'With custom padding',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              padding: space.xxs,\n            },\n          },\n          {\n            label: 'With custom open width',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openWidth: 350,\n            },\n          },\n          {\n            label: 'When closed',\n            props: {\n              header: 'Navigation',\n              open: false,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n        ]}\n        columnProps={[{label: 'Default', props: {}}]}\n      >\n        {props => (\n          <div style={{position: 'relative', height: 200}}>\n            <SidePanel open={props.open} {...props}>\n              Side Panel Content\n            </SidePanel>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n",locationsMap:{"side-panel-states":{startLoc:{col:31,line:71},endLoc:{col:1,line:149},startBody:{col:31,line:71},endBody:{col:1,line:149}}}},storySource:{source:"import React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {\n  SidePanel,\n  SidePanelBackgroundColor,\n  SidePanelOpenDirection,\n} from '@workday/canvas-kit-react/side-panel';\nimport {space} from '@workday/canvas-kit-react/tokens';\n\nexport default {\n  title: 'Testing/Containers/Side Panel',\n  component: SidePanel,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SidePanelStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Default', props: {open: true}},\n          {\n            label: 'With Heading',\n            props: {header: 'Navigation', open: true},\n          },\n          {\n            label: 'With Gray Background',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n            },\n          },\n          {\n            label: 'With On Toggle Click',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n          {\n            label: 'With open direction from right',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openDirection: SidePanelOpenDirection.Right,\n            },\n          },\n          {\n            label: 'With custom padding',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              padding: space.xxs,\n            },\n          },\n          {\n            label: 'With custom open width',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openWidth: 350,\n            },\n          },\n          {\n            label: 'When closed',\n            props: {\n              header: 'Navigation',\n              open: false,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n        ]}\n        columnProps={[{label: 'Default', props: {}}]}\n      >\n        {props => (\n          <div style={{position: 'relative', height: 200}}>\n            <SidePanel open={props.open} {...props}>\n              Side Panel Content\n            </SidePanel>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n",locationsMap:{"side-panel-states":{startLoc:{col:31,line:20},endLoc:{col:1,line:98},startBody:{col:31,line:20},endBody:{col:1,line:98}}}},chromatic:{disable:!1}}};exports.SidePanelStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Default",props:{open:!0}},{label:"With Heading",props:{header:"Navigation",open:!0}},{label:"With Gray Background",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray}},{label:"With On Toggle Click",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button")}},{label:"With open direction from right",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button"),openDirection:_sidePanel.SidePanelOpenDirection.Right}},{label:"With custom padding",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button"),padding:_tokens.space.xxs}},{label:"With custom open width",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button"),openWidth:350}},{label:"When closed",props:{header:"Navigation",open:!1,onToggleClick:()=>console.log("click toggle button")}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsx)("div",{style:{position:"relative",height:200},children:(0,_jsxRuntime.jsx)(_sidePanel.SidePanel,{open:props.open,...props,children:"Side Panel Content"})})})})};module.exports.__namedExportsOrder=["SidePanelStates"]}}]);