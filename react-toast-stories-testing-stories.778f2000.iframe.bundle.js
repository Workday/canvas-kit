"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8549],{"./modules/react/toast/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.ToastStates=void 0;(function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}})(__webpack_require__("./node_modules/react/index.js"));var _canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_testing=__webpack_require__("./modules/react/testing/index.ts"),_toast=__webpack_require__("./modules/react/toast/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Popups/Toast",component:_toast.Toast,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\n\\nimport {checkIcon, exclamationCircleIcon} from '@workday/canvas-system-icons-web';\\n\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {Toast} from '@workday/canvas-kit-react/toast';\\n\\nexport default {\\n  title: 'Testing/Popups/Toast',\\n  component: Toast,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const ToastStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {\\n              label: 'Default',\\n              props: {\\n                mode: 'polite',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With Icon',\\n              props: {\\n                mode: 'polite',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'On Close',\\n              props: {\\n                mode: 'alert',\\n                hasCloseIcon: true,\\n                icon: exclamationCircleIcon,\\n                iconColor: 'cinnamon500',\\n                message: 'Your workbook has an error.',\\n              },\\n            },\\n            {\\n              label: 'With Action',\\n              props: {\\n                mode: 'dialog',\\n                hasAction: true,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With small padding',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                padding: 's',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With no depth',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 'none',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 1',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 1,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 2',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 2,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 3',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 3,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 4',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 4,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 5',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 5,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 6',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 6,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With custom width',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                width: 300,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With short mesage',\\n              props: {\\n                mode: 'alert',\\n                hasCloseIcon: true,\\n                width: 300,\\n                icon: exclamationCircleIcon,\\n                iconColor: 'cinnamon500',\\n                message: 'There was an error',\\n              },\\n            },\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {({mode, hasCloseIcon, hasAction, icon, iconColor, ...props}) => (\\n            <Toast mode={mode} {...props}>\\n              <Toast.Icon icon={icon} color={iconColor} />\\n              <Toast.Body>\\n                <Toast.Message>{props.message}</Toast.Message>\\n                {hasAction && <Toast.Link href=\\\"#href\\\">Custom Link</Toast.Link>}\\n              </Toast.Body>\\n              {hasCloseIcon && <Toast.CloseIcon aria-label=\\\"Close\\\" />}\\n            </Toast>\\n          )}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"ToastStates\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 18\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 189\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 18\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 189\n    }\n  }\n};\n    \nimport React from 'react';\n\nimport {checkIcon, exclamationCircleIcon} from '@workday/canvas-system-icons-web';\n\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {Toast} from '@workday/canvas-kit-react/toast';\n\nexport default {\n  title: 'Testing/Popups/Toast',\n  component: Toast,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\n\\nimport {checkIcon, exclamationCircleIcon} from '@workday/canvas-system-icons-web';\\n\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {Toast} from '@workday/canvas-kit-react/toast';\\n\\nexport default {\\n  title: 'Testing/Popups/Toast',\\n  component: Toast,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const ToastStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {\\n              label: 'Default',\\n              props: {\\n                mode: 'polite',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With Icon',\\n              props: {\\n                mode: 'polite',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'On Close',\\n              props: {\\n                mode: 'alert',\\n                hasCloseIcon: true,\\n                icon: exclamationCircleIcon,\\n                iconColor: 'cinnamon500',\\n                message: 'Your workbook has an error.',\\n              },\\n            },\\n            {\\n              label: 'With Action',\\n              props: {\\n                mode: 'dialog',\\n                hasAction: true,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With small padding',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                padding: 's',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With no depth',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 'none',\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 1',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 1,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 2',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 2,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 3',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 3,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 4',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 4,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 5',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 5,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With depth value set to 6',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                depth: 6,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With custom width',\\n              props: {\\n                mode: 'polite',\\n                hasCloseIcon: true,\\n                width: 300,\\n                icon: checkIcon,\\n                iconColor: 'greenApple400',\\n                message: 'Your workbook was successfully processed.',\\n              },\\n            },\\n            {\\n              label: 'With short mesage',\\n              props: {\\n                mode: 'alert',\\n                hasCloseIcon: true,\\n                width: 300,\\n                icon: exclamationCircleIcon,\\n                iconColor: 'cinnamon500',\\n                message: 'There was an error',\\n              },\\n            },\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {({mode, hasCloseIcon, hasAction, icon, iconColor, ...props}) => (\\n            <Toast mode={mode} {...props}>\\n              <Toast.Icon icon={icon} color={iconColor} />\\n              <Toast.Body>\\n                <Toast.Message>{props.message}</Toast.Message>\\n                {hasAction && <Toast.Link href=\\\"#href\\\">Custom Link</Toast.Link>}\\n              </Toast.Body>\\n              {hasCloseIcon && <Toast.CloseIcon aria-label=\\\"Close\\\" />}\\n            </Toast>\\n          )}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\",\n    \"locationsMap\": {\n      \"toast-states\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 18\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 189\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 18\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 189\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const ToastStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {\n              label: 'Default',\n              props: {\n                mode: 'polite',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With Icon',\n              props: {\n                mode: 'polite',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'On Close',\n              props: {\n                mode: 'alert',\n                hasCloseIcon: true,\n                icon: exclamationCircleIcon,\n                iconColor: 'cinnamon500',\n                message: 'Your workbook has an error.',\n              },\n            },\n            {\n              label: 'With Action',\n              props: {\n                mode: 'dialog',\n                hasAction: true,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With small padding',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                padding: 's',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With no depth',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 'none',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 1',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 1,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 2',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 2,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 3',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 3,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 4',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 4,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 5',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 5,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 6',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 6,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With custom width',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                width: 300,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With short mesage',\n              props: {\n                mode: 'alert',\n                hasCloseIcon: true,\n                width: 300,\n                icon: exclamationCircleIcon,\n                iconColor: 'cinnamon500',\n                message: 'There was an error',\n              },\n            },\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {({mode, hasCloseIcon, hasAction, icon, iconColor, ...props}) => (\n            <Toast mode={mode} {...props}>\n              <Toast.Icon icon={icon} color={iconColor} />\n              <Toast.Body>\n                <Toast.Message>{props.message}</Toast.Message>\n                {hasAction && <Toast.Link href=\"#href\">Custom Link</Toast.Link>}\n              </Toast.Body>\n              {hasCloseIcon && <Toast.CloseIcon aria-label=\"Close\" />}\n            </Toast>\n          )}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"toast-states":{startLoc:{col:27,line:69},endLoc:{col:1,line:240},startBody:{col:27,line:69},endBody:{col:1,line:240}}}},storySource:{source:"import React from 'react';\n\nimport {checkIcon, exclamationCircleIcon} from '@workday/canvas-system-icons-web';\n\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {Toast} from '@workday/canvas-kit-react/toast';\n\nexport default {\n  title: 'Testing/Popups/Toast',\n  component: Toast,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const ToastStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {\n              label: 'Default',\n              props: {\n                mode: 'polite',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With Icon',\n              props: {\n                mode: 'polite',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'On Close',\n              props: {\n                mode: 'alert',\n                hasCloseIcon: true,\n                icon: exclamationCircleIcon,\n                iconColor: 'cinnamon500',\n                message: 'Your workbook has an error.',\n              },\n            },\n            {\n              label: 'With Action',\n              props: {\n                mode: 'dialog',\n                hasAction: true,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With small padding',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                padding: 's',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With no depth',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 'none',\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 1',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 1,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 2',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 2,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 3',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 3,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 4',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 4,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 5',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 5,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With depth value set to 6',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                depth: 6,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With custom width',\n              props: {\n                mode: 'polite',\n                hasCloseIcon: true,\n                width: 300,\n                icon: checkIcon,\n                iconColor: 'greenApple400',\n                message: 'Your workbook was successfully processed.',\n              },\n            },\n            {\n              label: 'With short mesage',\n              props: {\n                mode: 'alert',\n                hasCloseIcon: true,\n                width: 300,\n                icon: exclamationCircleIcon,\n                iconColor: 'cinnamon500',\n                message: 'There was an error',\n              },\n            },\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {({mode, hasCloseIcon, hasAction, icon, iconColor, ...props}) => (\n            <Toast mode={mode} {...props}>\n              <Toast.Icon icon={icon} color={iconColor} />\n              <Toast.Body>\n                <Toast.Message>{props.message}</Toast.Message>\n                {hasAction && <Toast.Link href=\"#href\">Custom Link</Toast.Link>}\n              </Toast.Body>\n              {hasCloseIcon && <Toast.CloseIcon aria-label=\"Close\" />}\n            </Toast>\n          )}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"toast-states":{startLoc:{col:27,line:18},endLoc:{col:1,line:189},startBody:{col:27,line:18},endBody:{col:1,line:189}}}},chromatic:{disable:!1}}};exports.ToastStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Default",props:{mode:"polite",icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With Icon",props:{mode:"polite",icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"On Close",props:{mode:"alert",hasCloseIcon:!0,icon:_canvasSystemIconsWeb.exclamationCircleIcon,iconColor:"cinnamon500",message:"Your workbook has an error."}},{label:"With Action",props:{mode:"dialog",hasAction:!0,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With small padding",props:{mode:"polite",hasCloseIcon:!0,padding:"s",icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With no depth",props:{mode:"polite",hasCloseIcon:!0,depth:"none",icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With depth value set to 1",props:{mode:"polite",hasCloseIcon:!0,depth:1,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With depth value set to 2",props:{mode:"polite",hasCloseIcon:!0,depth:2,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With depth value set to 3",props:{mode:"polite",hasCloseIcon:!0,depth:3,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With depth value set to 4",props:{mode:"polite",hasCloseIcon:!0,depth:4,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With depth value set to 5",props:{mode:"polite",hasCloseIcon:!0,depth:5,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With depth value set to 6",props:{mode:"polite",hasCloseIcon:!0,depth:6,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With custom width",props:{mode:"polite",hasCloseIcon:!0,width:300,icon:_canvasSystemIconsWeb.checkIcon,iconColor:"greenApple400",message:"Your workbook was successfully processed."}},{label:"With short mesage",props:{mode:"alert",hasCloseIcon:!0,width:300,icon:_canvasSystemIconsWeb.exclamationCircleIcon,iconColor:"cinnamon500",message:"There was an error"}}],columnProps:[{label:"Default",props:{}}],children:({mode,hasCloseIcon,hasAction,icon,iconColor,...props})=>(0,_jsxRuntime.jsxs)(_toast.Toast,{mode,...props,children:[(0,_jsxRuntime.jsx)(_toast.Toast.Icon,{icon,color:iconColor}),(0,_jsxRuntime.jsxs)(_toast.Toast.Body,{children:[(0,_jsxRuntime.jsx)(_toast.Toast.Message,{children:props.message}),hasAction&&(0,_jsxRuntime.jsx)(_toast.Toast.Link,{href:"#href",children:"Custom Link"})]}),hasCloseIcon&&(0,_jsxRuntime.jsx)(_toast.Toast.CloseIcon,{"aria-label":"Close"})]})})})};module.exports.__namedExportsOrder=["ToastStates"]}}]);