"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[9554],{"./modules/react/pagination/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.VisualStatesThemed=exports.VisualStatesRightToLeft=exports.VisualStatesLeftToRight=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_testing=__webpack_require__("./modules/react/testing/index.ts"),_storybook=__webpack_require__("./utils/storybook/index.ts"),_Pagination=__webpack_require__("./modules/react/pagination/lib/Pagination/index.tsx");exports.default={title:"Testing/Navigation/Pagination",component:_Pagination.Pagination,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import React from \'react\';\\nimport {ContentDirection} from \'@workday/canvas-kit-react/common\';\\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\\n\\nimport {customColorTheme} from \'../../../../utils/storybook\';\\n\\nimport {\\n  Pagination,\\n  getLastPage,\\n  getVisibleResultsMax,\\n  getVisibleResultsMin,\\n} from \'../lib/Pagination\';\\n\\nexport default {\\n  title: \'Testing/Navigation/Pagination\',\\n  component: Pagination,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst TableRenderer = ({theme}) => {\\n  const resultCount = 10;\\n  const totalCount = 100;\\n  const lastPage = getLastPage(resultCount, totalCount);\\n\\n  return (\\n    <StaticStates theme={theme} style={{display: \'inline-block\'}}>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: \'Step Controls\', props: {}},\\n          {label: \'Jump Controls\', props: {shouldShowJumpControls: true}},\\n          {label: \'GoTo Form\', props: {shouldShowJumpControls: true, shouldShowGoToForm: true}},\\n          {\\n            label: \'Additional Details\',\\n            props: {\\n              shouldShowJumpControls: true,\\n              shouldShowGoToForm: true,\\n              shouldShowAddtionalDetails: true,\\n            },\\n          },\\n        ]}\\n        columnProps={[\\n          {\\n            label: \'First Page is Active\',\\n            props: {},\\n          },\\n          {\\n            label: \'Middle Page is Active\',\\n            props: {\\n              initialCurrentPage: 5,\\n            },\\n          },\\n          {\\n            label: \'Last Page is Active\',\\n            props: {\\n              initialCurrentPage: 10,\\n            },\\n          },\\n        ]}\\n      >\\n        {props => (\\n          <Pagination\\n            aria-label=\\"Pagination\\"\\n            lastPage={lastPage}\\n            rangeSize={3}\\n            initialCurrentPage={props.initialCurrentPage}\\n          >\\n            <Pagination.Controls>\\n              {props.shouldShowJumpControls && <Pagination.JumpToFirstButton aria-label=\\"First\\" />}\\n              <Pagination.StepToPreviousButton aria-label=\\"Previous\\" />\\n              <Pagination.PageList>\\n                {({state}) =>\\n                  state.range.map(pageNumber => (\\n                    <Pagination.PageListItem key={pageNumber}>\\n                      <Pagination.PageButton\\n                        aria-label={`Page ${pageNumber}`}\\n                        pageNumber={pageNumber}\\n                      />\\n                    </Pagination.PageListItem>\\n                  ))\\n                }\\n              </Pagination.PageList>\\n              <Pagination.StepToNextButton aria-label=\\"Next\\" />\\n              {props.shouldShowJumpControls && <Pagination.JumpToLastButton aria-label=\\"Last\\" />}\\n              {props.shouldShowGoToForm && (\\n                <Pagination.GoToForm>\\n                  <Pagination.GoToTextInput aria-label=\\"Go to page number\\" />\\n                  <Pagination.GoToLabel>\\n                    {() =>\\n                      theme.canvas.direction === ContentDirection.RTL\\n                        ? `من 100 صفحات`\\n                        : `of ${totalCount} pages`\\n                    }\\n                  </Pagination.GoToLabel>\\n                </Pagination.GoToForm>\\n              )}\\n            </Pagination.Controls>\\n            <Pagination.AdditionalDetails shouldHideDetails={!props.shouldShowAddtionalDetails}>\\n              {({state}) =>\\n                theme.canvas.direction === ContentDirection.RTL\\n                  ? `${getVisibleResultsMax(\\n                      state.currentPage,\\n                      resultCount,\\n                      totalCount\\n                    )}-${getVisibleResultsMin(state.currentPage, resultCount)} من 100 صفحات`\\n                  : `${getVisibleResultsMin(state.currentPage, resultCount)}-${getVisibleResultsMax(\\n                      state.currentPage,\\n                      resultCount,\\n                      totalCount\\n                    )} of ${totalCount} pages`\\n              }\\n            </Pagination.AdditionalDetails>\\n          </Pagination>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  );\\n};\\n\\nexport const VisualStatesLeftToRight = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Left-To-Right Pagination</h2>\\n        <TableRenderer theme={{canvas: {direction: ContentDirection.LTR}}} />\\n      </>\\n    );\\n  },\\n};\\n\\nexport const VisualStatesThemed = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Themed</h2>\\n        <TableRenderer theme={{canvas: customColorTheme}} />\\n      </>\\n    );\\n  },\\n};\\n\\nexport const VisualStatesRightToLeft = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Right-To-Left Pagination</h2>\\n        <TableRenderer theme={{canvas: {direction: ContentDirection.RTL}}} />\\n      </>\\n    );\\n  },\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "VisualStatesLeftToRight": {\n    "startLoc": {\n      "col": 39,\n      "line": 123\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 132\n    },\n    "startBody": {\n      "col": 39,\n      "line": 123\n    },\n    "endBody": {\n      "col": 1,\n      "line": 132\n    }\n  },\n  "VisualStatesThemed": {\n    "startLoc": {\n      "col": 34,\n      "line": 134\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 143\n    },\n    "startBody": {\n      "col": 34,\n      "line": 134\n    },\n    "endBody": {\n      "col": 1,\n      "line": 143\n    }\n  },\n  "VisualStatesRightToLeft": {\n    "startLoc": {\n      "col": 39,\n      "line": 145\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 154\n    },\n    "startBody": {\n      "col": 39,\n      "line": 145\n    },\n    "endBody": {\n      "col": 1,\n      "line": 154\n    }\n  }\n};\n    \nimport React from \'react\';\nimport {ContentDirection} from \'@workday/canvas-kit-react/common\';\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\n\nimport {customColorTheme} from \'../../../../utils/storybook\';\n\nimport {\n  Pagination,\n  getLastPage,\n  getVisibleResultsMax,\n  getVisibleResultsMin,\n} from \'../lib/Pagination\';\n\nexport default {\n  title: \'Testing/Navigation/Pagination\',\n  component: Pagination,\n  parameters: {\n  "storySource": {\n    "source": "import React from \'react\';\\nimport {ContentDirection} from \'@workday/canvas-kit-react/common\';\\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\\n\\nimport {customColorTheme} from \'../../../../utils/storybook\';\\n\\nimport {\\n  Pagination,\\n  getLastPage,\\n  getVisibleResultsMax,\\n  getVisibleResultsMin,\\n} from \'../lib/Pagination\';\\n\\nexport default {\\n  title: \'Testing/Navigation/Pagination\',\\n  component: Pagination,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst TableRenderer = ({theme}) => {\\n  const resultCount = 10;\\n  const totalCount = 100;\\n  const lastPage = getLastPage(resultCount, totalCount);\\n\\n  return (\\n    <StaticStates theme={theme} style={{display: \'inline-block\'}}>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: \'Step Controls\', props: {}},\\n          {label: \'Jump Controls\', props: {shouldShowJumpControls: true}},\\n          {label: \'GoTo Form\', props: {shouldShowJumpControls: true, shouldShowGoToForm: true}},\\n          {\\n            label: \'Additional Details\',\\n            props: {\\n              shouldShowJumpControls: true,\\n              shouldShowGoToForm: true,\\n              shouldShowAddtionalDetails: true,\\n            },\\n          },\\n        ]}\\n        columnProps={[\\n          {\\n            label: \'First Page is Active\',\\n            props: {},\\n          },\\n          {\\n            label: \'Middle Page is Active\',\\n            props: {\\n              initialCurrentPage: 5,\\n            },\\n          },\\n          {\\n            label: \'Last Page is Active\',\\n            props: {\\n              initialCurrentPage: 10,\\n            },\\n          },\\n        ]}\\n      >\\n        {props => (\\n          <Pagination\\n            aria-label=\\"Pagination\\"\\n            lastPage={lastPage}\\n            rangeSize={3}\\n            initialCurrentPage={props.initialCurrentPage}\\n          >\\n            <Pagination.Controls>\\n              {props.shouldShowJumpControls && <Pagination.JumpToFirstButton aria-label=\\"First\\" />}\\n              <Pagination.StepToPreviousButton aria-label=\\"Previous\\" />\\n              <Pagination.PageList>\\n                {({state}) =>\\n                  state.range.map(pageNumber => (\\n                    <Pagination.PageListItem key={pageNumber}>\\n                      <Pagination.PageButton\\n                        aria-label={`Page ${pageNumber}`}\\n                        pageNumber={pageNumber}\\n                      />\\n                    </Pagination.PageListItem>\\n                  ))\\n                }\\n              </Pagination.PageList>\\n              <Pagination.StepToNextButton aria-label=\\"Next\\" />\\n              {props.shouldShowJumpControls && <Pagination.JumpToLastButton aria-label=\\"Last\\" />}\\n              {props.shouldShowGoToForm && (\\n                <Pagination.GoToForm>\\n                  <Pagination.GoToTextInput aria-label=\\"Go to page number\\" />\\n                  <Pagination.GoToLabel>\\n                    {() =>\\n                      theme.canvas.direction === ContentDirection.RTL\\n                        ? `من 100 صفحات`\\n                        : `of ${totalCount} pages`\\n                    }\\n                  </Pagination.GoToLabel>\\n                </Pagination.GoToForm>\\n              )}\\n            </Pagination.Controls>\\n            <Pagination.AdditionalDetails shouldHideDetails={!props.shouldShowAddtionalDetails}>\\n              {({state}) =>\\n                theme.canvas.direction === ContentDirection.RTL\\n                  ? `${getVisibleResultsMax(\\n                      state.currentPage,\\n                      resultCount,\\n                      totalCount\\n                    )}-${getVisibleResultsMin(state.currentPage, resultCount)} من 100 صفحات`\\n                  : `${getVisibleResultsMin(state.currentPage, resultCount)}-${getVisibleResultsMax(\\n                      state.currentPage,\\n                      resultCount,\\n                      totalCount\\n                    )} of ${totalCount} pages`\\n              }\\n            </Pagination.AdditionalDetails>\\n          </Pagination>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  );\\n};\\n\\nexport const VisualStatesLeftToRight = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Left-To-Right Pagination</h2>\\n        <TableRenderer theme={{canvas: {direction: ContentDirection.LTR}}} />\\n      </>\\n    );\\n  },\\n};\\n\\nexport const VisualStatesThemed = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Themed</h2>\\n        <TableRenderer theme={{canvas: customColorTheme}} />\\n      </>\\n    );\\n  },\\n};\\n\\nexport const VisualStatesRightToLeft = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Right-To-Left Pagination</h2>\\n        <TableRenderer theme={{canvas: {direction: ContentDirection.RTL}}} />\\n      </>\\n    );\\n  },\\n};\\n",\n    "locationsMap": {\n      "visual-states-left-to-right": {\n        "startLoc": {\n          "col": 39,\n          "line": 123\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 132\n        },\n        "startBody": {\n          "col": 39,\n          "line": 123\n        },\n        "endBody": {\n          "col": 1,\n          "line": 132\n        }\n      },\n      "visual-states-themed": {\n        "startLoc": {\n          "col": 34,\n          "line": 134\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 143\n        },\n        "startBody": {\n          "col": 34,\n          "line": 134\n        },\n        "endBody": {\n          "col": 1,\n          "line": 143\n        }\n      },\n      "visual-states-right-to-left": {\n        "startLoc": {\n          "col": 39,\n          "line": 145\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 154\n        },\n        "startBody": {\n          "col": 39,\n          "line": 145\n        },\n        "endBody": {\n          "col": 1,\n          "line": 154\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst TableRenderer = ({theme}) => {\n  const resultCount = 10;\n  const totalCount = 100;\n  const lastPage = getLastPage(resultCount, totalCount);\n\n  return (\n    <StaticStates theme={theme} style={{display: \'inline-block\'}}>\n      <ComponentStatesTable\n        rowProps={[\n          {label: \'Step Controls\', props: {}},\n          {label: \'Jump Controls\', props: {shouldShowJumpControls: true}},\n          {label: \'GoTo Form\', props: {shouldShowJumpControls: true, shouldShowGoToForm: true}},\n          {\n            label: \'Additional Details\',\n            props: {\n              shouldShowJumpControls: true,\n              shouldShowGoToForm: true,\n              shouldShowAddtionalDetails: true,\n            },\n          },\n        ]}\n        columnProps={[\n          {\n            label: \'First Page is Active\',\n            props: {},\n          },\n          {\n            label: \'Middle Page is Active\',\n            props: {\n              initialCurrentPage: 5,\n            },\n          },\n          {\n            label: \'Last Page is Active\',\n            props: {\n              initialCurrentPage: 10,\n            },\n          },\n        ]}\n      >\n        {props => (\n          <Pagination\n            aria-label="Pagination"\n            lastPage={lastPage}\n            rangeSize={3}\n            initialCurrentPage={props.initialCurrentPage}\n          >\n            <Pagination.Controls>\n              {props.shouldShowJumpControls && <Pagination.JumpToFirstButton aria-label="First" />}\n              <Pagination.StepToPreviousButton aria-label="Previous" />\n              <Pagination.PageList>\n                {({state}) =>\n                  state.range.map(pageNumber => (\n                    <Pagination.PageListItem key={pageNumber}>\n                      <Pagination.PageButton\n                        aria-label={`Page ${pageNumber}`}\n                        pageNumber={pageNumber}\n                      />\n                    </Pagination.PageListItem>\n                  ))\n                }\n              </Pagination.PageList>\n              <Pagination.StepToNextButton aria-label="Next" />\n              {props.shouldShowJumpControls && <Pagination.JumpToLastButton aria-label="Last" />}\n              {props.shouldShowGoToForm && (\n                <Pagination.GoToForm>\n                  <Pagination.GoToTextInput aria-label="Go to page number" />\n                  <Pagination.GoToLabel>\n                    {() =>\n                      theme.canvas.direction === ContentDirection.RTL\n                        ? `من 100 صفحات`\n                        : `of ${totalCount} pages`\n                    }\n                  </Pagination.GoToLabel>\n                </Pagination.GoToForm>\n              )}\n            </Pagination.Controls>\n            <Pagination.AdditionalDetails shouldHideDetails={!props.shouldShowAddtionalDetails}>\n              {({state}) =>\n                theme.canvas.direction === ContentDirection.RTL\n                  ? `${getVisibleResultsMax(\n                      state.currentPage,\n                      resultCount,\n                      totalCount\n                    )}-${getVisibleResultsMin(state.currentPage, resultCount)} من 100 صفحات`\n                  : `${getVisibleResultsMin(state.currentPage, resultCount)}-${getVisibleResultsMax(\n                      state.currentPage,\n                      resultCount,\n                      totalCount\n                    )} of ${totalCount} pages`\n              }\n            </Pagination.AdditionalDetails>\n          </Pagination>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  );\n};\n\nexport const VisualStatesLeftToRight = {\n  render: () => {\n    return (\n      <>\n        <h2>Left-To-Right Pagination</h2>\n        <TableRenderer theme={{canvas: {direction: ContentDirection.LTR}}} />\n      </>\n    );\n  },\n};;\n\nexport const VisualStatesThemed = {\n  render: () => {\n    return (\n      <>\n        <h2>Themed</h2>\n        <TableRenderer theme={{canvas: customColorTheme}} />\n      </>\n    );\n  },\n};;\n\nexport const VisualStatesRightToLeft = {\n  render: () => {\n    return (\n      <>\n        <h2>Right-To-Left Pagination</h2>\n        <TableRenderer theme={{canvas: {direction: ContentDirection.RTL}}} />\n      </>\n    );\n  },\n};\n',locationsMap:{"visual-states-left-to-right":{startLoc:{col:39,line:246},endLoc:{col:1,line:255},startBody:{col:39,line:246},endBody:{col:1,line:255}},"visual-states-themed":{startLoc:{col:34,line:257},endLoc:{col:1,line:266},startBody:{col:34,line:257},endBody:{col:1,line:266}},"visual-states-right-to-left":{startLoc:{col:39,line:268},endLoc:{col:1,line:277},startBody:{col:39,line:268},endBody:{col:1,line:277}}}},storySource:{source:"import React from 'react';\nimport {ContentDirection} from '@workday/canvas-kit-react/common';\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\n\nimport {customColorTheme} from '../../../../utils/storybook';\n\nimport {\n  Pagination,\n  getLastPage,\n  getVisibleResultsMax,\n  getVisibleResultsMin,\n} from '../lib/Pagination';\n\nexport default {\n  title: 'Testing/Navigation/Pagination',\n  component: Pagination,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst TableRenderer = ({theme}) => {\n  const resultCount = 10;\n  const totalCount = 100;\n  const lastPage = getLastPage(resultCount, totalCount);\n\n  return (\n    <StaticStates theme={theme} style={{display: 'inline-block'}}>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Step Controls', props: {}},\n          {label: 'Jump Controls', props: {shouldShowJumpControls: true}},\n          {label: 'GoTo Form', props: {shouldShowJumpControls: true, shouldShowGoToForm: true}},\n          {\n            label: 'Additional Details',\n            props: {\n              shouldShowJumpControls: true,\n              shouldShowGoToForm: true,\n              shouldShowAddtionalDetails: true,\n            },\n          },\n        ]}\n        columnProps={[\n          {\n            label: 'First Page is Active',\n            props: {},\n          },\n          {\n            label: 'Middle Page is Active',\n            props: {\n              initialCurrentPage: 5,\n            },\n          },\n          {\n            label: 'Last Page is Active',\n            props: {\n              initialCurrentPage: 10,\n            },\n          },\n        ]}\n      >\n        {props => (\n          <Pagination\n            aria-label=\"Pagination\"\n            lastPage={lastPage}\n            rangeSize={3}\n            initialCurrentPage={props.initialCurrentPage}\n          >\n            <Pagination.Controls>\n              {props.shouldShowJumpControls && <Pagination.JumpToFirstButton aria-label=\"First\" />}\n              <Pagination.StepToPreviousButton aria-label=\"Previous\" />\n              <Pagination.PageList>\n                {({state}) =>\n                  state.range.map(pageNumber => (\n                    <Pagination.PageListItem key={pageNumber}>\n                      <Pagination.PageButton\n                        aria-label={`Page ${pageNumber}`}\n                        pageNumber={pageNumber}\n                      />\n                    </Pagination.PageListItem>\n                  ))\n                }\n              </Pagination.PageList>\n              <Pagination.StepToNextButton aria-label=\"Next\" />\n              {props.shouldShowJumpControls && <Pagination.JumpToLastButton aria-label=\"Last\" />}\n              {props.shouldShowGoToForm && (\n                <Pagination.GoToForm>\n                  <Pagination.GoToTextInput aria-label=\"Go to page number\" />\n                  <Pagination.GoToLabel>\n                    {() =>\n                      theme.canvas.direction === ContentDirection.RTL\n                        ? `من 100 صفحات`\n                        : `of ${totalCount} pages`\n                    }\n                  </Pagination.GoToLabel>\n                </Pagination.GoToForm>\n              )}\n            </Pagination.Controls>\n            <Pagination.AdditionalDetails shouldHideDetails={!props.shouldShowAddtionalDetails}>\n              {({state}) =>\n                theme.canvas.direction === ContentDirection.RTL\n                  ? `${getVisibleResultsMax(\n                      state.currentPage,\n                      resultCount,\n                      totalCount\n                    )}-${getVisibleResultsMin(state.currentPage, resultCount)} من 100 صفحات`\n                  : `${getVisibleResultsMin(state.currentPage, resultCount)}-${getVisibleResultsMax(\n                      state.currentPage,\n                      resultCount,\n                      totalCount\n                    )} of ${totalCount} pages`\n              }\n            </Pagination.AdditionalDetails>\n          </Pagination>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  );\n};\n\nexport const VisualStatesLeftToRight = {\n  render: () => {\n    return (\n      <>\n        <h2>Left-To-Right Pagination</h2>\n        <TableRenderer theme={{canvas: {direction: ContentDirection.LTR}}} />\n      </>\n    );\n  },\n};\n\nexport const VisualStatesThemed = {\n  render: () => {\n    return (\n      <>\n        <h2>Themed</h2>\n        <TableRenderer theme={{canvas: customColorTheme}} />\n      </>\n    );\n  },\n};\n\nexport const VisualStatesRightToLeft = {\n  render: () => {\n    return (\n      <>\n        <h2>Right-To-Left Pagination</h2>\n        <TableRenderer theme={{canvas: {direction: ContentDirection.RTL}}} />\n      </>\n    );\n  },\n};\n",locationsMap:{"visual-states-left-to-right":{startLoc:{col:39,line:123},endLoc:{col:1,line:132},startBody:{col:39,line:123},endBody:{col:1,line:132}},"visual-states-themed":{startLoc:{col:34,line:134},endLoc:{col:1,line:143},startBody:{col:34,line:134},endBody:{col:1,line:143}},"visual-states-right-to-left":{startLoc:{col:39,line:145},endLoc:{col:1,line:154},startBody:{col:39,line:145},endBody:{col:1,line:154}}}},chromatic:{disable:!1}}};const TableRenderer=({theme})=>{const lastPage=(0,_Pagination.getLastPage)(10,100);return _react.default.createElement(_testing.StaticStates,{theme,style:{display:"inline-block"}},_react.default.createElement(_testing.ComponentStatesTable,{rowProps:[{label:"Step Controls",props:{}},{label:"Jump Controls",props:{shouldShowJumpControls:!0}},{label:"GoTo Form",props:{shouldShowJumpControls:!0,shouldShowGoToForm:!0}},{label:"Additional Details",props:{shouldShowJumpControls:!0,shouldShowGoToForm:!0,shouldShowAddtionalDetails:!0}}],columnProps:[{label:"First Page is Active",props:{}},{label:"Middle Page is Active",props:{initialCurrentPage:5}},{label:"Last Page is Active",props:{initialCurrentPage:10}}]},(props=>_react.default.createElement(_Pagination.Pagination,{"aria-label":"Pagination",lastPage,rangeSize:3,initialCurrentPage:props.initialCurrentPage},_react.default.createElement(_Pagination.Pagination.Controls,null,props.shouldShowJumpControls&&_react.default.createElement(_Pagination.Pagination.JumpToFirstButton,{"aria-label":"First"}),_react.default.createElement(_Pagination.Pagination.StepToPreviousButton,{"aria-label":"Previous"}),_react.default.createElement(_Pagination.Pagination.PageList,null,(({state})=>state.range.map((pageNumber=>_react.default.createElement(_Pagination.Pagination.PageListItem,{key:pageNumber},_react.default.createElement(_Pagination.Pagination.PageButton,{"aria-label":`Page ${pageNumber}`,pageNumber})))))),_react.default.createElement(_Pagination.Pagination.StepToNextButton,{"aria-label":"Next"}),props.shouldShowJumpControls&&_react.default.createElement(_Pagination.Pagination.JumpToLastButton,{"aria-label":"Last"}),props.shouldShowGoToForm&&_react.default.createElement(_Pagination.Pagination.GoToForm,null,_react.default.createElement(_Pagination.Pagination.GoToTextInput,{"aria-label":"Go to page number"}),_react.default.createElement(_Pagination.Pagination.GoToLabel,null,(()=>theme.canvas.direction===_common.ContentDirection.RTL?"من 100 صفحات":"of 100 pages")))),_react.default.createElement(_Pagination.Pagination.AdditionalDetails,{shouldHideDetails:!props.shouldShowAddtionalDetails},(({state})=>theme.canvas.direction===_common.ContentDirection.RTL?`${(0,_Pagination.getVisibleResultsMax)(state.currentPage,10,100)}-${(0,_Pagination.getVisibleResultsMin)(state.currentPage,10)} من 100 صفحات`:`${(0,_Pagination.getVisibleResultsMin)(state.currentPage,10)}-${(0,_Pagination.getVisibleResultsMax)(state.currentPage,10,100)} of 100 pages`))))))};TableRenderer.displayName="TableRenderer";exports.VisualStatesLeftToRight={render:()=>_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("h2",null,"Left-To-Right Pagination"),_react.default.createElement(TableRenderer,{theme:{canvas:{direction:_common.ContentDirection.LTR}}}))},exports.VisualStatesThemed={render:()=>_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("h2",null,"Themed"),_react.default.createElement(TableRenderer,{theme:{canvas:_storybook.customColorTheme}}))},exports.VisualStatesRightToLeft={render:()=>_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("h2",null,"Right-To-Left Pagination"),_react.default.createElement(TableRenderer,{theme:{canvas:{direction:_common.ContentDirection.RTL}}}))};module.exports.__namedExportsOrder=["VisualStatesThemed","VisualStatesRightToLeft","VisualStatesLeftToRight"]}}]);