"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8106],{"./modules/react/skeleton/stories/visual-testing/Skeleton.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SkeletonStates=void 0;(function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n})(__webpack_require__("./node_modules/react/index.js"));var _skeleton=__webpack_require__("./modules/react/skeleton/index.ts"),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}exports.default={title:"Testing/Indicators/Skeleton",component:_skeleton.Skeleton,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import * as React from \'react\';\\nimport {Skeleton} from \'@workday/canvas-kit-react/skeleton\';\\nimport styled from \'@emotion/styled\';\\n\\nexport default {\\n  title: \'Testing/Indicators/Skeleton\',\\n  component: Skeleton,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst Container = styled(\'span\')({\\n  width: \'60%\',\\n  height: \'100%\',\\n  margin: \'8px\',\\n});\\n\\nconst FlexContainer = styled(\'div\')({\\n  display: \'flex\',\\n});\\n\\nexport const SkeletonStates = {\\n  render: () => (\\n    <div className=\\"story\\">\\n      <h1>Custom Elements Skeleton</h1>\\n      <div>\\n        <Skeleton>\\n          <FlexContainer>\\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\\n            <Container>\\n              <Skeleton.Header />\\n            </Container>\\n          </FlexContainer>\\n          <div>\\n            <Skeleton.Text lineCount={3} />\\n          </div>\\n        </Skeleton>\\n      </div>\\n      <h1>Header Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Header />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Custom Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Text Skeleton</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={2} />\\n      </Skeleton>\\n      <h1>Text Skeleton Line Count 1</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={1} />\\n      </Skeleton>\\n      <h1>Multiple Line Count</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={20} />\\n      </Skeleton>\\n    </div>\\n  ),\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "SkeletonStates": {\n    "startLoc": {\n      "col": 30,\n      "line": 25\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 74\n    },\n    "startBody": {\n      "col": 30,\n      "line": 25\n    },\n    "endBody": {\n      "col": 1,\n      "line": 74\n    }\n  }\n};\n    \nimport * as React from \'react\';\nimport {Skeleton} from \'@workday/canvas-kit-react/skeleton\';\nimport styled from \'@emotion/styled\';\n\nexport default {\n  title: \'Testing/Indicators/Skeleton\',\n  component: Skeleton,\n  parameters: {\n  "storySource": {\n    "source": "import * as React from \'react\';\\nimport {Skeleton} from \'@workday/canvas-kit-react/skeleton\';\\nimport styled from \'@emotion/styled\';\\n\\nexport default {\\n  title: \'Testing/Indicators/Skeleton\',\\n  component: Skeleton,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst Container = styled(\'span\')({\\n  width: \'60%\',\\n  height: \'100%\',\\n  margin: \'8px\',\\n});\\n\\nconst FlexContainer = styled(\'div\')({\\n  display: \'flex\',\\n});\\n\\nexport const SkeletonStates = {\\n  render: () => (\\n    <div className=\\"story\\">\\n      <h1>Custom Elements Skeleton</h1>\\n      <div>\\n        <Skeleton>\\n          <FlexContainer>\\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\\n            <Container>\\n              <Skeleton.Header />\\n            </Container>\\n          </FlexContainer>\\n          <div>\\n            <Skeleton.Text lineCount={3} />\\n          </div>\\n        </Skeleton>\\n      </div>\\n      <h1>Header Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Header />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Custom Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Text Skeleton</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={2} />\\n      </Skeleton>\\n      <h1>Text Skeleton Line Count 1</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={1} />\\n      </Skeleton>\\n      <h1>Multiple Line Count</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={20} />\\n      </Skeleton>\\n    </div>\\n  ),\\n};\\n",\n    "locationsMap": {\n      "skeleton-states": {\n        "startLoc": {\n          "col": 30,\n          "line": 25\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 74\n        },\n        "startBody": {\n          "col": 30,\n          "line": 25\n        },\n        "endBody": {\n          "col": 1,\n          "line": 74\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst Container = styled(\'span\')({\n  width: \'60%\',\n  height: \'100%\',\n  margin: \'8px\',\n});\n\nconst FlexContainer = styled(\'div\')({\n  display: \'flex\',\n});\n\nexport const SkeletonStates = {\n  render: () => (\n    <div className="story">\n      <h1>Custom Elements Skeleton</h1>\n      <div>\n        <Skeleton>\n          <FlexContainer>\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\n            <Container>\n              <Skeleton.Header />\n            </Container>\n          </FlexContainer>\n          <div>\n            <Skeleton.Text lineCount={3} />\n          </div>\n        </Skeleton>\n      </div>\n      <h1>Header Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Header />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Custom Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Text Skeleton</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={2} />\n      </Skeleton>\n      <h1>Text Skeleton Line Count 1</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={1} />\n      </Skeleton>\n      <h1>Multiple Line Count</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={20} />\n      </Skeleton>\n    </div>\n  ),\n};\n',locationsMap:{"skeleton-states":{startLoc:{col:30,line:76},endLoc:{col:1,line:125},startBody:{col:30,line:76},endBody:{col:1,line:125}}}},storySource:{source:"import * as React from 'react';\nimport {Skeleton} from '@workday/canvas-kit-react/skeleton';\nimport styled from '@emotion/styled';\n\nexport default {\n  title: 'Testing/Indicators/Skeleton',\n  component: Skeleton,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst Container = styled('span')({\n  width: '60%',\n  height: '100%',\n  margin: '8px',\n});\n\nconst FlexContainer = styled('div')({\n  display: 'flex',\n});\n\nexport const SkeletonStates = {\n  render: () => (\n    <div className=\"story\">\n      <h1>Custom Elements Skeleton</h1>\n      <div>\n        <Skeleton>\n          <FlexContainer>\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\n            <Container>\n              <Skeleton.Header />\n            </Container>\n          </FlexContainer>\n          <div>\n            <Skeleton.Text lineCount={3} />\n          </div>\n        </Skeleton>\n      </div>\n      <h1>Header Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Header />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Custom Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Text Skeleton</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={2} />\n      </Skeleton>\n      <h1>Text Skeleton Line Count 1</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={1} />\n      </Skeleton>\n      <h1>Multiple Line Count</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={20} />\n      </Skeleton>\n    </div>\n  ),\n};\n",locationsMap:{"skeleton-states":{startLoc:{col:30,line:25},endLoc:{col:1,line:74},startBody:{col:30,line:25},endBody:{col:1,line:74}}}},chromatic:{disable:!1}}};const Container=(0,_styled.default)("span")({width:"60%",height:"100%",margin:"8px"}),FlexContainer=(0,_styled.default)("div")({display:"flex"});exports.SkeletonStates={render:()=>(0,_jsxRuntime.jsxs)("div",{className:"story",children:[(0,_jsxRuntime.jsx)("h1",{children:"Custom Elements Skeleton"}),(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsxs)(_skeleton.Skeleton,{children:[(0,_jsxRuntime.jsxs)(FlexContainer,{children:[(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Shape,{width:50,height:50,borderRadius:99}),(0,_jsxRuntime.jsx)(Container,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Header,{})})]}),(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Text,{lineCount:3})})]})}),(0,_jsxRuntime.jsx)("h1",{children:"Header Skeleton"}),(0,_jsxRuntime.jsx)(FlexContainer,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Header,{})})}),(0,_jsxRuntime.jsx)("h1",{children:"Shape Skeleton"}),(0,_jsxRuntime.jsx)(FlexContainer,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Shape,{width:120,height:120,borderRadius:99})})}),(0,_jsxRuntime.jsx)("h1",{children:"Custom Shape Skeleton"}),(0,_jsxRuntime.jsx)(FlexContainer,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Shape,{width:200,height:50,borderRadius:4})})}),(0,_jsxRuntime.jsx)("h1",{children:"Text Skeleton"}),(0,_jsxRuntime.jsx)(_skeleton.Skeleton,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Text,{lineCount:2})}),(0,_jsxRuntime.jsx)("h1",{children:"Text Skeleton Line Count 1"}),(0,_jsxRuntime.jsx)(_skeleton.Skeleton,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Text,{lineCount:1})}),(0,_jsxRuntime.jsx)("h1",{children:"Multiple Line Count"}),(0,_jsxRuntime.jsx)(_skeleton.Skeleton,{children:(0,_jsxRuntime.jsx)(_skeleton.Skeleton.Text,{lineCount:20})})]})};module.exports.__namedExportsOrder=["SkeletonStates"]}}]);