"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8974],{"./modules/docs/mdx/accessibility/PageStructure.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_PageStructure_LandmarkRegions__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./modules/docs/mdx/accessibility/examples/PageStructure/LandmarkRegions.tsx"),_examples_PageStructure_FullPageDemo__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/docs/mdx/accessibility/examples/PageStructure/FullPageDemo.tsx");function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p",h3:"h3",ul:"ul",li:"li",code:"code",a:"a"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_6__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Guides/Accessibility/Page Structure"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"making-webpages-easy-to-use-for-everyone",children:"Making Webpages Easy to Use for Everyone"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Making a webpage easy to understand is important for everyone, especially for people with\ndisabilities. We do this by giving the page a clear and meaningful structure. This guide explains\nhow to use landmark regions, headings, lists, and tables to organize a page."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"organizing-your-page-with-landmark-regions",children:"Organizing Your Page with Landmark Regions"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Imagine a webpage is like a house. It has different rooms for different purposes; a kitchen, a\nbedroom, a living room, and so on. A good webpage is set up the same way. It has different sections,\nlike a header at the top, a main content area, and a footer at the bottom."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"These sections are called landmark regions. They act like signs that tell a screen reader user where\nthey are on the page."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"A screen reader user can quickly jump to a specific section, like the main content, without having\nto listen to the whole page."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The most common landmark regions are:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<header>"}),": The top of the page."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<nav>"}),": The main navigation menu."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<main>"}),": The most important content on the page."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<footer>"}),": The bottom of the page."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"All the content on the page should be inside one of these landmark regions. If you have two\nnavigation sections, make sure to give them different names so a screen reader can tell them apart.\nFor example, a global navigation region should be distinguishable from a bread crumb navigation\nregion."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_PageStructure_LandmarkRegions__WEBPACK_IMPORTED_MODULE_4__.D}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"using-headings-to-outline-your-content",children:"Using Headings to Outline Your Content"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Headings are like the chapters and subheadings in a book. They create a clear outline for the page.\nJust like you can scan a book's table of contents to see what it's about, a screen reader user can\nget a list of all the headings on a page to understand its structure."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Start your page's main content with a single ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<h1>"})," heading. This is the most important title on\nthe page."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Use other headings (",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<h2>"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<h3>"}),", etc.) to create a clear order. Don't skip levels if possible.\nFor example, don't jump straight from an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<h1>"})," to an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<h4>"})," heading unless the content design\nhierarchy leaves no other options."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["The heading levels should match how important the text looks on the page. The biggest, boldest\ntitles should be ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<h1>"}),", and so on."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"full-page-demo",children:"Full Page Demo"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Further reading:\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/guides-accessibility-examples-page-header--docs",children:"Examples > Page Header"})," and\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/guides-accessibility-examples-side-panel-navigation--docs",children:"Examples > Side Panel Navigation"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_PageStructure_FullPageDemo__WEBPACK_IMPORTED_MODULE_5__.c})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_6__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/docs/mdx/accessibility/examples/GlobalHeader.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlobalHeader=exports.Basic=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_button=__webpack_require__("./modules/react/button/index.ts"),_avatar=__webpack_require__("./modules/preview-react/avatar/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_combobox=__webpack_require__("./modules/react/combobox/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_icon=__webpack_require__("./modules/react/icon/index.ts"),_badge=__webpack_require__("./modules/react/badge/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const tasks=["Request Time Off","Create Expense Report","Change Benefits"],styleOverrides={headerWrapper:(0,_canvasKitStyling.createStyles)({display:"flex",alignItems:"center",justifyContent:"space-between",boxSizing:"border-box",..._canvasTokensWeb.system.type.subtext.large,WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",backgroundColor:_canvasTokensWeb.system.color.bg.default,padding:_canvasTokensWeb.system.space.x1}),flexItems:(0,_canvasKitStyling.createStyles)({gap:_canvasTokensWeb.system.space.x4,alignItems:"center",marginX:_canvasTokensWeb.system.space.x3}),inputGroupInner:(0,_canvasKitStyling.createStyles)({marginLeft:"1rem",width:(0,_canvasKitStyling.px2rem)(20),transition:"opacity 100ms ease"}),comboboxContainer:(0,_canvasKitStyling.createStyles)({margin:"auto",width:"100%",maxWidth:_canvasKitStyling.calc.multiply(_canvasTokensWeb.system.space.x20,6)}),comboboxInput:(0,_canvasKitStyling.createStyles)({borderRadius:(0,_canvasKitStyling.px2rem)(1e3),width:"20rem"}),comboboxMenuList:(0,_canvasKitStyling.createStyles)({maxHeight:(0,_canvasKitStyling.px2rem)(200)}),menuButtonStyles:(0,_canvasKitStyling.createStyles)({textDecoration:"none",color:_canvasTokensWeb.system.color.fg.strong}),notificationContainerStyles:(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",position:"relative"}),countBadgeStyles:(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",position:"absolute",top:_canvasKitStyling.calc.negate(_canvasTokensWeb.system.space.x1),insetInlineEnd:_canvasKitStyling.calc.negate(_canvasTokensWeb.system.space.x1)}),actionButtonStyles:(0,_canvasKitStyling.createStyles)({gap:_canvasTokensWeb.system.space.x4,margin:_canvasTokensWeb.system.space.x4})},useAutocompleteInput=(0,_common.composeHooks)((0,_common.createElemPropsHook)(_combobox.useComboboxModel)((model=>({onKeyPress(event){model.events.show(event)}}))),_combobox.useComboboxInput),AutoCompleteInput=(0,_common.createSubcomponent)(_textInput.TextInput)({modelHook:_combobox.useComboboxModel,elemPropsHook:useAutocompleteInput})(((elemProps,Element)=>(0,_jsxRuntime.jsx)(_combobox.Combobox.Input,{as:Element,...elemProps}))),Basic=()=>{const[notifications,setNotifications]=React.useState(0);return(0,_jsxRuntime.jsxs)("header",{children:[(0,_jsxRuntime.jsx)(GlobalHeader,{notifications}),(0,_jsxRuntime.jsxs)(_layout.Flex,{cs:styleOverrides.actionButtonStyles,children:[(0,_jsxRuntime.jsx)(_button.SecondaryButton,{onClick:function handleAdd(){setNotifications((prev=>prev+1))},children:"Add notification"}),(0,_jsxRuntime.jsx)(_button.TertiaryButton,{onClick:function handleClear(){setNotifications(0)},children:"Clear"})]})]})};exports.Basic=Basic,Basic.displayName="Basic";const GlobalHeader=exports.GlobalHeader=(0,_common.createComponent)("div")({displayName:"GlobalHeader",Component:({notifications,...props})=>(0,_jsxRuntime.jsxs)("div",{className:styleOverrides.headerWrapper,children:[(0,_jsxRuntime.jsxs)(_layout.Flex,{cs:styleOverrides.flexItems,children:[(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"Global Navigation",type:"describe",children:(0,_jsxRuntime.jsx)(_button.TertiaryButton,{icon:_canvasSystemIconsWeb.justifyIcon,cs:styleOverrides.menuButtonStyles,children:"MENU"})}),(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"Workday Home",children:(0,_jsxRuntime.jsx)(_button.TertiaryButton,{children:(0,_jsxRuntime.jsx)("img",{src:"https://design.workday.com/images/ck-dub-logo-blue.svg",alt:""})})})]}),(0,_jsxRuntime.jsx)(_layout.Flex,{cs:styleOverrides.flexItems,children:(0,_jsxRuntime.jsx)(Autocomplete,{"aria-label":"Search Workday"})}),(0,_jsxRuntime.jsxs)(_layout.Flex,{cs:styleOverrides.flexItems,children:[(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"Assistant",children:(0,_jsxRuntime.jsx)(_button.TertiaryButton,{icon:_canvasSystemIconsWeb.assistantIcon})}),(0,_jsxRuntime.jsx)(NotificationLiveBadge,{cnt:notifications}),(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"My Tasks",children:(0,_jsxRuntime.jsx)(_button.TertiaryButton,{icon:_canvasSystemIconsWeb.inboxIcon})}),(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"Profile",children:(0,_jsxRuntime.jsx)(_avatar.Avatar,{name:"Logan McNeil",isDecorative:!0})})]})]})}),Autocomplete=(0,_common.createComponent)("div")({displayName:"Autocomplete",Component:props=>{const[searchText,setSearchText]=React.useState("");const{model,loader}=(0,_combobox.useComboboxLoader)({total:0,pageSize:20,load:async({pageNumber,pageSize,filter})=>new Promise((resolve=>{setTimeout((()=>{const start=(pageNumber-1)*pageSize,end=start+pageSize,filteredTasks=tasks.filter((i=>""===searchText.trim()||"string"!=typeof searchText||i.toLowerCase().includes(searchText.trim().toLowerCase()))),total=filteredTasks.length,items=filteredTasks.slice(start,end);resolve({items,total})}),300)})),onShow(){loader.load()}},_combobox.useComboboxModel);return(0,_jsxRuntime.jsxs)(_combobox.Combobox,{model,children:[(0,_jsxRuntime.jsxs)(_textInput.InputGroup,{children:[(0,_jsxRuntime.jsx)(_textInput.InputGroup.InnerStart,{cs:styleOverrides.inputGroupInner,children:(0,_jsxRuntime.jsx)(_icon.SystemIcon,{icon:_canvasSystemIconsWeb.searchIcon})}),(0,_jsxRuntime.jsx)(_textInput.InputGroup.Input,{as:AutoCompleteInput,cs:styleOverrides.comboboxInput,onChange:function handleChange(e){setSearchText(e.target.value)},value:searchText,...props})]}),(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Popper,{children:(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Card,{children:0===model.state.items.length?(0,_jsxRuntime.jsx)(_menu.StyledMenuItem,{as:"span",children:"No Results Found"}):model.state.items.length>0&&(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.List,{maxHeight:(0,_canvasKitStyling.px2rem)(200),children:item=>(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Item,{children:item})})})})]})}}),NotificationLiveBadge=(0,_common.createComponent)("span")({displayName:"NotificationLiveBadge",Component:({cnt=0,...props})=>{const btnId=(0,_common.useUniqueId)(),badgeId=(0,_common.useUniqueId)();return(0,_jsxRuntime.jsxs)(_layout.Flex,{cs:styleOverrides.notificationContainerStyles,children:[(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"Notifications",children:(0,_jsxRuntime.jsx)(_button.TertiaryButton,{id:btnId,icon:_canvasSystemIconsWeb.notificationsIcon,"aria-describedby":cnt>0?badgeId:void 0,...props})}),(0,_jsxRuntime.jsx)(_common.AriaLiveRegion,{"aria-labelledby":btnId,children:cnt>0&&(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_badge.CountBadge,{id:badgeId,count:cnt,limit:100,cs:styleOverrides.countBadgeStyles}),(0,_jsxRuntime.jsx)(_common.AccessibleHide,{children:"New"})]})})]})}});Basic.__RAW__="import * as React from 'react';\nimport {\n  AccessibleHide,\n  AriaLiveRegion,\n  composeHooks,\n  createComponent,\n  createElemPropsHook,\n  createSubcomponent,\n  ExtractProps,\n  useUniqueId,\n} from '@workday/canvas-kit-react/common';\nimport {system} from '@workday/canvas-tokens-web';\nimport {calc, createStyles, px2rem} from '@workday/canvas-kit-styling';\nimport {\n  notificationsIcon,\n  inboxIcon,\n  justifyIcon,\n  assistantIcon,\n  searchIcon,\n} from '@workday/canvas-system-icons-web';\n\nimport {SecondaryButton, TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {Avatar} from '@workday/canvas-kit-preview-react/avatar';\nimport {Flex, FlexProps} from '@workday/canvas-kit-react/layout';\nimport {LoadReturn} from '@workday/canvas-kit-react/collection';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {\n  Combobox,\n  useComboboxModel,\n  useComboboxInput,\n  useComboboxLoader,\n} from '@workday/canvas-kit-react/combobox';\nimport {InputGroup, TextInput} from '@workday/canvas-kit-react/text-input';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\n\ninterface GlobalHeaderProps extends FlexProps {\n  notifications: number;\n}\ninterface LiveCountBadgeProps extends FlexProps {\n  cnt: number;\n}\n\nconst tasks = ['Request Time Off', 'Create Expense Report', 'Change Benefits'];\n\nconst styleOverrides = {\n  headerWrapper: createStyles({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    ...system.type.subtext.large,\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    backgroundColor: system.color.bg.default,\n    padding: system.space.x1,\n  }),\n  flexItems: createStyles({\n    gap: system.space.x4,\n    alignItems: 'center',\n    marginX: system.space.x3,\n  }),\n  inputGroupInner: createStyles({\n    marginLeft: '1rem',\n    width: px2rem(20),\n    transition: 'opacity 100ms ease',\n  }),\n  comboboxContainer: createStyles({\n    margin: 'auto',\n    width: '100%',\n    maxWidth: calc.multiply(system.space.x20, 6),\n  }),\n  comboboxInput: createStyles({\n    borderRadius: px2rem(1000),\n    width: '20rem',\n  }),\n  comboboxMenuList: createStyles({\n    maxHeight: px2rem(200),\n  }),\n  menuButtonStyles: createStyles({\n    textDecoration: 'none',\n    color: system.color.fg.strong,\n  }),\n  notificationContainerStyles: createStyles({\n    boxSizing: 'border-box',\n    position: 'relative',\n  }),\n  countBadgeStyles: createStyles({\n    boxSizing: 'border-box',\n    position: 'absolute',\n    top: calc.negate(system.space.x1),\n    insetInlineEnd: calc.negate(system.space.x1),\n  }),\n  actionButtonStyles: createStyles({\n    gap: system.space.x4,\n    margin: system.space.x4,\n  }),\n};\n\nconst useAutocompleteInput = composeHooks(\n  createElemPropsHook(useComboboxModel)(model => {\n    return {\n      onKeyPress(event: React.KeyboardEvent) {\n        model.events.show(event);\n      },\n    };\n  }),\n  useComboboxInput\n);\n\nconst AutoCompleteInput = createSubcomponent(TextInput)({\n  modelHook: useComboboxModel,\n  elemPropsHook: useAutocompleteInput,\n})<ExtractProps<typeof Combobox.Input, never>>((elemProps, Element) => {\n  return <Combobox.Input as={Element} {...elemProps} />;\n});\n\nexport const Basic = () => {\n  const [notifications, setNotifications] = React.useState(0);\n\n  function handleAdd() {\n    setNotifications(prev => prev + 1);\n  }\n\n  function handleClear() {\n    setNotifications(0);\n  }\n\n  return (\n    <header>\n      <GlobalHeader notifications={notifications} />\n      <Flex cs={styleOverrides.actionButtonStyles}>\n        <SecondaryButton onClick={handleAdd}>Add notification</SecondaryButton>\n        <TertiaryButton onClick={handleClear}>Clear</TertiaryButton>\n      </Flex>\n    </header>\n  );\n};\n\nexport const GlobalHeader = createComponent('div')({\n  displayName: 'GlobalHeader',\n  Component: ({notifications, ...props}: GlobalHeaderProps) => (\n    <div className={styleOverrides.headerWrapper}>\n      <Flex cs={styleOverrides.flexItems}>\n        <Tooltip title=\"Global Navigation\" type=\"describe\">\n          <TertiaryButton icon={justifyIcon} cs={styleOverrides.menuButtonStyles}>\n            MENU\n          </TertiaryButton>\n        </Tooltip>\n        <Tooltip title=\"Workday Home\">\n          <TertiaryButton>\n            <img src=\"https://design.workday.com/images/ck-dub-logo-blue.svg\" alt=\"\" />\n          </TertiaryButton>\n        </Tooltip>\n      </Flex>\n      <Flex cs={styleOverrides.flexItems}>\n        <Autocomplete aria-label=\"Search Workday\" />\n      </Flex>\n      <Flex cs={styleOverrides.flexItems}>\n        <Tooltip title=\"Assistant\">\n          <TertiaryButton icon={assistantIcon} />\n        </Tooltip>\n\n        <NotificationLiveBadge cnt={notifications} />\n\n        <Tooltip title=\"My Tasks\">\n          <TertiaryButton icon={inboxIcon} />\n        </Tooltip>\n        <Tooltip title=\"Profile\">\n          <Avatar name=\"Logan McNeil\" isDecorative />\n        </Tooltip>\n      </Flex>\n    </div>\n  ),\n});\n\nconst Autocomplete = createComponent('div')({\n  displayName: 'Autocomplete',\n  Component: props => {\n    const [searchText, setSearchText] = React.useState('');\n\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n      setSearchText(e.target.value);\n    }\n\n    const {model, loader} = useComboboxLoader(\n      {\n        // You can start with any number that makes sense.\n        total: 0,\n\n        // Pick whatever number makes sense for your API\n        pageSize: 20,\n\n        // A load function that will be called by the loader. You must return a promise that returns\n        // an object like `{items: [], total: 0}`. The `items` will be merged into the loader's cache\n        async load({pageNumber, pageSize, filter}) {\n          return new Promise<LoadReturn<string>>(resolve => {\n            // simulate a server response by resolving after a period of time\n            setTimeout(() => {\n              // simulate paging and filtering based on pre-computed items\n              const start = (pageNumber - 1) * pageSize;\n              const end = start + pageSize;\n              const filteredTasks = tasks.filter(i => {\n                if (searchText.trim() === '' || typeof searchText !== 'string') {\n                  return true;\n                }\n                return i.toLowerCase().includes(searchText.trim().toLowerCase());\n              });\n\n              const total = filteredTasks.length;\n              const items = filteredTasks.slice(start, end);\n\n              resolve({\n                items,\n                total,\n              });\n            }, 300);\n          });\n        },\n        onShow() {\n          // The `shouldLoad` cancels while the combobox menu is hidden, so let's load when it is\n          // visible\n          loader.load();\n        },\n      },\n      useComboboxModel\n    );\n\n    return (\n      <Combobox model={model}>\n        <InputGroup>\n          <InputGroup.InnerStart cs={styleOverrides.inputGroupInner}>\n            <SystemIcon icon={searchIcon} />\n          </InputGroup.InnerStart>\n          <InputGroup.Input\n            as={AutoCompleteInput}\n            cs={styleOverrides.comboboxInput}\n            onChange={handleChange}\n            value={searchText}\n            {...props}\n          />\n        </InputGroup>\n        <Combobox.Menu.Popper>\n          <Combobox.Menu.Card>\n            {model.state.items.length === 0 ? (\n              <StyledMenuItem as=\"span\">No Results Found</StyledMenuItem>\n            ) : (\n              model.state.items.length > 0 && (\n                <Combobox.Menu.List maxHeight={px2rem(200)}>\n                  {item => <Combobox.Menu.Item>{item}</Combobox.Menu.Item>}\n                </Combobox.Menu.List>\n              )\n            )}\n          </Combobox.Menu.Card>\n        </Combobox.Menu.Popper>\n      </Combobox>\n    );\n  },\n});\n\nconst NotificationLiveBadge = createComponent('span')({\n  displayName: 'NotificationLiveBadge',\n  Component: ({cnt = 0, ...props}: LiveCountBadgeProps) => {\n    const btnId = useUniqueId();\n    const badgeId = useUniqueId();\n\n    return (\n      <Flex cs={styleOverrides.notificationContainerStyles}>\n        <Tooltip title=\"Notifications\">\n          <TertiaryButton\n            id={btnId}\n            icon={notificationsIcon}\n            aria-describedby={cnt > 0 ? badgeId : undefined}\n            {...props}\n          />\n        </Tooltip>\n        <AriaLiveRegion aria-labelledby={btnId}>\n          {cnt > 0 && (\n            <>\n              <CountBadge\n                id={badgeId}\n                count={cnt}\n                limit={100}\n                cs={styleOverrides.countBadgeStyles}\n              />\n              <AccessibleHide>New</AccessibleHide>\n            </>\n          )}\n        </AriaLiveRegion>\n      </Flex>\n    );\n  },\n});\n",GlobalHeader.__RAW__="import * as React from 'react';\nimport {\n  AccessibleHide,\n  AriaLiveRegion,\n  composeHooks,\n  createComponent,\n  createElemPropsHook,\n  createSubcomponent,\n  ExtractProps,\n  useUniqueId,\n} from '@workday/canvas-kit-react/common';\nimport {system} from '@workday/canvas-tokens-web';\nimport {calc, createStyles, px2rem} from '@workday/canvas-kit-styling';\nimport {\n  notificationsIcon,\n  inboxIcon,\n  justifyIcon,\n  assistantIcon,\n  searchIcon,\n} from '@workday/canvas-system-icons-web';\n\nimport {SecondaryButton, TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {Avatar} from '@workday/canvas-kit-preview-react/avatar';\nimport {Flex, FlexProps} from '@workday/canvas-kit-react/layout';\nimport {LoadReturn} from '@workday/canvas-kit-react/collection';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {\n  Combobox,\n  useComboboxModel,\n  useComboboxInput,\n  useComboboxLoader,\n} from '@workday/canvas-kit-react/combobox';\nimport {InputGroup, TextInput} from '@workday/canvas-kit-react/text-input';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\n\ninterface GlobalHeaderProps extends FlexProps {\n  notifications: number;\n}\ninterface LiveCountBadgeProps extends FlexProps {\n  cnt: number;\n}\n\nconst tasks = ['Request Time Off', 'Create Expense Report', 'Change Benefits'];\n\nconst styleOverrides = {\n  headerWrapper: createStyles({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    ...system.type.subtext.large,\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    backgroundColor: system.color.bg.default,\n    padding: system.space.x1,\n  }),\n  flexItems: createStyles({\n    gap: system.space.x4,\n    alignItems: 'center',\n    marginX: system.space.x3,\n  }),\n  inputGroupInner: createStyles({\n    marginLeft: '1rem',\n    width: px2rem(20),\n    transition: 'opacity 100ms ease',\n  }),\n  comboboxContainer: createStyles({\n    margin: 'auto',\n    width: '100%',\n    maxWidth: calc.multiply(system.space.x20, 6),\n  }),\n  comboboxInput: createStyles({\n    borderRadius: px2rem(1000),\n    width: '20rem',\n  }),\n  comboboxMenuList: createStyles({\n    maxHeight: px2rem(200),\n  }),\n  menuButtonStyles: createStyles({\n    textDecoration: 'none',\n    color: system.color.fg.strong,\n  }),\n  notificationContainerStyles: createStyles({\n    boxSizing: 'border-box',\n    position: 'relative',\n  }),\n  countBadgeStyles: createStyles({\n    boxSizing: 'border-box',\n    position: 'absolute',\n    top: calc.negate(system.space.x1),\n    insetInlineEnd: calc.negate(system.space.x1),\n  }),\n  actionButtonStyles: createStyles({\n    gap: system.space.x4,\n    margin: system.space.x4,\n  }),\n};\n\nconst useAutocompleteInput = composeHooks(\n  createElemPropsHook(useComboboxModel)(model => {\n    return {\n      onKeyPress(event: React.KeyboardEvent) {\n        model.events.show(event);\n      },\n    };\n  }),\n  useComboboxInput\n);\n\nconst AutoCompleteInput = createSubcomponent(TextInput)({\n  modelHook: useComboboxModel,\n  elemPropsHook: useAutocompleteInput,\n})<ExtractProps<typeof Combobox.Input, never>>((elemProps, Element) => {\n  return <Combobox.Input as={Element} {...elemProps} />;\n});\n\nexport const Basic = () => {\n  const [notifications, setNotifications] = React.useState(0);\n\n  function handleAdd() {\n    setNotifications(prev => prev + 1);\n  }\n\n  function handleClear() {\n    setNotifications(0);\n  }\n\n  return (\n    <header>\n      <GlobalHeader notifications={notifications} />\n      <Flex cs={styleOverrides.actionButtonStyles}>\n        <SecondaryButton onClick={handleAdd}>Add notification</SecondaryButton>\n        <TertiaryButton onClick={handleClear}>Clear</TertiaryButton>\n      </Flex>\n    </header>\n  );\n};\n\nexport const GlobalHeader = createComponent('div')({\n  displayName: 'GlobalHeader',\n  Component: ({notifications, ...props}: GlobalHeaderProps) => (\n    <div className={styleOverrides.headerWrapper}>\n      <Flex cs={styleOverrides.flexItems}>\n        <Tooltip title=\"Global Navigation\" type=\"describe\">\n          <TertiaryButton icon={justifyIcon} cs={styleOverrides.menuButtonStyles}>\n            MENU\n          </TertiaryButton>\n        </Tooltip>\n        <Tooltip title=\"Workday Home\">\n          <TertiaryButton>\n            <img src=\"https://design.workday.com/images/ck-dub-logo-blue.svg\" alt=\"\" />\n          </TertiaryButton>\n        </Tooltip>\n      </Flex>\n      <Flex cs={styleOverrides.flexItems}>\n        <Autocomplete aria-label=\"Search Workday\" />\n      </Flex>\n      <Flex cs={styleOverrides.flexItems}>\n        <Tooltip title=\"Assistant\">\n          <TertiaryButton icon={assistantIcon} />\n        </Tooltip>\n\n        <NotificationLiveBadge cnt={notifications} />\n\n        <Tooltip title=\"My Tasks\">\n          <TertiaryButton icon={inboxIcon} />\n        </Tooltip>\n        <Tooltip title=\"Profile\">\n          <Avatar name=\"Logan McNeil\" isDecorative />\n        </Tooltip>\n      </Flex>\n    </div>\n  ),\n});\n\nconst Autocomplete = createComponent('div')({\n  displayName: 'Autocomplete',\n  Component: props => {\n    const [searchText, setSearchText] = React.useState('');\n\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n      setSearchText(e.target.value);\n    }\n\n    const {model, loader} = useComboboxLoader(\n      {\n        // You can start with any number that makes sense.\n        total: 0,\n\n        // Pick whatever number makes sense for your API\n        pageSize: 20,\n\n        // A load function that will be called by the loader. You must return a promise that returns\n        // an object like `{items: [], total: 0}`. The `items` will be merged into the loader's cache\n        async load({pageNumber, pageSize, filter}) {\n          return new Promise<LoadReturn<string>>(resolve => {\n            // simulate a server response by resolving after a period of time\n            setTimeout(() => {\n              // simulate paging and filtering based on pre-computed items\n              const start = (pageNumber - 1) * pageSize;\n              const end = start + pageSize;\n              const filteredTasks = tasks.filter(i => {\n                if (searchText.trim() === '' || typeof searchText !== 'string') {\n                  return true;\n                }\n                return i.toLowerCase().includes(searchText.trim().toLowerCase());\n              });\n\n              const total = filteredTasks.length;\n              const items = filteredTasks.slice(start, end);\n\n              resolve({\n                items,\n                total,\n              });\n            }, 300);\n          });\n        },\n        onShow() {\n          // The `shouldLoad` cancels while the combobox menu is hidden, so let's load when it is\n          // visible\n          loader.load();\n        },\n      },\n      useComboboxModel\n    );\n\n    return (\n      <Combobox model={model}>\n        <InputGroup>\n          <InputGroup.InnerStart cs={styleOverrides.inputGroupInner}>\n            <SystemIcon icon={searchIcon} />\n          </InputGroup.InnerStart>\n          <InputGroup.Input\n            as={AutoCompleteInput}\n            cs={styleOverrides.comboboxInput}\n            onChange={handleChange}\n            value={searchText}\n            {...props}\n          />\n        </InputGroup>\n        <Combobox.Menu.Popper>\n          <Combobox.Menu.Card>\n            {model.state.items.length === 0 ? (\n              <StyledMenuItem as=\"span\">No Results Found</StyledMenuItem>\n            ) : (\n              model.state.items.length > 0 && (\n                <Combobox.Menu.List maxHeight={px2rem(200)}>\n                  {item => <Combobox.Menu.Item>{item}</Combobox.Menu.Item>}\n                </Combobox.Menu.List>\n              )\n            )}\n          </Combobox.Menu.Card>\n        </Combobox.Menu.Popper>\n      </Combobox>\n    );\n  },\n});\n\nconst NotificationLiveBadge = createComponent('span')({\n  displayName: 'NotificationLiveBadge',\n  Component: ({cnt = 0, ...props}: LiveCountBadgeProps) => {\n    const btnId = useUniqueId();\n    const badgeId = useUniqueId();\n\n    return (\n      <Flex cs={styleOverrides.notificationContainerStyles}>\n        <Tooltip title=\"Notifications\">\n          <TertiaryButton\n            id={btnId}\n            icon={notificationsIcon}\n            aria-describedby={cnt > 0 ? badgeId : undefined}\n            {...props}\n          />\n        </Tooltip>\n        <AriaLiveRegion aria-labelledby={btnId}>\n          {cnt > 0 && (\n            <>\n              <CountBadge\n                id={badgeId}\n                count={cnt}\n                limit={100}\n                cs={styleOverrides.countBadgeStyles}\n              />\n              <AccessibleHide>New</AccessibleHide>\n            </>\n          )}\n        </AriaLiveRegion>\n      </Flex>\n    );\n  },\n});\n"},"./modules/docs/mdx/accessibility/examples/PageStructure/BreadcrumbNavRegion.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BreadcrumbNavRegion=void 0;var _breadcrumbs=__webpack_require__("./modules/react/breadcrumbs/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const regionStyles=(0,_canvasKitStyling.createStyles)({border:`${(0,_canvasKitStyling.px2rem)(1)} solid ${_canvasTokensWeb.system.color.border.contrast.default}`,borderRadius:_canvasTokensWeb.system.shape.x2,paddingLeft:_canvasTokensWeb.system.space.x4}),BreadcrumbNavRegion=()=>(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs,{className:regionStyles,"aria-label":"Breadcrumbs",children:(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs.List,{children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",children:"Home"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",children:"Menus"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{children:"Dinner"})]})});exports.BreadcrumbNavRegion=BreadcrumbNavRegion,BreadcrumbNavRegion.displayName="BreadcrumbNavRegion",BreadcrumbNavRegion.__RAW__="import {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\nimport {createStyles, px2rem} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\nconst regionStyles = createStyles({\n  border: `${px2rem(1)} solid ${system.color.border.contrast.default}`,\n  borderRadius: system.shape.x2,\n  paddingLeft: system.space.x4,\n});\n\nexport const BreadcrumbNavRegion = () => {\n  return (\n    <Breadcrumbs className={regionStyles} aria-label=\"Breadcrumbs\">\n      <Breadcrumbs.List>\n        <Breadcrumbs.Item>\n          <Breadcrumbs.Link href=\"#\">Home</Breadcrumbs.Link>\n        </Breadcrumbs.Item>\n        <Breadcrumbs.Item>\n          <Breadcrumbs.Link href=\"#\">Menus</Breadcrumbs.Link>\n        </Breadcrumbs.Item>\n\n        <Breadcrumbs.CurrentItem>Dinner</Breadcrumbs.CurrentItem>\n      </Breadcrumbs.List>\n    </Breadcrumbs>\n  );\n};\n"},"./modules/docs/mdx/accessibility/examples/PageStructure/FullPageDemo.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.c=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_layout=__webpack_require__("./modules/react/layout/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_GlobalHeader=__webpack_require__("./modules/docs/mdx/accessibility/examples/GlobalHeader.tsx"),_SidePanelWithNavigation=__webpack_require__("./modules/docs/mdx/accessibility/examples/SidePanelWithNavigation.tsx"),_BreadcrumbNavRegion=__webpack_require__("./modules/docs/mdx/accessibility/examples/PageStructure/BreadcrumbNavRegion.tsx"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const gridLayoutStyles=(0,_canvasKitStyling.createStyles)({gridTemplateAreas:"'Header Header Header Header'\n    'SideBar BodyContent BodyContent BodyContent'\n    'Footer Footer Footer Footer'",gridGap:_canvasTokensWeb.system.space.x4,gridTemplateColumns:"1fr 9fr",gridTemplateRows:`auto ${(0,_canvasKitStyling.px2rem)(800)} auto`}),regionStyles=(0,_canvasKitStyling.createStyles)({border:`${(0,_canvasKitStyling.px2rem)(1)} solid ${_canvasTokensWeb.system.color.border.contrast.default}`,borderRadius:_canvasTokensWeb.system.shape.x2,padding:_canvasTokensWeb.system.space.x4}),verticalFlexStyles=(0,_canvasKitStyling.createStyles)({flexDirection:"column",gap:_canvasTokensWeb.system.space.x4}),headingStyles=(0,_canvasKitStyling.createStyles)({margin:_canvasTokensWeb.system.space.zero}),FullPageDemo=()=>{const[notifications,setNotifications]=_react.default.useState(0);return(0,_jsxRuntime.jsxs)(_layout.Grid,{cs:gridLayoutStyles,children:[(0,_jsxRuntime.jsx)(_layout.Grid,{as:"header",gridArea:"Header",cs:regionStyles,children:(0,_jsxRuntime.jsx)(_GlobalHeader.GlobalHeader,{notifications})}),(0,_jsxRuntime.jsx)(_layout.Grid,{as:"nav",gridArea:"SideBar",cs:regionStyles,children:(0,_jsxRuntime.jsx)(_layout.Flex,{cs:verticalFlexStyles,children:(0,_jsxRuntime.jsx)(_SidePanelWithNavigation.SideBarContent,{})})}),(0,_jsxRuntime.jsx)(_layout.Grid,{as:"main",gridArea:"BodyContent",cs:regionStyles,children:(0,_jsxRuntime.jsxs)(_layout.Flex,{cs:verticalFlexStyles,children:[(0,_jsxRuntime.jsx)(_BreadcrumbNavRegion.BreadcrumbNavRegion,{}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:_canvasTokensWeb.system.space.x4,children:[(0,_jsxRuntime.jsx)(_button.SecondaryButton,{onClick:function handleAdd(){setNotifications((prev=>prev+1))},children:"Add notification"}),(0,_jsxRuntime.jsx)(_button.TertiaryButton,{onClick:function handleClear(){setNotifications(0)},children:"Clear"})]}),(0,_jsxRuntime.jsx)(_text.Heading,{as:"h1",size:"large",cs:headingStyles,children:"Heading Level 1"}),(0,_jsxRuntime.jsx)(_text.Heading,{size:"medium",cs:headingStyles,children:"Heading Level 2"}),(0,_jsxRuntime.jsx)(_text.Heading,{as:"h3",size:"small",cs:headingStyles,children:"Heading Level 3"})]})}),(0,_jsxRuntime.jsx)(_layout.Grid,{as:"footer",gridArea:"Footer",cs:regionStyles,children:(0,_jsxRuntime.jsx)(_text.Heading,{size:"small",cs:headingStyles,children:"Page Footer"})})]})};exports.c=FullPageDemo,FullPageDemo.displayName="FullPageDemo",FullPageDemo.__RAW__="import React from 'react';\nimport {Flex, Grid} from '@workday/canvas-kit-react/layout';\nimport {Heading} from '@workday/canvas-kit-react/text';\nimport {SecondaryButton, TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {createStyles, px2rem} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\nimport {GlobalHeader} from '../GlobalHeader';\nimport {SideBarContent} from '../SidePanelWithNavigation';\nimport {BreadcrumbNavRegion} from './BreadcrumbNavRegion';\n\nconst gridLayoutStyles = createStyles({\n  gridTemplateAreas: `'Header Header Header Header'\n    'SideBar BodyContent BodyContent BodyContent'\n    'Footer Footer Footer Footer'`,\n  gridGap: system.space.x4,\n  gridTemplateColumns: '1fr 9fr',\n  gridTemplateRows: `auto ${px2rem(800)} auto`,\n});\n\nconst regionStyles = createStyles({\n  border: `${px2rem(1)} solid ${system.color.border.contrast.default}`,\n  borderRadius: system.shape.x2,\n  padding: system.space.x4,\n});\n\nconst verticalFlexStyles = createStyles({\n  flexDirection: 'column',\n  gap: system.space.x4,\n});\n\nconst headingStyles = createStyles({\n  margin: system.space.zero,\n});\n\nexport const FullPageDemo = () => {\n  const [notifications, setNotifications] = React.useState(0);\n\n  function handleAdd() {\n    setNotifications(prev => prev + 1);\n  }\n\n  function handleClear() {\n    setNotifications(0);\n  }\n\n  return (\n    <Grid cs={gridLayoutStyles}>\n      <Grid as=\"header\" gridArea=\"Header\" cs={regionStyles}>\n        <GlobalHeader notifications={notifications} />\n      </Grid>\n      <Grid as=\"nav\" gridArea=\"SideBar\" cs={regionStyles}>\n        <Flex cs={verticalFlexStyles}>\n          <SideBarContent />\n        </Flex>\n      </Grid>\n      <Grid as=\"main\" gridArea=\"BodyContent\" cs={regionStyles}>\n        <Flex cs={verticalFlexStyles}>\n          <BreadcrumbNavRegion />\n          <Flex gap={system.space.x4}>\n            <SecondaryButton onClick={handleAdd}>Add notification</SecondaryButton>\n            <TertiaryButton onClick={handleClear}>Clear</TertiaryButton>\n          </Flex>\n          <Heading as=\"h1\" size=\"large\" cs={headingStyles}>\n            Heading Level 1\n          </Heading>\n          <Heading size=\"medium\" cs={headingStyles}>\n            Heading Level 2\n          </Heading>\n          <Heading as=\"h3\" size=\"small\" cs={headingStyles}>\n            Heading Level 3\n          </Heading>\n        </Flex>\n      </Grid>\n      <Grid as=\"footer\" gridArea=\"Footer\" cs={regionStyles}>\n        <Heading size=\"small\" cs={headingStyles}>\n          Page Footer\n        </Heading>\n      </Grid>\n    </Grid>\n  );\n};\n"},"./modules/docs/mdx/accessibility/examples/PageStructure/LandmarkRegions.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.D=void 0;var _layout=__webpack_require__("./modules/react/layout/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const gridLayoutStyles=(0,_canvasKitStyling.createStyles)({gridTemplateAreas:"'Header Header Header Header' 'SideBar BodyContent BodyContent BodyContent' 'Footer Footer Footer Footer'",gridGap:_canvasTokensWeb.system.space.x4,gridTemplateColumns:"3fr 9fr",gridTemplateRows:`auto ${(0,_canvasKitStyling.px2rem)(300)} auto`}),regionStyles=(0,_canvasKitStyling.createStyles)({border:`${(0,_canvasKitStyling.px2rem)(1)} solid ${_canvasTokensWeb.system.color.border.contrast.default}`,borderRadius:_canvasTokensWeb.system.shape.x2,padding:_canvasTokensWeb.system.space.x4}),headingStyles=(0,_canvasKitStyling.createStyles)({margin:_canvasTokensWeb.system.space.zero}),LandmarkRegaions=()=>(0,_jsxRuntime.jsxs)(_layout.Grid,{cs:gridLayoutStyles,children:[(0,_jsxRuntime.jsx)(_layout.Grid,{as:"header",gridArea:"Header",cs:regionStyles,children:(0,_jsxRuntime.jsx)(_text.Heading,{size:"small",cs:headingStyles,children:"Page Header"})}),(0,_jsxRuntime.jsx)(_layout.Grid,{as:"nav",gridArea:"SideBar",cs:regionStyles,children:(0,_jsxRuntime.jsx)(_text.Heading,{size:"small",cs:headingStyles,children:"Navigation"})}),(0,_jsxRuntime.jsx)(_layout.Grid,{as:"main",gridArea:"BodyContent",cs:regionStyles,children:(0,_jsxRuntime.jsx)(_text.Heading,{size:"small",cs:headingStyles,children:"Main Content"})}),(0,_jsxRuntime.jsx)(_layout.Grid,{as:"footer",gridArea:"Footer",cs:regionStyles,children:(0,_jsxRuntime.jsx)(_text.Heading,{size:"small",cs:headingStyles,children:"Page Footer"})})]});exports.D=LandmarkRegaions,LandmarkRegaions.displayName="LandmarkRegaions",LandmarkRegaions.__RAW__='import {Grid} from \'@workday/canvas-kit-react/layout\';\nimport {Heading} from \'@workday/canvas-kit-react/text\';\nimport {createStyles, px2rem} from \'@workday/canvas-kit-styling\';\nimport {system} from \'@workday/canvas-tokens-web\';\n\nconst gridLayoutStyles = createStyles({\n  gridTemplateAreas:\n    "\'Header Header Header Header\' \'SideBar BodyContent BodyContent BodyContent\' \'Footer Footer Footer Footer\'",\n  gridGap: system.space.x4,\n  gridTemplateColumns: \'3fr 9fr\',\n  gridTemplateRows: `auto ${px2rem(300)} auto`,\n});\n\nconst regionStyles = createStyles({\n  border: `${px2rem(1)} solid ${system.color.border.contrast.default}`,\n  borderRadius: system.shape.x2,\n  padding: system.space.x4,\n});\n\nconst headingStyles = createStyles({\n  margin: system.space.zero,\n});\n\nexport const LandmarkRegaions = () => {\n  return (\n    <Grid cs={gridLayoutStyles}>\n      <Grid as="header" gridArea="Header" cs={regionStyles}>\n        <Heading size="small" cs={headingStyles}>\n          Page Header\n        </Heading>\n      </Grid>\n      <Grid as="nav" gridArea="SideBar" cs={regionStyles}>\n        <Heading size="small" cs={headingStyles}>\n          Navigation\n        </Heading>\n      </Grid>\n      <Grid as="main" gridArea="BodyContent" cs={regionStyles}>\n        <Heading size="small" cs={headingStyles}>\n          Main Content\n        </Heading>\n      </Grid>\n      <Grid as="footer" gridArea="Footer" cs={regionStyles}>\n        <Heading size="small" cs={headingStyles}>\n          Page Footer\n        </Heading>\n      </Grid>\n    </Grid>\n  );\n};\n'},"./modules/docs/mdx/accessibility/examples/SidePanelWithNavigation.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WithNavigation=exports.SideBarContent=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_sidePanel=__webpack_require__("./modules/preview-react/side-panel/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_expandable=__webpack_require__("./modules/react/expandable/index.ts"),_icon=__webpack_require__("./modules/react/icon/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const data={bestsellers:{icon:_canvasSystemIconsWeb.ribbonIcon,title:"Best Sellers",subtitle:"Award winning sweet treats",items:["Mango Coco Sago","Matcha Creme Pie","Key Lime Cheesecake","Tiramisu"]},cakes:{icon:_canvasSystemIconsWeb.birthdayIcon,title:"Custom Cakes",subtitle:"To celebrate your life milestones",items:["Anniversary","Birthday","Graduation","Wedding"]}},stylesOverride={navContainer:(0,_canvasKitStyling.createStyles)({height:(0,_canvasKitStyling.px2rem)(800),positio:"relative",backgroundColor:_canvasTokensWeb.system.color.bg.alt.default}),heading:(0,_canvasKitStyling.createStyles)({margin:_canvasTokensWeb.system.space.zero}),toggleBtn:(0,_canvasKitStyling.createStyles)({top:_canvasTokensWeb.system.space.zero}),accordionContainer:(0,_canvasKitStyling.createStyles)({listStyle:"none",flexDirection:"column",rowGap:_canvasTokensWeb.system.space.zero,paddingInlineStart:_canvasTokensWeb.system.space.zero}),accordionIcon:(0,_canvasKitStyling.createStyles)({verticalAlign:"middle",padding:_canvasTokensWeb.system.space.x1}),accordionSubText:(0,_canvasKitStyling.createStyles)({margin:_canvasTokensWeb.system.space.zero}),listContainer:(0,_canvasKitStyling.createStyles)({listStyle:"none",padding:_canvasTokensWeb.system.space.x4}),compactListContainer:(0,_canvasKitStyling.createStyles)({listStyle:"none",padding:_canvasTokensWeb.system.space.x4,flexDirection:"column",marginTop:_canvasTokensWeb.system.space.x8}),links:(0,_canvasKitStyling.createStyles)({textDecoration:"none",padding:_canvasTokensWeb.system.space.x4}),linkCheck:(0,_canvasKitStyling.createStyles)({marginLeft:"auto"}),flyOut:(0,_canvasKitStyling.createStyles)({marginTop:"8rem"})},Accordion=({config})=>{const[currentPage,setCurrentPage]=React.useState(""),handleClick=e=>{e.preventDefault();const target=e.target;setCurrentPage(target.textContent||"")};return(0,_jsxRuntime.jsxs)(_expandable.Expandable,{children:[(0,_jsxRuntime.jsxs)(_expandable.Expandable.Target,{children:[(0,_jsxRuntime.jsx)(_icon.SystemIcon,{cs:stylesOverride.accordionIcon,icon:config.icon}),(0,_jsxRuntime.jsxs)(_expandable.Expandable.Title,{children:[config.title,(0,_jsxRuntime.jsx)(_text.Subtext,{size:"medium",cs:stylesOverride.accordionSubText,children:config.subtitle})]}),(0,_jsxRuntime.jsx)(_expandable.Expandable.Icon,{iconPosition:"end"})]}),(0,_jsxRuntime.jsx)(_expandable.Expandable.Content,{as:"ul",cs:stylesOverride.listContainer,children:config.items.map((i=>(0,_jsxRuntime.jsx)("li",{children:(0,_jsxRuntime.jsxs)(_layout.Flex,{as:"a",href:"#","aria-current":i===currentPage?"true":void 0,className:stylesOverride.links,onClick:handleClick,children:[i,i===currentPage&&(0,_jsxRuntime.jsx)(_icon.SystemIcon,{icon:_canvasSystemIconsWeb.checkIcon,cs:stylesOverride.linkCheck})]})},i)))})]})};Accordion.displayName="Accordion";const IconButtonMenu=({config})=>(0,_jsxRuntime.jsxs)(_menu.Menu,{children:[(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:config.title,placement:"right",children:(0,_jsxRuntime.jsx)(_menu.Menu.Target,{as:_button.TertiaryButton,children:(0,_jsxRuntime.jsx)(_icon.SystemIcon,{icon:config.icon})})}),(0,_jsxRuntime.jsx)(_menu.Menu.Popper,{placement:"right",children:(0,_jsxRuntime.jsx)(_menu.Menu.Card,{cs:stylesOverride.flyOut,children:(0,_jsxRuntime.jsx)(_menu.Menu.List,{children:config.items.map((i=>(0,_jsxRuntime.jsx)(_menu.Menu.Item,{children:i},i)))})})})]});IconButtonMenu.displayName="IconButtonMenu";const CompactView=()=>(0,_jsxRuntime.jsxs)(_layout.Flex,{as:"ul",cs:stylesOverride.compactListContainer,children:[(0,_jsxRuntime.jsx)(_layout.Flex.Item,{as:"li",children:(0,_jsxRuntime.jsx)(IconButtonMenu,{config:data.bestsellers})}),(0,_jsxRuntime.jsx)(_layout.Flex.Item,{as:"li",children:(0,_jsxRuntime.jsx)(IconButtonMenu,{config:data.cakes})})]});CompactView.displayName="CompactView";const ExpandedView=()=>(0,_jsxRuntime.jsxs)(_layout.Flex,{as:"ul",cs:stylesOverride.accordionContainer,children:[(0,_jsxRuntime.jsx)(_layout.Flex.Item,{as:"li",children:(0,_jsxRuntime.jsx)(Accordion,{config:data.bestsellers})}),(0,_jsxRuntime.jsx)(_layout.Flex.Item,{as:"li",children:(0,_jsxRuntime.jsx)(Accordion,{config:data.cakes})})]});ExpandedView.displayName="ExpandedView";const SideBarContent=()=>{const{expanded,panelProps,labelProps,controlProps}=(0,_sidePanel.useSidePanel)();return(0,_jsxRuntime.jsxs)(_sidePanel.SidePanel,{as:"div",touched:panelProps.touched,expanded:panelProps.expanded,children:[(0,_jsxRuntime.jsx)(_text.Heading,{size:"small",cs:stylesOverride.heading,...labelProps,hidden:!expanded||void 0,children:"Cake or Death Bakery"}),(0,_jsxRuntime.jsx)(_sidePanel.SidePanel.ToggleButton,{cs:stylesOverride.toggleBtn,...controlProps}),expanded?(0,_jsxRuntime.jsx)(ExpandedView,{}):(0,_jsxRuntime.jsx)(CompactView,{})]})};exports.SideBarContent=SideBarContent,SideBarContent.displayName="SideBarContent";const WithNavigation=()=>(0,_jsxRuntime.jsx)(_layout.Flex,{as:"nav",cs:stylesOverride.navContainer,children:(0,_jsxRuntime.jsx)(SideBarContent,{})});exports.WithNavigation=WithNavigation,WithNavigation.displayName="WithNavigation",SideBarContent.__RAW__="import * as React from 'react';\nimport {system} from '@workday/canvas-tokens-web';\nimport {SidePanel, useSidePanel} from '@workday/canvas-kit-preview-react/side-panel';\nimport {Flex} from '@workday/canvas-kit-react/layout';\nimport {Heading, Subtext} from '@workday/canvas-kit-react/text';\nimport {Expandable} from '@workday/canvas-kit-react/expandable';\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\nimport {TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {Menu} from '@workday/canvas-kit-react/menu';\nimport {birthdayIcon, checkIcon, ribbonIcon} from '@workday/canvas-system-icons-web';\nimport {createStyles, px2rem} from '@workday/canvas-kit-styling';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {CanvasSystemIcon} from '@workday/design-assets-types';\n\ninterface AccordionItem {\n  icon: CanvasSystemIcon;\n  title: string;\n  subtitle: string;\n  items: string[];\n}\n\nconst data = {\n  bestsellers: {\n    icon: ribbonIcon,\n    title: 'Best Sellers',\n    subtitle: 'Award winning sweet treats',\n    items: ['Mango Coco Sago', 'Matcha Creme Pie', 'Key Lime Cheesecake', 'Tiramisu'],\n  },\n  cakes: {\n    icon: birthdayIcon,\n    title: 'Custom Cakes',\n    subtitle: 'To celebrate your life milestones',\n    items: ['Anniversary', 'Birthday', 'Graduation', 'Wedding'],\n  },\n};\n\nconst stylesOverride = {\n  navContainer: createStyles({\n    height: px2rem(800),\n    positio: 'relative',\n    backgroundColor: system.color.bg.alt.default,\n  }),\n  heading: createStyles({\n    margin: system.space.zero,\n  }),\n  toggleBtn: createStyles({\n    top: system.space.zero,\n  }),\n  accordionContainer: createStyles({\n    listStyle: 'none',\n    flexDirection: 'column',\n    rowGap: system.space.zero,\n    paddingInlineStart: system.space.zero,\n  }),\n  accordionIcon: createStyles({\n    verticalAlign: 'middle',\n    padding: system.space.x1,\n  }),\n  accordionSubText: createStyles({\n    margin: system.space.zero,\n  }),\n  listContainer: createStyles({\n    listStyle: 'none',\n    padding: system.space.x4,\n  }),\n  compactListContainer: createStyles({\n    listStyle: 'none',\n    padding: system.space.x4,\n    flexDirection: 'column',\n    marginTop: system.space.x8,\n  }),\n  links: createStyles({\n    textDecoration: 'none',\n    padding: system.space.x4,\n  }),\n  linkCheck: createStyles({\n    marginLeft: 'auto',\n  }),\n  flyOut: createStyles({\n    marginTop: '8rem',\n  }),\n};\n\nconst Accordion = ({config}: {config: AccordionItem}) => {\n  const [currentPage, setCurrentPage] = React.useState('');\n\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    const target = e.target as HTMLAnchorElement;\n    setCurrentPage(target.textContent || '');\n  };\n\n  return (\n    <Expandable>\n      <Expandable.Target>\n        <SystemIcon cs={stylesOverride.accordionIcon} icon={config.icon} />\n        <Expandable.Title>\n          {config.title}\n          <Subtext size=\"medium\" cs={stylesOverride.accordionSubText}>\n            {config.subtitle}\n          </Subtext>\n        </Expandable.Title>\n        <Expandable.Icon iconPosition=\"end\" />\n      </Expandable.Target>\n      <Expandable.Content as=\"ul\" cs={stylesOverride.listContainer}>\n        {config.items.map((i: string) => {\n          return (\n            <li key={i}>\n              <Flex\n                as=\"a\"\n                href=\"#\"\n                aria-current={i === currentPage ? 'true' : undefined}\n                className={stylesOverride.links}\n                onClick={handleClick}\n              >\n                {i}\n                {i === currentPage && <SystemIcon icon={checkIcon} cs={stylesOverride.linkCheck} />}\n              </Flex>\n            </li>\n          );\n        })}\n      </Expandable.Content>\n    </Expandable>\n  );\n};\n\nconst IconButtonMenu = ({config}: {config: AccordionItem}) => {\n  return (\n    <Menu>\n      <Tooltip title={config.title} placement=\"right\">\n        <Menu.Target as={TertiaryButton}>\n          <SystemIcon icon={config.icon} />\n        </Menu.Target>\n      </Tooltip>\n      <Menu.Popper placement=\"right\">\n        <Menu.Card cs={stylesOverride.flyOut}>\n          <Menu.List>\n            {config.items.map((i: string) => (\n              <Menu.Item key={i}>{i}</Menu.Item>\n            ))}\n          </Menu.List>\n        </Menu.Card>\n      </Menu.Popper>\n    </Menu>\n  );\n};\n\nconst CompactView = () => {\n  return (\n    <Flex as=\"ul\" cs={stylesOverride.compactListContainer}>\n      <Flex.Item as=\"li\">\n        <IconButtonMenu config={data.bestsellers} />\n      </Flex.Item>\n      <Flex.Item as=\"li\">\n        <IconButtonMenu config={data.cakes} />\n      </Flex.Item>\n    </Flex>\n  );\n};\n\nconst ExpandedView = () => {\n  return (\n    <Flex as=\"ul\" cs={stylesOverride.accordionContainer}>\n      <Flex.Item as=\"li\">\n        <Accordion config={data.bestsellers} />\n      </Flex.Item>\n      <Flex.Item as=\"li\">\n        <Accordion config={data.cakes} />\n      </Flex.Item>\n    </Flex>\n  );\n};\n\nexport const SideBarContent = () => {\n  const {expanded, panelProps, labelProps, controlProps} = useSidePanel();\n\n  return (\n    <SidePanel as=\"div\" touched={panelProps.touched} expanded={panelProps.expanded}>\n      <Heading\n        size=\"small\"\n        cs={stylesOverride.heading}\n        {...labelProps}\n        hidden={!expanded ? true : undefined}\n      >\n        Cake or Death Bakery\n      </Heading>\n      <SidePanel.ToggleButton cs={stylesOverride.toggleBtn} {...controlProps} />\n      {expanded ? <ExpandedView /> : <CompactView />}\n    </SidePanel>\n  );\n};\n\nexport const WithNavigation = () => {\n  return (\n    <Flex as=\"nav\" cs={stylesOverride.navContainer}>\n      <SideBarContent />\n    </Flex>\n  );\n};\n",WithNavigation.__RAW__="import * as React from 'react';\nimport {system} from '@workday/canvas-tokens-web';\nimport {SidePanel, useSidePanel} from '@workday/canvas-kit-preview-react/side-panel';\nimport {Flex} from '@workday/canvas-kit-react/layout';\nimport {Heading, Subtext} from '@workday/canvas-kit-react/text';\nimport {Expandable} from '@workday/canvas-kit-react/expandable';\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\nimport {TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {Menu} from '@workday/canvas-kit-react/menu';\nimport {birthdayIcon, checkIcon, ribbonIcon} from '@workday/canvas-system-icons-web';\nimport {createStyles, px2rem} from '@workday/canvas-kit-styling';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {CanvasSystemIcon} from '@workday/design-assets-types';\n\ninterface AccordionItem {\n  icon: CanvasSystemIcon;\n  title: string;\n  subtitle: string;\n  items: string[];\n}\n\nconst data = {\n  bestsellers: {\n    icon: ribbonIcon,\n    title: 'Best Sellers',\n    subtitle: 'Award winning sweet treats',\n    items: ['Mango Coco Sago', 'Matcha Creme Pie', 'Key Lime Cheesecake', 'Tiramisu'],\n  },\n  cakes: {\n    icon: birthdayIcon,\n    title: 'Custom Cakes',\n    subtitle: 'To celebrate your life milestones',\n    items: ['Anniversary', 'Birthday', 'Graduation', 'Wedding'],\n  },\n};\n\nconst stylesOverride = {\n  navContainer: createStyles({\n    height: px2rem(800),\n    positio: 'relative',\n    backgroundColor: system.color.bg.alt.default,\n  }),\n  heading: createStyles({\n    margin: system.space.zero,\n  }),\n  toggleBtn: createStyles({\n    top: system.space.zero,\n  }),\n  accordionContainer: createStyles({\n    listStyle: 'none',\n    flexDirection: 'column',\n    rowGap: system.space.zero,\n    paddingInlineStart: system.space.zero,\n  }),\n  accordionIcon: createStyles({\n    verticalAlign: 'middle',\n    padding: system.space.x1,\n  }),\n  accordionSubText: createStyles({\n    margin: system.space.zero,\n  }),\n  listContainer: createStyles({\n    listStyle: 'none',\n    padding: system.space.x4,\n  }),\n  compactListContainer: createStyles({\n    listStyle: 'none',\n    padding: system.space.x4,\n    flexDirection: 'column',\n    marginTop: system.space.x8,\n  }),\n  links: createStyles({\n    textDecoration: 'none',\n    padding: system.space.x4,\n  }),\n  linkCheck: createStyles({\n    marginLeft: 'auto',\n  }),\n  flyOut: createStyles({\n    marginTop: '8rem',\n  }),\n};\n\nconst Accordion = ({config}: {config: AccordionItem}) => {\n  const [currentPage, setCurrentPage] = React.useState('');\n\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    const target = e.target as HTMLAnchorElement;\n    setCurrentPage(target.textContent || '');\n  };\n\n  return (\n    <Expandable>\n      <Expandable.Target>\n        <SystemIcon cs={stylesOverride.accordionIcon} icon={config.icon} />\n        <Expandable.Title>\n          {config.title}\n          <Subtext size=\"medium\" cs={stylesOverride.accordionSubText}>\n            {config.subtitle}\n          </Subtext>\n        </Expandable.Title>\n        <Expandable.Icon iconPosition=\"end\" />\n      </Expandable.Target>\n      <Expandable.Content as=\"ul\" cs={stylesOverride.listContainer}>\n        {config.items.map((i: string) => {\n          return (\n            <li key={i}>\n              <Flex\n                as=\"a\"\n                href=\"#\"\n                aria-current={i === currentPage ? 'true' : undefined}\n                className={stylesOverride.links}\n                onClick={handleClick}\n              >\n                {i}\n                {i === currentPage && <SystemIcon icon={checkIcon} cs={stylesOverride.linkCheck} />}\n              </Flex>\n            </li>\n          );\n        })}\n      </Expandable.Content>\n    </Expandable>\n  );\n};\n\nconst IconButtonMenu = ({config}: {config: AccordionItem}) => {\n  return (\n    <Menu>\n      <Tooltip title={config.title} placement=\"right\">\n        <Menu.Target as={TertiaryButton}>\n          <SystemIcon icon={config.icon} />\n        </Menu.Target>\n      </Tooltip>\n      <Menu.Popper placement=\"right\">\n        <Menu.Card cs={stylesOverride.flyOut}>\n          <Menu.List>\n            {config.items.map((i: string) => (\n              <Menu.Item key={i}>{i}</Menu.Item>\n            ))}\n          </Menu.List>\n        </Menu.Card>\n      </Menu.Popper>\n    </Menu>\n  );\n};\n\nconst CompactView = () => {\n  return (\n    <Flex as=\"ul\" cs={stylesOverride.compactListContainer}>\n      <Flex.Item as=\"li\">\n        <IconButtonMenu config={data.bestsellers} />\n      </Flex.Item>\n      <Flex.Item as=\"li\">\n        <IconButtonMenu config={data.cakes} />\n      </Flex.Item>\n    </Flex>\n  );\n};\n\nconst ExpandedView = () => {\n  return (\n    <Flex as=\"ul\" cs={stylesOverride.accordionContainer}>\n      <Flex.Item as=\"li\">\n        <Accordion config={data.bestsellers} />\n      </Flex.Item>\n      <Flex.Item as=\"li\">\n        <Accordion config={data.cakes} />\n      </Flex.Item>\n    </Flex>\n  );\n};\n\nexport const SideBarContent = () => {\n  const {expanded, panelProps, labelProps, controlProps} = useSidePanel();\n\n  return (\n    <SidePanel as=\"div\" touched={panelProps.touched} expanded={panelProps.expanded}>\n      <Heading\n        size=\"small\"\n        cs={stylesOverride.heading}\n        {...labelProps}\n        hidden={!expanded ? true : undefined}\n      >\n        Cake or Death Bakery\n      </Heading>\n      <SidePanel.ToggleButton cs={stylesOverride.toggleBtn} {...controlProps} />\n      {expanded ? <ExpandedView /> : <CompactView />}\n    </SidePanel>\n  );\n};\n\nexport const WithNavigation = () => {\n  return (\n    <Flex as=\"nav\" cs={stylesOverride.navContainer}>\n      <SideBarContent />\n    </Flex>\n  );\n};\n"}}]);