"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[2047],{"./modules/styling/stories/mdx/MergingStyles.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/preview-react/information-highlight/index.ts"),_workday_canvas_tokens_web__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/system/index.js"),_examples_StylingOverrides__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/styling/stories/mdx/examples/StylingOverrides.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",a:"a",pre:"pre",em:"em",h3:"h3"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return _workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight||_missingMdxReference("InformationHighlight",!1),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight.Body||_missingMdxReference("InformationHighlight.Body",!0),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight.Heading||_missingMdxReference("InformationHighlight.Heading",!0),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight.Icon||_missingMdxReference("InformationHighlight.Icon",!0),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Styling/Guides/Merging Styles"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"merging-styles",children:"Merging Styles"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"mergestyles",children:"mergeStyles"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In v9, we used ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/styled"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/react"})," for all styling which is a runtime styling\nsolution. Starting in v10, we're migrating our styling to a more static solution using\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStyles"})," and the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["For a transition period, we're opting for backwards compatibility. If style props are present,\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://emotion.sh/docs/styled",target:"_blank",rel:"nofollow noopener noreferrer",children:"styled components"})," are used, or the\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://emotion.sh/docs/css-prop",target:"_blank",rel:"nofollow noopener noreferrer",children:"css prop"})," is used in a component, Emotion's style merging will be\ninvoked to make sure the following style precedence:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStyles > CSS Prop > Styled Component > Style props\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["This will mean that any ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"css"})," prop or use of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"styled"})," within the component tree ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"per element"})," will\ncause style class merging. For example:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import styled from '@emotion/styled';\nimport {createStyles} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\nconst styles1 = createStyles({\n  padding: 4,\n});\n\nconst styles2 = createStyles({\n  padding: 12,\n});\n\nconst Component1 = props => {\n  return <div {...mergeStyles(props, [styles1])} />;\n};\n\nconst Component2 = props => {\n  return <Component1 cs={styles2} />;\n};\n\nconst Component3 = styled(Component1)({\n  padding: 8,\n});\n\nconst Component4 = props => {\n  return <Component3 cs={styles2} />;\n};\n\nexport default () => (\n  <>\n    <Component1 />\n    <Component2 />\n    <Component3 />\n    <Component4 />\n  </>\n);\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"styled"})," component API is forcing ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"mergeStyles"})," to go into Emotion merge mode, which removes the\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"style1"})," class name and creates a new class based on all the merged style properties. So\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:".component3"})," is a new class created by Emotion at render time that merges ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:".style1"})," and\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"{padding: 8px}"}),". ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Component4"})," renders ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Component3"})," with a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop, but ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Component3"})," is already in\nmerge mode and so ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Component4"})," will also merge all styles into a new class name of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:".component4"}),"\nthat has the styles from ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:".style1"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:".component3"}),", and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"{padding: 12px}"}),":"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'<head>\n  <style>\n    .styles1 {\n      padding: 4px;\n    }\n    .styles2 {\n      padding: 8px;\n    }\n    .component3 {\n      padding: 4px;\n      padding: 8px;\n    }\n    .component4 {\n      padding: 4px;\n      padding: 8px;\n      padding: 12px;\n    }\n  </style>\n</head>\n\n<div class="styles1"></div>\n<div class="styles1 styles2"></div>\n<div class="component3"></div>\n<div class="component4"></div>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"css"})," prop and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"styled"})," component APIs will rewrite the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"className"})," React prop by iterating over\nall class names and seeing if any exist within the cache. If a class name does exist in the cache,\nthe CSS properties are copied to a new style property map until all the class names are evaluated\nand removed from the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"className"})," prop. Emotion will then combine all the CSS properties and inject a\nnew ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"StyleSheet"})," with a new class name and add that class name to the element."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The following example shows this style merging."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_StylingOverrides__WEBPACK_IMPORTED_MODULE_6__.q}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["CSS style property merging works by\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity",target:"_blank",rel:"nofollow noopener noreferrer",children:"CSS specificity"}),". If two matching\nselectors have the same specificity, the last defined property wins. Stencils take advantage of this\nby making all styles have the same specificity of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"0-1-0"})," and inserting ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"base"})," styles, then\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"modifiers"})," (in order), then ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"compound"})," modifiers (in order). This means if a property was defined\nin ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"base"}),", a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"modifier"}),", and a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"compound"})," modifier, the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"compound"})," modifier would win because it is\nthe last defined. This should be the expected order."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight,{className:"sb-unstyled",variant:"caution",cs:{marginBlock:_workday_canvas_tokens_web__WEBPACK_IMPORTED_MODULE_7__.space.x4},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight.Icon,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight.Heading,{children:"Caution"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_5__.InformationHighlight.Body,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["While we support ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"mergeStyles"})," we'd advise against using this in your components so that users\ncan get the performance benefit of static styling using utilities like ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStyles"})," and\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStencil"})," in tandem with the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop."]})})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"mergestyles-api",children:"mergeStyles API"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.SymbolDoc,{hideHeading:!0,name:"mergeStyles"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"handlecsprop",children:"handleCsProp"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["But what about when using components that use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/react"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/styled"}),"? Those libraries\nuse a different approach. Instead of multiple class names, they use a single, merged class name."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"handleCsProp"})," was created to handle integration with existing components that use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"css"})," prop\nfrom ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/react"})," or the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"styled"})," components from ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/styled"}),". If a class name from one of\nthose libraries is detected, style merging will follow the same rules as those libraries. Instead of\nmultiple class names, a single class name with all matching properties is created. The\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"handleCsProp"})," also takes care of merging ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"style"})," props, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"className"})," props, and can handle the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"}),"\nprop:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"const myStencil = createStencil({\n  // ...\n});\n\nconst MyComponent = elemProps => {\n  return <div {...handleProps(elemProps, myStencil({}))} />;\n};\n\n// All props will be merged for you\n<MyComponent style={{color: 'red'}} className=\"my-classname\" cs={{position: 'relative'}} />;\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"handleCsProp"})," will make sure the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"style"})," prop is passed to the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"div"})," and that the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"my-classname"}),"\nCSS class name appears on the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"div"}),"'s class list. Also the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop will add the appropriate styles\nto the element via a CSS class name. If your component needs to handle being passed a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"className"}),",\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"style"}),", or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop, use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"handleCsProp"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"handlecsprop-api",children:"handleCsProp API"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.SymbolDoc,{hideHeading:!0,name:"handleCsProp"})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)};function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}},"./modules/styling/stories/mdx/examples/StylingOverrides.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.q=void 0;(function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n})(__webpack_require__("./node_modules/react/index.js"));var _styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_react2=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const backgroundColors={cssProp:(0,_canvasKitStyling.cssVar)(_canvasTokensWeb.base.chiliMango500),styledComponent:(0,_canvasKitStyling.cssVar)(_canvasTokensWeb.base.kiwi500),styleProps:(0,_canvasKitStyling.cssVar)(_canvasTokensWeb.base.pomegranate500),createStyles:(0,_canvasKitStyling.cssVar)(_canvasTokensWeb.base.grapeSoda500)},StyledPrimaryButton=(0,_styled.default)(_button.PrimaryButton)({backgroundColor:backgroundColors.styledComponent}),styles=(0,_canvasKitStyling.createStyles)({backgroundColor:backgroundColors.createStyles}),CSSProp=()=>(0,_jsxRuntime.jsx)("div",{style:{color:"white",padding:"0 4px",height:40,width:100,backgroundColor:backgroundColors.cssProp},children:"CSS Prop"});CSSProp.displayName="CSSProp";const StyledComponent=()=>(0,_jsxRuntime.jsx)("div",{style:{color:"white",padding:"0 4px",height:40,width:100,backgroundColor:backgroundColors.styledComponent},children:"Styled Component"});StyledComponent.displayName="StyledComponent";const CreateStyles=()=>(0,_jsxRuntime.jsx)("div",{style:{color:"white",padding:"0 4px",height:40,width:100,backgroundColor:backgroundColors.createStyles},children:"createStyles"});CreateStyles.displayName="CreateStyles";const StyleProps=()=>(0,_jsxRuntime.jsx)("div",{style:{color:"white",padding:"0 4px",height:40,width:100,backgroundColor:backgroundColors.styleProps},children:"Style Props"});StyleProps.displayName="StyleProps";const cssProp={css:{backgroundColor:backgroundColors.cssProp}},StylingOverrides=()=>(0,_jsxRuntime.jsxs)(_layout.Flex,{flexDirection:"column",minHeight:"100vh",gap:"s",children:[(0,_jsxRuntime.jsxs)(_layout.Flex,{flexDirection:"column",gap:"s",children:[(0,_jsxRuntime.jsx)("h2",{children:"Buttons"}),(0,_jsxRuntime.jsxs)(_layout.Flex,{flexDirection:"row",gap:"s",children:[(0,_jsxRuntime.jsx)(_button.PrimaryButton,{cs:styles,children:"createStyles"}),(0,_react2.jsx)(_button.PrimaryButton,{...cssProp},"CSS Prop"),(0,_jsxRuntime.jsx)(StyledPrimaryButton,{children:"Styled Component"}),(0,_jsxRuntime.jsx)(_button.PrimaryButton,{backgroundColor:backgroundColors.styleProps,children:"Style Props"})]}),(0,_jsxRuntime.jsx)("div",{children:(0,_react2.jsx)(_button.PrimaryButton,{...cssProp,cs:styles},"createStyles + CSS Prop")}),(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsx)(StyledPrimaryButton,{cs:styles,children:"createStyles + Styled Component"})}),(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsx)(_button.PrimaryButton,{cs:styles,backgroundColor:backgroundColors.styleProps,children:"createStyles + Style Props"})}),(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsx)(StyledPrimaryButton,{backgroundColor:backgroundColors.styleProps,cs:styles,children:"createStyles + Styled Component + Style Props"})}),(0,_jsxRuntime.jsx)("div",{children:(0,_react2.jsx)(StyledPrimaryButton,{...cssProp,backgroundColor:backgroundColors.styleProps,cs:styles},"createStyles + CSS Prop + Styled Component + Style Props")}),(0,_jsxRuntime.jsx)("div",{children:(0,_react2.jsx)(StyledPrimaryButton,{...cssProp},"CSS Prop + Styled Component")}),(0,_jsxRuntime.jsx)("div",{children:(0,_react2.jsx)(_button.PrimaryButton,{...cssProp,backgroundColor:backgroundColors.styleProps},"CSS Prop + Style Props")}),(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsx)(StyledPrimaryButton,{backgroundColor:backgroundColors.styleProps,children:"Styled Component + Style Props"})})]}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)("p",{children:"Legend:"}),(0,_jsxRuntime.jsx)(CreateStyles,{}),(0,_jsxRuntime.jsx)(CSSProp,{}),(0,_jsxRuntime.jsx)(StyledComponent,{}),(0,_jsxRuntime.jsx)(StyleProps,{})]}),(0,_jsxRuntime.jsxs)("p",{children:["Style Precedence: ",(0,_jsxRuntime.jsx)("strong",{children:"createStyles"})," > ",(0,_jsxRuntime.jsx)("strong",{children:"CSS Props"})," >"," ",(0,_jsxRuntime.jsx)("strong",{children:"Styled Component"})," > ",(0,_jsxRuntime.jsx)("strong",{children:"Style Props"})]})]});exports.q=StylingOverrides,StylingOverrides.displayName="StylingOverrides",StylingOverrides.__RAW__="import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {jsx} from '@emotion/react';\n\nimport {Flex} from '@workday/canvas-kit-react/layout';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\nimport {base} from '@workday/canvas-tokens-web';\nimport {createStyles, cssVar} from '@workday/canvas-kit-styling';\n\nconst backgroundColors = {\n  cssProp: cssVar(base.chiliMango500),\n  styledComponent: cssVar(base.kiwi500),\n  styleProps: cssVar(base.pomegranate500),\n  createStyles: cssVar(base.grapeSoda500),\n};\n\nconst StyledPrimaryButton = styled(PrimaryButton)({\n  backgroundColor: backgroundColors.styledComponent,\n});\n\nconst styles = createStyles({\n  backgroundColor: backgroundColors.createStyles,\n});\n\nconst CSSProp = () => (\n  <div\n    style={{\n      color: 'white',\n      padding: '0 4px',\n      height: 40,\n      width: 100,\n      backgroundColor: backgroundColors.cssProp,\n    }}\n  >\n    CSS Prop\n  </div>\n);\nconst StyledComponent = () => (\n  <div\n    style={{\n      color: 'white',\n      padding: '0 4px',\n      height: 40,\n      width: 100,\n      backgroundColor: backgroundColors.styledComponent,\n    }}\n  >\n    Styled Component\n  </div>\n);\nconst CreateStyles = () => (\n  <div\n    style={{\n      color: 'white',\n      padding: '0 4px',\n      height: 40,\n      width: 100,\n      backgroundColor: backgroundColors.createStyles,\n    }}\n  >\n    createStyles\n  </div>\n);\nconst StyleProps = () => (\n  <div\n    style={{\n      color: 'white',\n      padding: '0 4px',\n      height: 40,\n      width: 100,\n      backgroundColor: backgroundColors.styleProps,\n    }}\n  >\n    Style Props\n  </div>\n);\n\n// We use this object and cast to `{}` to keep TypeScript happy. Emotion extends the JSX interface\n// to include the `css` prop, but the `jsx` function type doesn't accept the `css` prop. Casting to\n// an empty object keeps TypeScript happy and the `css` prop is valid at runtime.\nconst cssProp = {css: {backgroundColor: backgroundColors.cssProp}} as {};\n\nexport const StylingOverrides = () => {\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\" gap=\"s\">\n      <Flex flexDirection=\"column\" gap=\"s\">\n        <h2>Buttons</h2>\n        <Flex flexDirection=\"row\" gap=\"s\">\n          <PrimaryButton cs={styles}>createStyles</PrimaryButton>\n          {jsx(PrimaryButton, {...cssProp}, 'CSS Prop')}\n          <StyledPrimaryButton>Styled Component</StyledPrimaryButton>\n          <PrimaryButton backgroundColor={backgroundColors.styleProps}>Style Props</PrimaryButton>\n        </Flex>\n        <div>\n          {jsx(\n            PrimaryButton,\n            {\n              ...cssProp,\n              cs: styles,\n            },\n            'createStyles + CSS Prop'\n          )}\n        </div>\n        <div>\n          <StyledPrimaryButton cs={styles}>createStyles + Styled Component</StyledPrimaryButton>\n        </div>\n        <div>\n          <PrimaryButton cs={styles} backgroundColor={backgroundColors.styleProps}>\n            createStyles + Style Props\n          </PrimaryButton>\n        </div>\n        <div>\n          <StyledPrimaryButton backgroundColor={backgroundColors.styleProps} cs={styles}>\n            createStyles + Styled Component + Style Props\n          </StyledPrimaryButton>\n        </div>\n        <div>\n          {jsx(\n            StyledPrimaryButton,\n            {\n              ...cssProp,\n              backgroundColor: backgroundColors.styleProps,\n              cs: styles,\n            },\n            'createStyles + CSS Prop + Styled Component + Style Props'\n          )}\n        </div>\n        <div>{jsx(StyledPrimaryButton, {...cssProp}, 'CSS Prop + Styled Component')}</div>\n        <div>\n          {jsx(\n            PrimaryButton,\n            {\n              ...cssProp,\n              backgroundColor: backgroundColors.styleProps,\n            },\n            'CSS Prop + Style Props'\n          )}\n        </div>\n        <div>\n          <StyledPrimaryButton backgroundColor={backgroundColors.styleProps}>\n            Styled Component + Style Props\n          </StyledPrimaryButton>\n        </div>\n      </Flex>\n      <div>\n        <p>Legend:</p>\n        <CreateStyles />\n        <CSSProp />\n        <StyledComponent />\n        <StyleProps />\n      </div>\n      <p>\n        Style Precedence: <strong>createStyles</strong> &gt; <strong>CSS Props</strong> &gt;{' '}\n        <strong>Styled Component</strong> &gt; <strong>Style Props</strong>\n      </p>\n    </Flex>\n  );\n};\n"}}]);