"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8051],{"./modules/react/layout/stories/visual-testing/Box.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.BoxStates=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_layout=__webpack_require__("./modules/react/layout/index.ts"),_testing=__webpack_require__("./modules/react/testing/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts");exports.default={title:"Testing/Layout/Box",component:_layout.Box,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\n\\nimport {Box} from '@workday/canvas-kit-react/layout';\\nimport {ComponentStatesTable} from '@workday/canvas-kit-react/testing';\\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\\n\\nexport default {\\n  title: 'Testing/Layout/Box',\\n  component: Box,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst cellDefaultProps = {\\n  backgroundColor: 'soap400',\\n  depth: 2,\\n  display: 'inline-block',\\n  paddingY: 'xxs',\\n  position: 'relative',\\n};\\n\\nexport const BoxStates = {\\n  render: () => {\\n    return (\\n      <>\\n        <p>Note: Standard Props have no bidirectional support</p>\\n        <ComponentStatesTable\\n          columnProps={[\\n            {\\n              label: 'Standard Props',\\n              props: {\\n                ...cellDefaultProps,\\n                borderLeft: 'solid 4px',\\n                borderLeftColor: 'cinnamon500',\\n                borderRight: 'solid 8px',\\n                borderRightColor: 'sourLemon500',\\n                left: '8px',\\n                marginLeft: 'm',\\n                paddingLeft: 's',\\n                paddingRight: 'l',\\n              },\\n            },\\n            {\\n              label: 'Logical Props',\\n              props: {\\n                ...cellDefaultProps,\\n                borderInlineStart: 'solid 4px',\\n                borderInlineStartColor: 'cinnamon500',\\n                borderInlineEnd: 'solid 8px',\\n                borderInlineEndColor: 'sourLemon500',\\n                insetInlineStart: '8px',\\n                marginInlineStart: 'm',\\n                paddingInlineStart: 's',\\n                paddingInlineEnd: 'l',\\n              },\\n            },\\n          ]}\\n          rowProps={[\\n            {label: 'LTR', props: {theme: {canvas: {direction: ContentDirection.LTR}}}},\\n            {label: 'RTL', props: {theme: {canvas: {direction: ContentDirection.RTL}}}},\\n          ]}\\n        >\\n          {props => {\\n            return (\\n              <CanvasProvider theme={props.theme}>\\n                <Box {...props}>Box</Box>\\n              </CanvasProvider>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </>\\n    );\\n  },\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"BoxStates\": {\n    \"startLoc\": {\n      \"col\": 25,\n      \"line\": 25\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 77\n    },\n    \"startBody\": {\n      \"col\": 25,\n      \"line\": 25\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 77\n    }\n  }\n};\n    \nimport React from 'react';\n\nimport {Box} from '@workday/canvas-kit-react/layout';\nimport {ComponentStatesTable} from '@workday/canvas-kit-react/testing';\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\n\nexport default {\n  title: 'Testing/Layout/Box',\n  component: Box,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\n\\nimport {Box} from '@workday/canvas-kit-react/layout';\\nimport {ComponentStatesTable} from '@workday/canvas-kit-react/testing';\\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\\n\\nexport default {\\n  title: 'Testing/Layout/Box',\\n  component: Box,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst cellDefaultProps = {\\n  backgroundColor: 'soap400',\\n  depth: 2,\\n  display: 'inline-block',\\n  paddingY: 'xxs',\\n  position: 'relative',\\n};\\n\\nexport const BoxStates = {\\n  render: () => {\\n    return (\\n      <>\\n        <p>Note: Standard Props have no bidirectional support</p>\\n        <ComponentStatesTable\\n          columnProps={[\\n            {\\n              label: 'Standard Props',\\n              props: {\\n                ...cellDefaultProps,\\n                borderLeft: 'solid 4px',\\n                borderLeftColor: 'cinnamon500',\\n                borderRight: 'solid 8px',\\n                borderRightColor: 'sourLemon500',\\n                left: '8px',\\n                marginLeft: 'm',\\n                paddingLeft: 's',\\n                paddingRight: 'l',\\n              },\\n            },\\n            {\\n              label: 'Logical Props',\\n              props: {\\n                ...cellDefaultProps,\\n                borderInlineStart: 'solid 4px',\\n                borderInlineStartColor: 'cinnamon500',\\n                borderInlineEnd: 'solid 8px',\\n                borderInlineEndColor: 'sourLemon500',\\n                insetInlineStart: '8px',\\n                marginInlineStart: 'm',\\n                paddingInlineStart: 's',\\n                paddingInlineEnd: 'l',\\n              },\\n            },\\n          ]}\\n          rowProps={[\\n            {label: 'LTR', props: {theme: {canvas: {direction: ContentDirection.LTR}}}},\\n            {label: 'RTL', props: {theme: {canvas: {direction: ContentDirection.RTL}}}},\\n          ]}\\n        >\\n          {props => {\\n            return (\\n              <CanvasProvider theme={props.theme}>\\n                <Box {...props}>Box</Box>\\n              </CanvasProvider>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </>\\n    );\\n  },\\n};\\n\",\n    \"locationsMap\": {\n      \"box-states\": {\n        \"startLoc\": {\n          \"col\": 25,\n          \"line\": 25\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 77\n        },\n        \"startBody\": {\n          \"col\": 25,\n          \"line\": 25\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 77\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst cellDefaultProps = {\n  backgroundColor: 'soap400',\n  depth: 2,\n  display: 'inline-block',\n  paddingY: 'xxs',\n  position: 'relative',\n};\n\nexport const BoxStates = {\n  render: () => {\n    return (\n      <>\n        <p>Note: Standard Props have no bidirectional support</p>\n        <ComponentStatesTable\n          columnProps={[\n            {\n              label: 'Standard Props',\n              props: {\n                ...cellDefaultProps,\n                borderLeft: 'solid 4px',\n                borderLeftColor: 'cinnamon500',\n                borderRight: 'solid 8px',\n                borderRightColor: 'sourLemon500',\n                left: '8px',\n                marginLeft: 'm',\n                paddingLeft: 's',\n                paddingRight: 'l',\n              },\n            },\n            {\n              label: 'Logical Props',\n              props: {\n                ...cellDefaultProps,\n                borderInlineStart: 'solid 4px',\n                borderInlineStartColor: 'cinnamon500',\n                borderInlineEnd: 'solid 8px',\n                borderInlineEndColor: 'sourLemon500',\n                insetInlineStart: '8px',\n                marginInlineStart: 'm',\n                paddingInlineStart: 's',\n                paddingInlineEnd: 'l',\n              },\n            },\n          ]}\n          rowProps={[\n            {label: 'LTR', props: {theme: {canvas: {direction: ContentDirection.LTR}}}},\n            {label: 'RTL', props: {theme: {canvas: {direction: ContentDirection.RTL}}}},\n          ]}\n        >\n          {props => {\n            return (\n              <CanvasProvider theme={props.theme}>\n                <Box {...props}>Box</Box>\n              </CanvasProvider>\n            );\n          }}\n        </ComponentStatesTable>\n      </>\n    );\n  },\n};\n",locationsMap:{"box-states":{startLoc:{col:25,line:76},endLoc:{col:1,line:128},startBody:{col:25,line:76},endBody:{col:1,line:128}}}},storySource:{source:"import React from 'react';\n\nimport {Box} from '@workday/canvas-kit-react/layout';\nimport {ComponentStatesTable} from '@workday/canvas-kit-react/testing';\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\n\nexport default {\n  title: 'Testing/Layout/Box',\n  component: Box,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst cellDefaultProps = {\n  backgroundColor: 'soap400',\n  depth: 2,\n  display: 'inline-block',\n  paddingY: 'xxs',\n  position: 'relative',\n};\n\nexport const BoxStates = {\n  render: () => {\n    return (\n      <>\n        <p>Note: Standard Props have no bidirectional support</p>\n        <ComponentStatesTable\n          columnProps={[\n            {\n              label: 'Standard Props',\n              props: {\n                ...cellDefaultProps,\n                borderLeft: 'solid 4px',\n                borderLeftColor: 'cinnamon500',\n                borderRight: 'solid 8px',\n                borderRightColor: 'sourLemon500',\n                left: '8px',\n                marginLeft: 'm',\n                paddingLeft: 's',\n                paddingRight: 'l',\n              },\n            },\n            {\n              label: 'Logical Props',\n              props: {\n                ...cellDefaultProps,\n                borderInlineStart: 'solid 4px',\n                borderInlineStartColor: 'cinnamon500',\n                borderInlineEnd: 'solid 8px',\n                borderInlineEndColor: 'sourLemon500',\n                insetInlineStart: '8px',\n                marginInlineStart: 'm',\n                paddingInlineStart: 's',\n                paddingInlineEnd: 'l',\n              },\n            },\n          ]}\n          rowProps={[\n            {label: 'LTR', props: {theme: {canvas: {direction: ContentDirection.LTR}}}},\n            {label: 'RTL', props: {theme: {canvas: {direction: ContentDirection.RTL}}}},\n          ]}\n        >\n          {props => {\n            return (\n              <CanvasProvider theme={props.theme}>\n                <Box {...props}>Box</Box>\n              </CanvasProvider>\n            );\n          }}\n        </ComponentStatesTable>\n      </>\n    );\n  },\n};\n",locationsMap:{"box-states":{startLoc:{col:25,line:25},endLoc:{col:1,line:77},startBody:{col:25,line:25},endBody:{col:1,line:77}}}},chromatic:{disable:!1}}};const cellDefaultProps={backgroundColor:"soap400",depth:2,display:"inline-block",paddingY:"xxs",position:"relative"};exports.BoxStates={render:()=>_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("p",null,"Note: Standard Props have no bidirectional support"),_react.default.createElement(_testing.ComponentStatesTable,{columnProps:[{label:"Standard Props",props:{...cellDefaultProps,borderLeft:"solid 4px",borderLeftColor:"cinnamon500",borderRight:"solid 8px",borderRightColor:"sourLemon500",left:"8px",marginLeft:"m",paddingLeft:"s",paddingRight:"l"}},{label:"Logical Props",props:{...cellDefaultProps,borderInlineStart:"solid 4px",borderInlineStartColor:"cinnamon500",borderInlineEnd:"solid 8px",borderInlineEndColor:"sourLemon500",insetInlineStart:"8px",marginInlineStart:"m",paddingInlineStart:"s",paddingInlineEnd:"l"}}],rowProps:[{label:"LTR",props:{theme:{canvas:{direction:_common.ContentDirection.LTR}}}},{label:"RTL",props:{theme:{canvas:{direction:_common.ContentDirection.RTL}}}}]},(props=>_react.default.createElement(_common.CanvasProvider,{theme:props.theme},_react.default.createElement(_layout.Box,props,"Box")))))};module.exports.__namedExportsOrder=["BoxStates"]}}]);