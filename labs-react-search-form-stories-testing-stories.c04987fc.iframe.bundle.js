"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8086],{"./modules/labs-react/search-form/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SearchFormThemes=exports.SearchFormSizes=exports.SearchFormGrowStates=exports.SearchFormCollapsedStates=void 0;(function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}})(__webpack_require__("./node_modules/react/index.js"));var _testing=__webpack_require__("./modules/react/testing/index.ts"),_searchForm=__webpack_require__("./modules/labs-react/search-form/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Labs/SearchForm",component:_searchForm.SearchForm,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import React from \'react\';\\nimport {ComponentStatesTable, StaticStates} from \'@workday/canvas-kit-react/testing\';\\nimport {SearchForm, SearchTheme} from \'@workday/canvas-kit-labs-react/search-form\';\\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\\nimport {colors} from \'@workday/canvas-kit-react/tokens\';\\n\\nexport default {\\n  title: \'Testing/Labs/SearchForm\',\\n  component: SearchForm,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst handleSubmit = (e: React.FormEvent) => {\\n  e.preventDefault();\\n  console.log(\'Search submitted\');\\n};\\n\\nconst Container = ({children, background}: {children: React.ReactNode; background?: string}) => (\\n  <Flex\\n    padding=\\"s\\"\\n    backgroundColor={background || \'transparent\'}\\n    minHeight={64}\\n    alignItems=\\"center\\"\\n    width=\\"100%\\"\\n  >\\n    {children}\\n  </Flex>\\n);\\n\\nexport const SearchFormThemes = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'Light Theme\',\\n            props: {searchTheme: SearchTheme.Light},\\n          },\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {\\n            label: \'Transparent Theme\',\\n            props: {searchTheme: SearchTheme.Transparent},\\n          },\\n          {\\n            label: \'Custom Theme\',\\n            props: {\\n              searchTheme: {\\n                background: colors.cantaloupe100,\\n                backgroundFocus: colors.cantaloupe200,\\n                backgroundHover: colors.cantaloupe300,\\n                color: colors.blackPepper400,\\n                colorFocus: colors.blackPepper400,\\n                placeholderColor: colors.licorice300,\\n                placeholderColorFocus: colors.licorice300,\\n                boxShadow: \'none\',\\n                boxShadowFocus: `0 0 0 2px ${colors.cantaloupe400}`,\\n              },\\n            },\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Default\', props: {}},\\n          {label: \'Collapsed\', props: {isCollapsed: true}},\\n          {label: \'With initialValue\', props: {initialValue: \'Search terms\'}},\\n          {label: \'Right Aligned\', props: {rightAlign: true}},\\n        ]}\\n      >\\n        {({searchTheme, background, isCollapsed, initialValue, rightAlign}) => (\\n          <Container background={background}>\\n            <SearchForm\\n              onSubmit={handleSubmit}\\n              searchTheme={searchTheme}\\n              isCollapsed={isCollapsed}\\n              initialValue={initialValue}\\n              rightAlign={rightAlign}\\n            />\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const SearchFormSizes = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'Default Height (40px)\',\\n            props: {height: 40},\\n          },\\n          {\\n            label: \'Small Height (32px)\',\\n            props: {height: 32},\\n          },\\n          {\\n            label: \'Large Height (48px)\',\\n            props: {height: 48},\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Light Theme\', props: {searchTheme: SearchTheme.Light}},\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {label: \'Transparent Theme\', props: {searchTheme: SearchTheme.Transparent}},\\n        ]}\\n      >\\n        {({height, searchTheme, background}) => (\\n          <Container background={background}>\\n            <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} height={height} />\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const SearchFormCollapsedStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'Light Theme\',\\n            props: {searchTheme: SearchTheme.Light},\\n          },\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {\\n            label: \'Transparent Theme\',\\n            props: {searchTheme: SearchTheme.Transparent},\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Collapsed\', props: {isCollapsed: true}},\\n          // Note: This is just for visual testing - in real application, you would show the form programmatically\\n          {label: \'Collapsed (Open)\', props: {isCollapsed: true, showForm: true}},\\n        ]}\\n      >\\n        {({searchTheme, background, isCollapsed, showForm}) => (\\n          <Container background={background}>\\n            {showForm ? (\\n              // For testing purposes, we\'re rendering a component that simulates the open state\\n              <SearchForm\\n                onSubmit={handleSubmit}\\n                searchTheme={searchTheme}\\n                isCollapsed={isCollapsed}\\n                // @ts-ignore - This is just for testing purposes\\n                showForm={true}\\n              />\\n            ) : (\\n              <SearchForm\\n                onSubmit={handleSubmit}\\n                searchTheme={searchTheme}\\n                isCollapsed={isCollapsed}\\n              />\\n            )}\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const SearchFormGrowStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'With Grow\',\\n            props: {grow: true},\\n          },\\n          {\\n            label: \'Without Grow\',\\n            props: {grow: false},\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Light Theme\', props: {searchTheme: SearchTheme.Light}},\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {label: \'Transparent Theme\', props: {searchTheme: SearchTheme.Transparent}},\\n        ]}\\n      >\\n        {({grow, searchTheme, background}) => (\\n          <Container background={background}>\\n            <Flex width=\\"100%\\">\\n              <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} grow={grow} />\\n            </Flex>\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "SearchFormThemes": {\n    "startLoc": {\n      "col": 32,\n      "line": 34\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 89\n    },\n    "startBody": {\n      "col": 32,\n      "line": 34\n    },\n    "endBody": {\n      "col": 1,\n      "line": 89\n    }\n  },\n  "SearchFormSizes": {\n    "startLoc": {\n      "col": 31,\n      "line": 91\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 126\n    },\n    "startBody": {\n      "col": 31,\n      "line": 91\n    },\n    "endBody": {\n      "col": 1,\n      "line": 126\n    }\n  },\n  "SearchFormCollapsedStates": {\n    "startLoc": {\n      "col": 41,\n      "line": 128\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 175\n    },\n    "startBody": {\n      "col": 41,\n      "line": 128\n    },\n    "endBody": {\n      "col": 1,\n      "line": 175\n    }\n  },\n  "SearchFormGrowStates": {\n    "startLoc": {\n      "col": 36,\n      "line": 177\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 210\n    },\n    "startBody": {\n      "col": 36,\n      "line": 177\n    },\n    "endBody": {\n      "col": 1,\n      "line": 210\n    }\n  }\n};\n    \nimport React from \'react\';\nimport {ComponentStatesTable, StaticStates} from \'@workday/canvas-kit-react/testing\';\nimport {SearchForm, SearchTheme} from \'@workday/canvas-kit-labs-react/search-form\';\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\nimport {colors} from \'@workday/canvas-kit-react/tokens\';\n\nexport default {\n  title: \'Testing/Labs/SearchForm\',\n  component: SearchForm,\n  parameters: {\n  "storySource": {\n    "source": "import React from \'react\';\\nimport {ComponentStatesTable, StaticStates} from \'@workday/canvas-kit-react/testing\';\\nimport {SearchForm, SearchTheme} from \'@workday/canvas-kit-labs-react/search-form\';\\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\\nimport {colors} from \'@workday/canvas-kit-react/tokens\';\\n\\nexport default {\\n  title: \'Testing/Labs/SearchForm\',\\n  component: SearchForm,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst handleSubmit = (e: React.FormEvent) => {\\n  e.preventDefault();\\n  console.log(\'Search submitted\');\\n};\\n\\nconst Container = ({children, background}: {children: React.ReactNode; background?: string}) => (\\n  <Flex\\n    padding=\\"s\\"\\n    backgroundColor={background || \'transparent\'}\\n    minHeight={64}\\n    alignItems=\\"center\\"\\n    width=\\"100%\\"\\n  >\\n    {children}\\n  </Flex>\\n);\\n\\nexport const SearchFormThemes = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'Light Theme\',\\n            props: {searchTheme: SearchTheme.Light},\\n          },\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {\\n            label: \'Transparent Theme\',\\n            props: {searchTheme: SearchTheme.Transparent},\\n          },\\n          {\\n            label: \'Custom Theme\',\\n            props: {\\n              searchTheme: {\\n                background: colors.cantaloupe100,\\n                backgroundFocus: colors.cantaloupe200,\\n                backgroundHover: colors.cantaloupe300,\\n                color: colors.blackPepper400,\\n                colorFocus: colors.blackPepper400,\\n                placeholderColor: colors.licorice300,\\n                placeholderColorFocus: colors.licorice300,\\n                boxShadow: \'none\',\\n                boxShadowFocus: `0 0 0 2px ${colors.cantaloupe400}`,\\n              },\\n            },\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Default\', props: {}},\\n          {label: \'Collapsed\', props: {isCollapsed: true}},\\n          {label: \'With initialValue\', props: {initialValue: \'Search terms\'}},\\n          {label: \'Right Aligned\', props: {rightAlign: true}},\\n        ]}\\n      >\\n        {({searchTheme, background, isCollapsed, initialValue, rightAlign}) => (\\n          <Container background={background}>\\n            <SearchForm\\n              onSubmit={handleSubmit}\\n              searchTheme={searchTheme}\\n              isCollapsed={isCollapsed}\\n              initialValue={initialValue}\\n              rightAlign={rightAlign}\\n            />\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const SearchFormSizes = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'Default Height (40px)\',\\n            props: {height: 40},\\n          },\\n          {\\n            label: \'Small Height (32px)\',\\n            props: {height: 32},\\n          },\\n          {\\n            label: \'Large Height (48px)\',\\n            props: {height: 48},\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Light Theme\', props: {searchTheme: SearchTheme.Light}},\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {label: \'Transparent Theme\', props: {searchTheme: SearchTheme.Transparent}},\\n        ]}\\n      >\\n        {({height, searchTheme, background}) => (\\n          <Container background={background}>\\n            <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} height={height} />\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const SearchFormCollapsedStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'Light Theme\',\\n            props: {searchTheme: SearchTheme.Light},\\n          },\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {\\n            label: \'Transparent Theme\',\\n            props: {searchTheme: SearchTheme.Transparent},\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Collapsed\', props: {isCollapsed: true}},\\n          // Note: This is just for visual testing - in real application, you would show the form programmatically\\n          {label: \'Collapsed (Open)\', props: {isCollapsed: true, showForm: true}},\\n        ]}\\n      >\\n        {({searchTheme, background, isCollapsed, showForm}) => (\\n          <Container background={background}>\\n            {showForm ? (\\n              // For testing purposes, we\'re rendering a component that simulates the open state\\n              <SearchForm\\n                onSubmit={handleSubmit}\\n                searchTheme={searchTheme}\\n                isCollapsed={isCollapsed}\\n                // @ts-ignore - This is just for testing purposes\\n                showForm={true}\\n              />\\n            ) : (\\n              <SearchForm\\n                onSubmit={handleSubmit}\\n                searchTheme={searchTheme}\\n                isCollapsed={isCollapsed}\\n              />\\n            )}\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const SearchFormGrowStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {\\n            label: \'With Grow\',\\n            props: {grow: true},\\n          },\\n          {\\n            label: \'Without Grow\',\\n            props: {grow: false},\\n          },\\n        ]}\\n        columnProps={[\\n          {label: \'Light Theme\', props: {searchTheme: SearchTheme.Light}},\\n          {\\n            label: \'Dark Theme\',\\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\\n          },\\n          {label: \'Transparent Theme\', props: {searchTheme: SearchTheme.Transparent}},\\n        ]}\\n      >\\n        {({grow, searchTheme, background}) => (\\n          <Container background={background}>\\n            <Flex width=\\"100%\\">\\n              <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} grow={grow} />\\n            </Flex>\\n          </Container>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n",\n    "locationsMap": {\n      "search-form-themes": {\n        "startLoc": {\n          "col": 32,\n          "line": 34\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 89\n        },\n        "startBody": {\n          "col": 32,\n          "line": 34\n        },\n        "endBody": {\n          "col": 1,\n          "line": 89\n        }\n      },\n      "search-form-sizes": {\n        "startLoc": {\n          "col": 31,\n          "line": 91\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 126\n        },\n        "startBody": {\n          "col": 31,\n          "line": 91\n        },\n        "endBody": {\n          "col": 1,\n          "line": 126\n        }\n      },\n      "search-form-collapsed-states": {\n        "startLoc": {\n          "col": 41,\n          "line": 128\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 175\n        },\n        "startBody": {\n          "col": 41,\n          "line": 128\n        },\n        "endBody": {\n          "col": 1,\n          "line": 175\n        }\n      },\n      "search-form-grow-states": {\n        "startLoc": {\n          "col": 36,\n          "line": 177\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 210\n        },\n        "startBody": {\n          "col": 36,\n          "line": 177\n        },\n        "endBody": {\n          "col": 1,\n          "line": 210\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst handleSubmit = (e: React.FormEvent) => {\n  e.preventDefault();\n  console.log(\'Search submitted\');\n};\n\nconst Container = ({children, background}: {children: React.ReactNode; background?: string}) => (\n  <Flex\n    padding="s"\n    backgroundColor={background || \'transparent\'}\n    minHeight={64}\n    alignItems="center"\n    width="100%"\n  >\n    {children}\n  </Flex>\n);\n\nexport const SearchFormThemes = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: \'Light Theme\',\n            props: {searchTheme: SearchTheme.Light},\n          },\n          {\n            label: \'Dark Theme\',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {\n            label: \'Transparent Theme\',\n            props: {searchTheme: SearchTheme.Transparent},\n          },\n          {\n            label: \'Custom Theme\',\n            props: {\n              searchTheme: {\n                background: colors.cantaloupe100,\n                backgroundFocus: colors.cantaloupe200,\n                backgroundHover: colors.cantaloupe300,\n                color: colors.blackPepper400,\n                colorFocus: colors.blackPepper400,\n                placeholderColor: colors.licorice300,\n                placeholderColorFocus: colors.licorice300,\n                boxShadow: \'none\',\n                boxShadowFocus: `0 0 0 2px ${colors.cantaloupe400}`,\n              },\n            },\n          },\n        ]}\n        columnProps={[\n          {label: \'Default\', props: {}},\n          {label: \'Collapsed\', props: {isCollapsed: true}},\n          {label: \'With initialValue\', props: {initialValue: \'Search terms\'}},\n          {label: \'Right Aligned\', props: {rightAlign: true}},\n        ]}\n      >\n        {({searchTheme, background, isCollapsed, initialValue, rightAlign}) => (\n          <Container background={background}>\n            <SearchForm\n              onSubmit={handleSubmit}\n              searchTheme={searchTheme}\n              isCollapsed={isCollapsed}\n              initialValue={initialValue}\n              rightAlign={rightAlign}\n            />\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};;\n\nexport const SearchFormSizes = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: \'Default Height (40px)\',\n            props: {height: 40},\n          },\n          {\n            label: \'Small Height (32px)\',\n            props: {height: 32},\n          },\n          {\n            label: \'Large Height (48px)\',\n            props: {height: 48},\n          },\n        ]}\n        columnProps={[\n          {label: \'Light Theme\', props: {searchTheme: SearchTheme.Light}},\n          {\n            label: \'Dark Theme\',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {label: \'Transparent Theme\', props: {searchTheme: SearchTheme.Transparent}},\n        ]}\n      >\n        {({height, searchTheme, background}) => (\n          <Container background={background}>\n            <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} height={height} />\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};;\n\nexport const SearchFormCollapsedStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: \'Light Theme\',\n            props: {searchTheme: SearchTheme.Light},\n          },\n          {\n            label: \'Dark Theme\',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {\n            label: \'Transparent Theme\',\n            props: {searchTheme: SearchTheme.Transparent},\n          },\n        ]}\n        columnProps={[\n          {label: \'Collapsed\', props: {isCollapsed: true}},\n          // Note: This is just for visual testing - in real application, you would show the form programmatically\n          {label: \'Collapsed (Open)\', props: {isCollapsed: true, showForm: true}},\n        ]}\n      >\n        {({searchTheme, background, isCollapsed, showForm}) => (\n          <Container background={background}>\n            {showForm ? (\n              // For testing purposes, we\'re rendering a component that simulates the open state\n              <SearchForm\n                onSubmit={handleSubmit}\n                searchTheme={searchTheme}\n                isCollapsed={isCollapsed}\n                // @ts-ignore - This is just for testing purposes\n                showForm={true}\n              />\n            ) : (\n              <SearchForm\n                onSubmit={handleSubmit}\n                searchTheme={searchTheme}\n                isCollapsed={isCollapsed}\n              />\n            )}\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};;\n\nexport const SearchFormGrowStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: \'With Grow\',\n            props: {grow: true},\n          },\n          {\n            label: \'Without Grow\',\n            props: {grow: false},\n          },\n        ]}\n        columnProps={[\n          {label: \'Light Theme\', props: {searchTheme: SearchTheme.Light}},\n          {\n            label: \'Dark Theme\',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {label: \'Transparent Theme\', props: {searchTheme: SearchTheme.Transparent}},\n        ]}\n      >\n        {({grow, searchTheme, background}) => (\n          <Container background={background}>\n            <Flex width="100%">\n              <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} grow={grow} />\n            </Flex>\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n',locationsMap:{"search-form-themes":{startLoc:{col:32,line:193},endLoc:{col:1,line:248},startBody:{col:32,line:193},endBody:{col:1,line:248}},"search-form-sizes":{startLoc:{col:31,line:250},endLoc:{col:1,line:285},startBody:{col:31,line:250},endBody:{col:1,line:285}},"search-form-collapsed-states":{startLoc:{col:41,line:287},endLoc:{col:1,line:334},startBody:{col:41,line:287},endBody:{col:1,line:334}},"search-form-grow-states":{startLoc:{col:36,line:336},endLoc:{col:1,line:369},startBody:{col:36,line:336},endBody:{col:1,line:369}}}},storySource:{source:"import React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {SearchForm, SearchTheme} from '@workday/canvas-kit-labs-react/search-form';\nimport {Flex} from '@workday/canvas-kit-react/layout';\nimport {colors} from '@workday/canvas-kit-react/tokens';\n\nexport default {\n  title: 'Testing/Labs/SearchForm',\n  component: SearchForm,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst handleSubmit = (e: React.FormEvent) => {\n  e.preventDefault();\n  console.log('Search submitted');\n};\n\nconst Container = ({children, background}: {children: React.ReactNode; background?: string}) => (\n  <Flex\n    padding=\"s\"\n    backgroundColor={background || 'transparent'}\n    minHeight={64}\n    alignItems=\"center\"\n    width=\"100%\"\n  >\n    {children}\n  </Flex>\n);\n\nexport const SearchFormThemes = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: 'Light Theme',\n            props: {searchTheme: SearchTheme.Light},\n          },\n          {\n            label: 'Dark Theme',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {\n            label: 'Transparent Theme',\n            props: {searchTheme: SearchTheme.Transparent},\n          },\n          {\n            label: 'Custom Theme',\n            props: {\n              searchTheme: {\n                background: colors.cantaloupe100,\n                backgroundFocus: colors.cantaloupe200,\n                backgroundHover: colors.cantaloupe300,\n                color: colors.blackPepper400,\n                colorFocus: colors.blackPepper400,\n                placeholderColor: colors.licorice300,\n                placeholderColorFocus: colors.licorice300,\n                boxShadow: 'none',\n                boxShadowFocus: `0 0 0 2px ${colors.cantaloupe400}`,\n              },\n            },\n          },\n        ]}\n        columnProps={[\n          {label: 'Default', props: {}},\n          {label: 'Collapsed', props: {isCollapsed: true}},\n          {label: 'With initialValue', props: {initialValue: 'Search terms'}},\n          {label: 'Right Aligned', props: {rightAlign: true}},\n        ]}\n      >\n        {({searchTheme, background, isCollapsed, initialValue, rightAlign}) => (\n          <Container background={background}>\n            <SearchForm\n              onSubmit={handleSubmit}\n              searchTheme={searchTheme}\n              isCollapsed={isCollapsed}\n              initialValue={initialValue}\n              rightAlign={rightAlign}\n            />\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n\nexport const SearchFormSizes = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: 'Default Height (40px)',\n            props: {height: 40},\n          },\n          {\n            label: 'Small Height (32px)',\n            props: {height: 32},\n          },\n          {\n            label: 'Large Height (48px)',\n            props: {height: 48},\n          },\n        ]}\n        columnProps={[\n          {label: 'Light Theme', props: {searchTheme: SearchTheme.Light}},\n          {\n            label: 'Dark Theme',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {label: 'Transparent Theme', props: {searchTheme: SearchTheme.Transparent}},\n        ]}\n      >\n        {({height, searchTheme, background}) => (\n          <Container background={background}>\n            <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} height={height} />\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n\nexport const SearchFormCollapsedStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: 'Light Theme',\n            props: {searchTheme: SearchTheme.Light},\n          },\n          {\n            label: 'Dark Theme',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {\n            label: 'Transparent Theme',\n            props: {searchTheme: SearchTheme.Transparent},\n          },\n        ]}\n        columnProps={[\n          {label: 'Collapsed', props: {isCollapsed: true}},\n          // Note: This is just for visual testing - in real application, you would show the form programmatically\n          {label: 'Collapsed (Open)', props: {isCollapsed: true, showForm: true}},\n        ]}\n      >\n        {({searchTheme, background, isCollapsed, showForm}) => (\n          <Container background={background}>\n            {showForm ? (\n              // For testing purposes, we're rendering a component that simulates the open state\n              <SearchForm\n                onSubmit={handleSubmit}\n                searchTheme={searchTheme}\n                isCollapsed={isCollapsed}\n                // @ts-ignore - This is just for testing purposes\n                showForm={true}\n              />\n            ) : (\n              <SearchForm\n                onSubmit={handleSubmit}\n                searchTheme={searchTheme}\n                isCollapsed={isCollapsed}\n              />\n            )}\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n\nexport const SearchFormGrowStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {\n            label: 'With Grow',\n            props: {grow: true},\n          },\n          {\n            label: 'Without Grow',\n            props: {grow: false},\n          },\n        ]}\n        columnProps={[\n          {label: 'Light Theme', props: {searchTheme: SearchTheme.Light}},\n          {\n            label: 'Dark Theme',\n            props: {searchTheme: SearchTheme.Dark, background: colors.blueberry500},\n          },\n          {label: 'Transparent Theme', props: {searchTheme: SearchTheme.Transparent}},\n        ]}\n      >\n        {({grow, searchTheme, background}) => (\n          <Container background={background}>\n            <Flex width=\"100%\">\n              <SearchForm onSubmit={handleSubmit} searchTheme={searchTheme} grow={grow} />\n            </Flex>\n          </Container>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n",locationsMap:{"search-form-themes":{startLoc:{col:32,line:34},endLoc:{col:1,line:89},startBody:{col:32,line:34},endBody:{col:1,line:89}},"search-form-sizes":{startLoc:{col:31,line:91},endLoc:{col:1,line:126},startBody:{col:31,line:91},endBody:{col:1,line:126}},"search-form-collapsed-states":{startLoc:{col:41,line:128},endLoc:{col:1,line:175},startBody:{col:41,line:128},endBody:{col:1,line:175}},"search-form-grow-states":{startLoc:{col:36,line:177},endLoc:{col:1,line:210},startBody:{col:36,line:177},endBody:{col:1,line:210}}}},chromatic:{disable:!1}}};const handleSubmit=e=>{e.preventDefault(),console.log("Search submitted")},Container=({children,background})=>(0,_jsxRuntime.jsx)(_layout.Flex,{padding:"s",backgroundColor:background||"transparent",minHeight:64,alignItems:"center",width:"100%",children});Container.displayName="Container";exports.SearchFormThemes={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Light Theme",props:{searchTheme:_searchForm.SearchTheme.Light}},{label:"Dark Theme",props:{searchTheme:_searchForm.SearchTheme.Dark,background:_tokens.colors.blueberry500}},{label:"Transparent Theme",props:{searchTheme:_searchForm.SearchTheme.Transparent}},{label:"Custom Theme",props:{searchTheme:{background:_tokens.colors.cantaloupe100,backgroundFocus:_tokens.colors.cantaloupe200,backgroundHover:_tokens.colors.cantaloupe300,color:_tokens.colors.blackPepper400,colorFocus:_tokens.colors.blackPepper400,placeholderColor:_tokens.colors.licorice300,placeholderColorFocus:_tokens.colors.licorice300,boxShadow:"none",boxShadowFocus:`0 0 0 2px ${_tokens.colors.cantaloupe400}`}}}],columnProps:[{label:"Default",props:{}},{label:"Collapsed",props:{isCollapsed:!0}},{label:"With initialValue",props:{initialValue:"Search terms"}},{label:"Right Aligned",props:{rightAlign:!0}}],children:({searchTheme,background,isCollapsed,initialValue,rightAlign})=>(0,_jsxRuntime.jsx)(Container,{background,children:(0,_jsxRuntime.jsx)(_searchForm.SearchForm,{onSubmit:handleSubmit,searchTheme,isCollapsed,initialValue,rightAlign})})})})},exports.SearchFormSizes={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Default Height (40px)",props:{height:40}},{label:"Small Height (32px)",props:{height:32}},{label:"Large Height (48px)",props:{height:48}}],columnProps:[{label:"Light Theme",props:{searchTheme:_searchForm.SearchTheme.Light}},{label:"Dark Theme",props:{searchTheme:_searchForm.SearchTheme.Dark,background:_tokens.colors.blueberry500}},{label:"Transparent Theme",props:{searchTheme:_searchForm.SearchTheme.Transparent}}],children:({height,searchTheme,background})=>(0,_jsxRuntime.jsx)(Container,{background,children:(0,_jsxRuntime.jsx)(_searchForm.SearchForm,{onSubmit:handleSubmit,searchTheme,height})})})})},exports.SearchFormCollapsedStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Light Theme",props:{searchTheme:_searchForm.SearchTheme.Light}},{label:"Dark Theme",props:{searchTheme:_searchForm.SearchTheme.Dark,background:_tokens.colors.blueberry500}},{label:"Transparent Theme",props:{searchTheme:_searchForm.SearchTheme.Transparent}}],columnProps:[{label:"Collapsed",props:{isCollapsed:!0}},{label:"Collapsed (Open)",props:{isCollapsed:!0,showForm:!0}}],children:({searchTheme,background,isCollapsed,showForm})=>(0,_jsxRuntime.jsx)(Container,{background,children:showForm?(0,_jsxRuntime.jsx)(_searchForm.SearchForm,{onSubmit:handleSubmit,searchTheme,isCollapsed,showForm:!0}):(0,_jsxRuntime.jsx)(_searchForm.SearchForm,{onSubmit:handleSubmit,searchTheme,isCollapsed})})})})},exports.SearchFormGrowStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"With Grow",props:{grow:!0}},{label:"Without Grow",props:{grow:!1}}],columnProps:[{label:"Light Theme",props:{searchTheme:_searchForm.SearchTheme.Light}},{label:"Dark Theme",props:{searchTheme:_searchForm.SearchTheme.Dark,background:_tokens.colors.blueberry500}},{label:"Transparent Theme",props:{searchTheme:_searchForm.SearchTheme.Transparent}}],children:({grow,searchTheme,background})=>(0,_jsxRuntime.jsx)(Container,{background,children:(0,_jsxRuntime.jsx)(_layout.Flex,{width:"100%",children:(0,_jsxRuntime.jsx)(_searchForm.SearchForm,{onSubmit:handleSubmit,searchTheme,grow})})})})})};module.exports.__namedExportsOrder=["SearchFormThemes","SearchFormSizes","SearchFormGrowStates","SearchFormCollapsedStates"]}}]);