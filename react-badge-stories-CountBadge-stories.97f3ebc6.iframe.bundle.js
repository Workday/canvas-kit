"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[5609],{"./modules/react/badge/stories/CountBadge.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.NotificationBadge=exports.Inverse=exports.Emphasis=exports.CustomLimit=exports.Basic=void 0;var _CountBadge=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./modules/react/badge/stories/CountBadge.mdx")),_badge=__webpack_require__("./modules/react/badge/index.ts"),_Basic=__webpack_require__("./modules/react/badge/stories/examples/Basic.tsx"),_Emphasis=__webpack_require__("./modules/react/badge/stories/examples/Emphasis.tsx"),_Inverse=__webpack_require__("./modules/react/badge/stories/examples/Inverse.tsx"),_CustomLimit=__webpack_require__("./modules/react/badge/stories/examples/CustomLimit.tsx"),_NotificationBadge=__webpack_require__("./modules/react/badge/stories/examples/NotificationBadge.tsx");exports.default={title:"Components/Indicators/CountBadge",component:_badge.CountBadge,tags:["autodocs"],parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import {Meta, StoryObj} from \'@storybook/react\';\\n\\nimport mdxDoc from \'./CountBadge.mdx\';\\n\\nimport {CountBadge} from \'@workday/canvas-kit-react/badge\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {Emphasis as EmphasisExample} from \'./examples/Emphasis\';\\nimport {Inverse as InverseExample} from \'./examples/Inverse\';\\nimport {CustomLimit as CustomLimitExample} from \'./examples/CustomLimit\';\\nimport {NotificationBadge as NotificationBadgeExample} from \'./examples/NotificationBadge\';\\n\\nexport default {\\n  title: \'Components/Indicators/CountBadge\',\\n  component: CountBadge,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof CountBadge>;\\n\\ntype Story = StoryObj<typeof CountBadge>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\n\\nexport const Emphasis: Story = {\\n  render: EmphasisExample,\\n};\\n\\nexport const Inverse: Story = {\\n  render: InverseExample,\\n};\\n\\nexport const CustomLimit: Story = {\\n  render: CustomLimitExample,\\n};\\nexport const NotificationBadge: Story = {\\n  render: NotificationBadgeExample,\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "Basic": {\n    "startLoc": {\n      "col": 28,\n      "line": 26\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 28\n    },\n    "startBody": {\n      "col": 28,\n      "line": 26\n    },\n    "endBody": {\n      "col": 1,\n      "line": 28\n    }\n  },\n  "Emphasis": {\n    "startLoc": {\n      "col": 31,\n      "line": 30\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 32\n    },\n    "startBody": {\n      "col": 31,\n      "line": 30\n    },\n    "endBody": {\n      "col": 1,\n      "line": 32\n    }\n  },\n  "Inverse": {\n    "startLoc": {\n      "col": 30,\n      "line": 34\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 36\n    },\n    "startBody": {\n      "col": 30,\n      "line": 34\n    },\n    "endBody": {\n      "col": 1,\n      "line": 36\n    }\n  },\n  "CustomLimit": {\n    "startLoc": {\n      "col": 34,\n      "line": 38\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 40\n    },\n    "startBody": {\n      "col": 34,\n      "line": 38\n    },\n    "endBody": {\n      "col": 1,\n      "line": 40\n    }\n  },\n  "NotificationBadge": {\n    "startLoc": {\n      "col": 40,\n      "line": 41\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 43\n    },\n    "startBody": {\n      "col": 40,\n      "line": 41\n    },\n    "endBody": {\n      "col": 1,\n      "line": 43\n    }\n  }\n};\n    \nimport {Meta, StoryObj} from \'@storybook/react\';\n\nimport mdxDoc from \'./CountBadge.mdx\';\n\nimport {CountBadge} from \'@workday/canvas-kit-react/badge\';\n\nimport {Basic as BasicExample} from \'./examples/Basic\';\nimport {Emphasis as EmphasisExample} from \'./examples/Emphasis\';\nimport {Inverse as InverseExample} from \'./examples/Inverse\';\nimport {CustomLimit as CustomLimitExample} from \'./examples/CustomLimit\';\nimport {NotificationBadge as NotificationBadgeExample} from \'./examples/NotificationBadge\';\n\nexport default {\n  title: \'Components/Indicators/CountBadge\',\n  component: CountBadge,\n  tags: [\'autodocs\'],\n  parameters: {\n  "storySource": {\n    "source": "import {Meta, StoryObj} from \'@storybook/react\';\\n\\nimport mdxDoc from \'./CountBadge.mdx\';\\n\\nimport {CountBadge} from \'@workday/canvas-kit-react/badge\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {Emphasis as EmphasisExample} from \'./examples/Emphasis\';\\nimport {Inverse as InverseExample} from \'./examples/Inverse\';\\nimport {CustomLimit as CustomLimitExample} from \'./examples/CustomLimit\';\\nimport {NotificationBadge as NotificationBadgeExample} from \'./examples/NotificationBadge\';\\n\\nexport default {\\n  title: \'Components/Indicators/CountBadge\',\\n  component: CountBadge,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof CountBadge>;\\n\\ntype Story = StoryObj<typeof CountBadge>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\n\\nexport const Emphasis: Story = {\\n  render: EmphasisExample,\\n};\\n\\nexport const Inverse: Story = {\\n  render: InverseExample,\\n};\\n\\nexport const CustomLimit: Story = {\\n  render: CustomLimitExample,\\n};\\nexport const NotificationBadge: Story = {\\n  render: NotificationBadgeExample,\\n};\\n",\n    "locationsMap": {\n      "basic": {\n        "startLoc": {\n          "col": 28,\n          "line": 26\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 28\n        },\n        "startBody": {\n          "col": 28,\n          "line": 26\n        },\n        "endBody": {\n          "col": 1,\n          "line": 28\n        }\n      },\n      "emphasis": {\n        "startLoc": {\n          "col": 31,\n          "line": 30\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 32\n        },\n        "startBody": {\n          "col": 31,\n          "line": 30\n        },\n        "endBody": {\n          "col": 1,\n          "line": 32\n        }\n      },\n      "inverse": {\n        "startLoc": {\n          "col": 30,\n          "line": 34\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 36\n        },\n        "startBody": {\n          "col": 30,\n          "line": 34\n        },\n        "endBody": {\n          "col": 1,\n          "line": 36\n        }\n      },\n      "custom-limit": {\n        "startLoc": {\n          "col": 34,\n          "line": 38\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 40\n        },\n        "startBody": {\n          "col": 34,\n          "line": 38\n        },\n        "endBody": {\n          "col": 1,\n          "line": 40\n        }\n      },\n      "notification-badge": {\n        "startLoc": {\n          "col": 40,\n          "line": 41\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 43\n        },\n        "startBody": {\n          "col": 40,\n          "line": 41\n        },\n        "endBody": {\n          "col": 1,\n          "line": 43\n        }\n      }\n    }\n  }\n,\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof CountBadge>;\n\ntype Story = StoryObj<typeof CountBadge>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};;\n\nexport const Emphasis: Story = {\n  render: EmphasisExample,\n};;\n\nexport const Inverse: Story = {\n  render: InverseExample,\n};;\n\nexport const CustomLimit: Story = {\n  render: CustomLimitExample,\n};;\nexport const NotificationBadge: Story = {\n  render: NotificationBadgeExample,\n};\n',locationsMap:{basic:{startLoc:{col:28,line:221},endLoc:{col:1,line:223},startBody:{col:28,line:221},endBody:{col:1,line:223}},emphasis:{startLoc:{col:31,line:225},endLoc:{col:1,line:227},startBody:{col:31,line:225},endBody:{col:1,line:227}},inverse:{startLoc:{col:30,line:229},endLoc:{col:1,line:231},startBody:{col:30,line:229},endBody:{col:1,line:231}},"custom-limit":{startLoc:{col:34,line:233},endLoc:{col:1,line:235},startBody:{col:34,line:233},endBody:{col:1,line:235}},"notification-badge":{startLoc:{col:40,line:236},endLoc:{col:1,line:238},startBody:{col:40,line:236},endBody:{col:1,line:238}}}},storySource:{source:"import {Meta, StoryObj} from '@storybook/react';\n\nimport mdxDoc from './CountBadge.mdx';\n\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\n\nimport {Basic as BasicExample} from './examples/Basic';\nimport {Emphasis as EmphasisExample} from './examples/Emphasis';\nimport {Inverse as InverseExample} from './examples/Inverse';\nimport {CustomLimit as CustomLimitExample} from './examples/CustomLimit';\nimport {NotificationBadge as NotificationBadgeExample} from './examples/NotificationBadge';\n\nexport default {\n  title: 'Components/Indicators/CountBadge',\n  component: CountBadge,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof CountBadge>;\n\ntype Story = StoryObj<typeof CountBadge>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};\n\nexport const Emphasis: Story = {\n  render: EmphasisExample,\n};\n\nexport const Inverse: Story = {\n  render: InverseExample,\n};\n\nexport const CustomLimit: Story = {\n  render: CustomLimitExample,\n};\nexport const NotificationBadge: Story = {\n  render: NotificationBadgeExample,\n};\n",locationsMap:{basic:{startLoc:{col:28,line:26},endLoc:{col:1,line:28},startBody:{col:28,line:26},endBody:{col:1,line:28}},emphasis:{startLoc:{col:31,line:30},endLoc:{col:1,line:32},startBody:{col:31,line:30},endBody:{col:1,line:32}},inverse:{startLoc:{col:30,line:34},endLoc:{col:1,line:36},startBody:{col:30,line:34},endBody:{col:1,line:36}},"custom-limit":{startLoc:{col:34,line:38},endLoc:{col:1,line:40},startBody:{col:34,line:38},endBody:{col:1,line:40}},"notification-badge":{startLoc:{col:40,line:41},endLoc:{col:1,line:43},startBody:{col:40,line:41},endBody:{col:1,line:43}}}},docs:{page:_CountBadge.default}}};exports.Basic={render:_Basic.Basic},exports.Emphasis={render:_Emphasis.Emphasis},exports.Inverse={render:_Inverse.Inverse},exports.CustomLimit={render:_CustomLimit.CustomLimit},exports.NotificationBadge={render:_NotificationBadge.NotificationBadge};module.exports.__namedExportsOrder=["NotificationBadge","Inverse","Emphasis","CustomLimit","Basic"]},"./modules/react/badge/stories/CountBadge.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_Basic__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/react/badge/stories/examples/Basic.tsx"),_examples_Emphasis__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./modules/react/badge/stories/examples/Emphasis.tsx"),_examples_Inverse__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./modules/react/badge/stories/examples/Inverse.tsx"),_examples_CustomLimit__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./modules/react/badge/stories/examples/CustomLimit.tsx"),_examples_NotificationBadge__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./modules/react/badge/stories/examples/NotificationBadge.tsx"),_CountBadge_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/react/badge/stories/CountBadge.stories.ts");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre",h3:"h3",a:"a",h4:"h4",ul:"ul",li:"li"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{of:_CountBadge_stories__WEBPACK_IMPORTED_MODULE_5__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-count-badge",children:"Canvas Kit Count Badge"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," provides a quantity-based summary with dynamic values."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"installation",children:"Installation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-sh",children:"yarn add @workday/canvas-kit-react\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The following section provides examples for common use cases. Please be sure to also read the\nAccessibility section below."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"basic",children:"Basic"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Use the default ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," variant for most situations. The default ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"high"})," emphasis is ideal for\ndrawing attention to important or primary information."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Basic__WEBPACK_IMPORTED_MODULE_6__.Basic}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"emphasis",children:"Emphasis"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Select the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"low"})," emphasis option for less prominent or secondary information. This is useful when\nyou want the badge to be visible but not distracting."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"high"})," emphasis is ideal for drawing attention to important or primary information."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Emphasis__WEBPACK_IMPORTED_MODULE_7__.Emphasis}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"inverse",children:"Inverse"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Apply the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"inverse"})," variant when displaying the badge on dark or accent backgrounds to maintain\nproper contrast and readability. This ensures the badge remains legible in visually dense or colored\nareas. The same rules apply for ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"low"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"high"})," emphasis. Only use this combination on backgrounds with\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://workday.github.io/canvas-tokens/?path=/docs/docs-base-tokens--docs",target:"_blank",rel:"nofollow noopener noreferrer",children:"a token of 600 or greater"}),"\nto ensure sufficient contrast and accessibility."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Inverse__WEBPACK_IMPORTED_MODULE_8__.Inverse}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"custom-limit",children:"Custom Limit"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["By default, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"}),"'s limit is set to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"1000"}),". Once the count reaches the limit, the badge will\nformat the number: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"1000"})," becomes ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"999+"}),". The default limit is largely arbitrary and intended to\nprevent unexpected overflow. You should choose a limit based on your specific use case and consider\nthe user's experience. For example, someone looking for a new job finds there are ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"99+"})," new\nopportunities. Or perhaps someone returns from extended leave and is overwhelmed by ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"999+"})," unread\nmessages on their first day back."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_CustomLimit__WEBPACK_IMPORTED_MODULE_9__.CustomLimit}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"accessibility",children:"Accessibility"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"notification-badge",children:"Notification Badge"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Notifications are a major use case for ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"}),". When the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," value is updated in\nreal-time, screen readers must be supported with an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"})," that will automatically\ndescribe the change in the number of notifications. If the web app only updates ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," as part\nof another screen update, then this use of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"})," is unnecessary and not recommended."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Tooltip"})," is set on the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SecondaryButton"})," automatically applying the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-label"})," to the button."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-describedby"})," property is conditionally set on the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SecondaryButton"})," when greater than zero\nreferencing a unique ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"id"})," for the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," value ."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"})," is used around the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"}),", enabling screen readers to monitor changes in\nvalue."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-label"})," string is conditionally set on ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"}),' when greater than zero, describing\n"New notification"']}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_NotificationBadge__WEBPACK_IMPORTED_MODULE_10__.NotificationBadge}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"custom-styles",children:"Custom Styles"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Count Badge supports custom styling via the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop. For more information, check our\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://workday.github.io/canvas-kit/?path=/docs/styling-guides-customizing-styles--docs",target:"_blank",rel:"nofollow noopener noreferrer",children:'"How To Customize Styles"'}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"component-api",children:"Component API"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.SymbolDoc,{name:"CountBadge",fileName:"/react/"})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/react/badge/stories/examples/Basic.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Basic=void 0;var _badge=__webpack_require__("./modules/react/badge/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const containerStyles=(0,_canvasKitStyling.createStyles)({display:"flex",gap:_canvasTokensWeb.system.space.x2,padding:_canvasTokensWeb.system.space.x4}),Basic=()=>(0,_jsxRuntime.jsx)("div",{className:containerStyles,children:(0,_jsxRuntime.jsx)(_badge.CountBadge,{count:427})});exports.Basic=Basic,Basic.displayName="Basic",Basic.__RAW__="import {CountBadge} from '@workday/canvas-kit-react/badge';\nimport {createStyles} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\nconst containerStyles = createStyles({\n  display: 'flex',\n  gap: system.space.x2,\n  padding: system.space.x4,\n});\n\nexport const Basic = () => {\n  return (\n    <div className={containerStyles}>\n      <CountBadge count={427} />\n    </div>\n  );\n};\n"},"./modules/react/badge/stories/examples/CustomLimit.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CustomLimit=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_badge=__webpack_require__("./modules/react/badge/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const columnStyles=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",display:"flex",flexDirection:"column",gap:_canvasTokensWeb.system.space.x4}),controls=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",borderBottom:`solid 1px ${_canvasTokensWeb.system.color.border.divider}`,display:"flex",gap:_canvasTokensWeb.system.space.x1,padding:_canvasTokensWeb.system.space.x1}),defaultBackground=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",backgroundColor:_canvasTokensWeb.system.color.bg.alt.soft,padding:_canvasTokensWeb.system.space.x4}),inverseBackground=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",backgroundColor:_canvasTokensWeb.system.color.bg.primary.default,padding:_canvasTokensWeb.system.space.x4}),CustomLimit=()=>{const[count,setCount]=React.useState(1);return(0,_jsxRuntime.jsxs)("div",{className:columnStyles,children:[(0,_jsxRuntime.jsxs)("div",{className:controls,children:[(0,_jsxRuntime.jsx)(_button.TertiaryButton,{size:"small",onClick:()=>setCount(count+1),children:"Increment"}),(0,_jsxRuntime.jsx)(_button.TertiaryButton,{size:"small",onClick:()=>setCount(1),children:"Reset"})]}),(0,_jsxRuntime.jsx)("div",{className:defaultBackground,children:(0,_jsxRuntime.jsx)(_badge.CountBadge,{count,limit:10})}),(0,_jsxRuntime.jsx)("div",{className:inverseBackground,children:(0,_jsxRuntime.jsx)(_badge.CountBadge,{count,limit:10,variant:"inverse"})})]})};exports.CustomLimit=CustomLimit,CustomLimit.displayName="CustomLimit",CustomLimit.__RAW__="import * as React from 'react';\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\nimport {TertiaryButton} from '@workday/canvas-kit-react/button';\n\nimport {createStyles} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\nconst columnStyles = createStyles({\n  boxSizing: 'border-box',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: system.space.x4,\n});\n\nconst controls = createStyles({\n  boxSizing: 'border-box',\n  borderBottom: `solid 1px ${system.color.border.divider}`,\n  display: 'flex',\n  gap: system.space.x1,\n  padding: system.space.x1,\n});\n\nconst defaultBackground = createStyles({\n  boxSizing: 'border-box',\n  backgroundColor: system.color.bg.alt.soft,\n  padding: system.space.x4,\n});\n\nconst inverseBackground = createStyles({\n  boxSizing: 'border-box',\n  backgroundColor: system.color.bg.primary.default,\n  padding: system.space.x4,\n});\n\nconst initialCount = 1;\n\nexport const CustomLimit = () => {\n  const [count, setCount] = React.useState(initialCount);\n\n  return (\n    <div className={columnStyles}>\n      <div className={controls}>\n        <TertiaryButton size=\"small\" onClick={() => setCount(count + 1)}>\n          Increment\n        </TertiaryButton>\n        <TertiaryButton size=\"small\" onClick={() => setCount(initialCount)}>\n          Reset\n        </TertiaryButton>\n      </div>\n      <div className={defaultBackground}>\n        <CountBadge count={count} limit={10} />\n      </div>\n      <div className={inverseBackground}>\n        <CountBadge count={count} limit={10} variant=\"inverse\" />\n      </div>\n    </div>\n  );\n};\n"},"./modules/react/badge/stories/examples/Emphasis.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Emphasis=void 0;var _badge=__webpack_require__("./modules/react/badge/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_text=__webpack_require__("./modules/react/text/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const containerStyles=(0,_canvasKitStyling.createStyles)({display:"flex",gap:_canvasTokensWeb.system.space.x2,padding:_canvasTokensWeb.system.space.x4,flexDirection:"column"}),textStyles=(0,_canvasKitStyling.createStyles)({paddingInlineEnd:_canvasTokensWeb.system.space.x2}),Emphasis=()=>(0,_jsxRuntime.jsxs)("div",{className:containerStyles,children:[(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_text.Text,{as:"strong",className:textStyles,children:"Low Emphasis:"}),(0,_jsxRuntime.jsx)(_badge.CountBadge,{count:427,emphasis:"low"})]}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_text.Text,{as:"strong",className:textStyles,children:"High Emphasis:"}),(0,_jsxRuntime.jsx)(_badge.CountBadge,{count:427,emphasis:"high"})]})]});exports.Emphasis=Emphasis,Emphasis.displayName="Emphasis",Emphasis.__RAW__="import {CountBadge} from '@workday/canvas-kit-react/badge';\nimport {createStyles} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\nimport {Text} from '@workday/canvas-kit-react/text';\n\nconst containerStyles = createStyles({\n  display: 'flex',\n  gap: system.space.x2,\n  padding: system.space.x4,\n  flexDirection: 'column',\n});\n\nconst textStyles = createStyles({\n  paddingInlineEnd: system.space.x2,\n});\n\nexport const Emphasis = () => {\n  return (\n    <div className={containerStyles}>\n      <div>\n        <Text as=\"strong\" className={textStyles}>\n          Low Emphasis:\n        </Text>\n        <CountBadge count={427} emphasis=\"low\" />\n      </div>\n      <div>\n        <Text as=\"strong\" className={textStyles}>\n          High Emphasis:\n        </Text>\n        <CountBadge count={427} emphasis=\"high\" />\n      </div>\n    </div>\n  );\n};\n"},"./modules/react/badge/stories/examples/Inverse.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Inverse=void 0;var _badge=__webpack_require__("./modules/react/badge/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_text=__webpack_require__("./modules/react/text/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const containerStyles=(0,_canvasKitStyling.createStyles)({display:"flex",gap:_canvasTokensWeb.system.space.x2,padding:_canvasTokensWeb.system.space.x4,backgroundColor:_canvasTokensWeb.system.color.static.blue.default,flexDirection:"column"}),textStyles=(0,_canvasKitStyling.createStyles)({paddingInlineEnd:_canvasTokensWeb.system.space.x2}),Inverse=()=>(0,_jsxRuntime.jsxs)("div",{className:containerStyles,children:[(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_text.Text,{as:"strong",variant:"inverse",className:textStyles,children:"Low Emphasis:"}),(0,_jsxRuntime.jsx)(_badge.CountBadge,{count:427,variant:"inverse",emphasis:"low"})]}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)(_text.Text,{as:"strong",variant:"inverse",className:textStyles,children:"High Emphasis"}),(0,_jsxRuntime.jsx)(_badge.CountBadge,{count:427,variant:"inverse",emphasis:"high"})]})]});exports.Inverse=Inverse,Inverse.displayName="Inverse",Inverse.__RAW__='import {CountBadge} from \'@workday/canvas-kit-react/badge\';\nimport {createStyles, cssVar} from \'@workday/canvas-kit-styling\';\nimport {system} from \'@workday/canvas-tokens-web\';\nimport {Text} from \'@workday/canvas-kit-react/text\';\nconst containerStyles = createStyles({\n  display: \'flex\',\n  gap: system.space.x2,\n  padding: system.space.x4,\n  backgroundColor: system.color.static.blue.default,\n  flexDirection: \'column\',\n});\n\nconst textStyles = createStyles({\n  paddingInlineEnd: system.space.x2,\n});\n\nexport const Inverse = () => {\n  return (\n    <div className={containerStyles}>\n      <div>\n        <Text as="strong" variant="inverse" className={textStyles}>\n          Low Emphasis:\n        </Text>\n        <CountBadge count={427} variant="inverse" emphasis="low" />\n      </div>\n      <div>\n        <Text as="strong" variant="inverse" className={textStyles}>\n          High Emphasis\n        </Text>\n        <CountBadge count={427} variant="inverse" emphasis="high" />\n      </div>\n    </div>\n  );\n};\n'},"./modules/react/badge/stories/examples/NotificationBadge.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NotificationBadge=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_badge=__webpack_require__("./modules/react/badge/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function negate(value,fallback){return`calc(${(0,_canvasKitStyling.cssVar)(value,fallback)} * -1)`}const container=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",flexDirection:"column",gap:_canvasTokensWeb.system.space.x4}),controls=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",gap:_canvasTokensWeb.system.space.x2,padding:_canvasTokensWeb.system.space.x1}),notificationContainerStyles=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",position:"relative"}),countBadgeStyles=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",position:"absolute",top:negate(_canvasTokensWeb.system.space.x1),insetInlineEnd:negate(_canvasTokensWeb.system.space.x1)}),NotificationBadge=()=>{const[count,setCount]=React.useState(4),badgeID=(0,_common.useUniqueId)();return(0,_jsxRuntime.jsxs)(_layout.Flex,{cs:container,children:[(0,_jsxRuntime.jsxs)(_layout.Flex,{cs:controls,children:[(0,_jsxRuntime.jsx)(_button.TertiaryButton,{size:"small",onClick:()=>setCount(count+1),children:"Add Notification"}),(0,_jsxRuntime.jsx)(_button.TertiaryButton,{size:"small",onClick:()=>setCount(0),children:"Clear"})]}),(0,_jsxRuntime.jsx)(_layout.Flex,{children:(0,_jsxRuntime.jsxs)("span",{className:notificationContainerStyles,children:[(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"Notifications",children:(0,_jsxRuntime.jsx)(_button.SecondaryButton,{size:"medium",icon:_canvasSystemIconsWeb.notificationsIcon,"aria-describedby":count?badgeID:void 0})}),(0,_jsxRuntime.jsx)(_common.AriaLiveRegion,{"aria-label":count?"New notifications":void 0,children:!!count&&(0,_jsxRuntime.jsx)(_badge.CountBadge,{id:badgeID,count,limit:100,cs:countBadgeStyles})})]})})]})};exports.NotificationBadge=NotificationBadge,NotificationBadge.displayName="NotificationBadge",NotificationBadge.__RAW__="import * as React from 'react';\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\nimport {SecondaryButton, TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {AriaLiveRegion, useUniqueId} from '@workday/canvas-kit-react/common';\nimport {createStyles, cssVar} from '@workday/canvas-kit-styling';\nimport {notificationsIcon} from '@workday/canvas-system-icons-web';\nimport {system} from '@workday/canvas-tokens-web';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {Flex} from '@workday/canvas-kit-react/layout';\n\nfunction negate(value: string, fallback?: string) {\n  return `calc(${cssVar(value, fallback)} * -1)`;\n}\n\nconst container = createStyles({\n  boxSizing: 'border-box',\n  flexDirection: 'column',\n  gap: system.space.x4,\n});\n\nconst controls = createStyles({\n  boxSizing: 'border-box',\n  gap: system.space.x2,\n  padding: system.space.x1,\n});\n\nconst notificationContainerStyles = createStyles({\n  boxSizing: 'border-box',\n  position: 'relative',\n});\n\nconst countBadgeStyles = createStyles({\n  boxSizing: 'border-box',\n  position: 'absolute',\n  top: negate(system.space.x1),\n  insetInlineEnd: negate(system.space.x1),\n});\n\n// Testing notes (Aug. 30, 2024):\n// Windows 11\n// JAWS 2024 + Chrome / Edge: \"New notifications\" once, then only the count change \"2\"\n// JAWS 2024 + FF: \"New notifications\" once, then describes nothing\n// NVDA + Chrome / Edge: Consistently describes \"{X} New notifications\"\n// NVDA + FF: Consistently describes count value only \"{X}\"\n// macOS v14.6.1\n// VoiceOver + Chrome / Safari: Consistently describes \"New notifications {X}\"\nexport const NotificationBadge = () => {\n  const [count, setCount] = React.useState(4);\n  const badgeID = useUniqueId();\n\n  return (\n    <Flex cs={container}>\n      <Flex cs={controls}>\n        <TertiaryButton size=\"small\" onClick={() => setCount(count + 1)}>\n          Add Notification\n        </TertiaryButton>\n        <TertiaryButton size=\"small\" onClick={() => setCount(0)}>\n          Clear\n        </TertiaryButton>\n      </Flex>\n      <Flex>\n        <span className={notificationContainerStyles}>\n          <Tooltip title=\"Notifications\">\n            <SecondaryButton\n              size=\"medium\"\n              icon={notificationsIcon}\n              aria-describedby={!!count ? badgeID : undefined}\n            />\n          </Tooltip>\n          <AriaLiveRegion aria-label={!!count ? 'New notifications' : undefined}>\n            {!!count && <CountBadge id={badgeID} count={count} limit={100} cs={countBadgeStyles} />}\n          </AriaLiveRegion>\n        </span>\n      </Flex>\n    </Flex>\n  );\n};\n"}}]);