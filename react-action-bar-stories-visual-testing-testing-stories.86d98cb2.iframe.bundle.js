"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[2168],{"./modules/react/action-bar/stories/visual-testing/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionBarWithOverflowMenuStates=exports.ActionBarStates=exports.default=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_testing=__webpack_require__("./modules/react/testing/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_actionBar=__webpack_require__("./modules/react/action-bar/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts");var _default={title:"Testing/Buttons/ActionBar",component:_actionBar.ActionBar,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {colors, space} from '@workday/canvas-kit-react/tokens';\\nimport {ActionBar} from '@workday/canvas-kit-react/action-bar';\\nimport {PrimaryButton, SecondaryButton} from '@workday/canvas-kit-react/button';\\n\\nexport default {\\n  title: 'Testing/Buttons/ActionBar',\\n  component: ActionBar,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\ntype MyActionItem = {\\n  id: string;\\n  text: React.ReactNode;\\n};\\n\\nexport const ActionBarStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'With Absolute Positioning', props: {position: 'absolute'}},\\n          {label: 'With Relative Positioning', props: {position: 'relative'}},\\n          {label: 'Default (with fixed position)', props: {}},\\n        ]}\\n        columnProps={[{label: ' ', props: {}}]}\\n      >\\n        {props => (\\n          <div\\n            style={{\\n              background: colors.soap100,\\n              position: 'relative',\\n              height: `calc(${space.xxl} + 2.25rem)`,\\n              marginBottom: space.xs,\\n            }}\\n          >\\n            <p style={{padding: space.xs}}>Outer Block</p>\\n            <ActionBar>\\n              <ActionBar.List {...props}>\\n                <PrimaryButton>First Action</PrimaryButton>\\n                <SecondaryButton>Second Action</SecondaryButton>\\n              </ActionBar.List>\\n            </ActionBar>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const ActionBarWithOverflowMenuStates = {\\n  render: () => {\\n    const [items] = React.useState<MyActionItem[]>([\\n      {id: 'first', text: 'First Action'},\\n      {id: 'second', text: 'Second Action'},\\n      {id: 'third', text: 'Third Action'},\\n      {id: 'fourth', text: 'Fourth Action'},\\n      {id: 'fifth', text: 'Fifth Action'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Default Action Bar', props: {}},\\n            {label: 'Default Action Bar (400px width container)', props: {containerWidth: 400}},\\n            {\\n              label: 'Default Action Bar (280px width container)',\\n              props: {containerWidth: 280},\\n            },\\n            {\\n              label: 'Minimum Visible Items (as 1 button)',\\n              props: {maximumVisible: 1},\\n            },\\n            {\\n              label: 'Custom Number Visible Items (as 4 button)',\\n              props: {maximumVisible: 2},\\n            },\\n            {\\n              label: 'Maximum Visible Items (as 5 buttons)',\\n              props: {maximumVisible: items.length, containerWidth: 830},\\n            },\\n            {\\n              label: 'Maximum Visible Items (400px width)',\\n              props: {maximumVisible: items.length, containerWidth: 400},\\n            },\\n            {\\n              label: 'Maximum Visible Items (280px width)',\\n              props: {maximumVisible: items.length, containerWidth: 280},\\n            },\\n          ]}\\n          columnProps={[{label: 'Example', props: {}}]}\\n        >\\n          {({containerWidth, maximumVisible}) => (\\n            <ActionBar items={items} maximumVisible={maximumVisible}>\\n              <ActionBar.List\\n                width={containerWidth}\\n                position=\\\"relative\\\"\\n                overflowButton={<ActionBar.OverflowButton aria-label=\\\"More actions\\\" />}\\n              >\\n                {(item: MyActionItem, index: number) => (\\n                  <ActionBar.Item as={index === 0 ? PrimaryButton : undefined}>\\n                    {item.text}\\n                  </ActionBar.Item>\\n                )}\\n              </ActionBar.List>\\n              <ActionBar.Menu.Popper>\\n                <ActionBar.Menu.Card maxWidth={300} maxHeight={200}>\\n                  <ActionBar.Menu.List>\\n                    {(item: MyActionItem) => <ActionBar.Menu.Item>{item.text}</ActionBar.Menu.Item>}\\n                  </ActionBar.Menu.List>\\n                </ActionBar.Menu.Card>\\n              </ActionBar.Menu.Popper>\\n            </ActionBar>\\n          )}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"ActionBarStates\": {\n    \"startLoc\": {\n      \"col\": 31,\n      \"line\": 22\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 54\n    },\n    \"startBody\": {\n      \"col\": 31,\n      \"line\": 22\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 54\n    }\n  },\n  \"ActionBarWithOverflowMenuStates\": {\n    \"startLoc\": {\n      \"col\": 47,\n      \"line\": 56\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 125\n    },\n    \"startBody\": {\n      \"col\": 47,\n      \"line\": 56\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 125\n    }\n  }\n};\n    \nimport React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {colors, space} from '@workday/canvas-kit-react/tokens';\nimport {ActionBar} from '@workday/canvas-kit-react/action-bar';\nimport {PrimaryButton, SecondaryButton} from '@workday/canvas-kit-react/button';\n\nexport default {\n  title: 'Testing/Buttons/ActionBar',\n  component: ActionBar,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {colors, space} from '@workday/canvas-kit-react/tokens';\\nimport {ActionBar} from '@workday/canvas-kit-react/action-bar';\\nimport {PrimaryButton, SecondaryButton} from '@workday/canvas-kit-react/button';\\n\\nexport default {\\n  title: 'Testing/Buttons/ActionBar',\\n  component: ActionBar,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\ntype MyActionItem = {\\n  id: string;\\n  text: React.ReactNode;\\n};\\n\\nexport const ActionBarStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'With Absolute Positioning', props: {position: 'absolute'}},\\n          {label: 'With Relative Positioning', props: {position: 'relative'}},\\n          {label: 'Default (with fixed position)', props: {}},\\n        ]}\\n        columnProps={[{label: ' ', props: {}}]}\\n      >\\n        {props => (\\n          <div\\n            style={{\\n              background: colors.soap100,\\n              position: 'relative',\\n              height: `calc(${space.xxl} + 2.25rem)`,\\n              marginBottom: space.xs,\\n            }}\\n          >\\n            <p style={{padding: space.xs}}>Outer Block</p>\\n            <ActionBar>\\n              <ActionBar.List {...props}>\\n                <PrimaryButton>First Action</PrimaryButton>\\n                <SecondaryButton>Second Action</SecondaryButton>\\n              </ActionBar.List>\\n            </ActionBar>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\\nexport const ActionBarWithOverflowMenuStates = {\\n  render: () => {\\n    const [items] = React.useState<MyActionItem[]>([\\n      {id: 'first', text: 'First Action'},\\n      {id: 'second', text: 'Second Action'},\\n      {id: 'third', text: 'Third Action'},\\n      {id: 'fourth', text: 'Fourth Action'},\\n      {id: 'fifth', text: 'Fifth Action'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Default Action Bar', props: {}},\\n            {label: 'Default Action Bar (400px width container)', props: {containerWidth: 400}},\\n            {\\n              label: 'Default Action Bar (280px width container)',\\n              props: {containerWidth: 280},\\n            },\\n            {\\n              label: 'Minimum Visible Items (as 1 button)',\\n              props: {maximumVisible: 1},\\n            },\\n            {\\n              label: 'Custom Number Visible Items (as 4 button)',\\n              props: {maximumVisible: 2},\\n            },\\n            {\\n              label: 'Maximum Visible Items (as 5 buttons)',\\n              props: {maximumVisible: items.length, containerWidth: 830},\\n            },\\n            {\\n              label: 'Maximum Visible Items (400px width)',\\n              props: {maximumVisible: items.length, containerWidth: 400},\\n            },\\n            {\\n              label: 'Maximum Visible Items (280px width)',\\n              props: {maximumVisible: items.length, containerWidth: 280},\\n            },\\n          ]}\\n          columnProps={[{label: 'Example', props: {}}]}\\n        >\\n          {({containerWidth, maximumVisible}) => (\\n            <ActionBar items={items} maximumVisible={maximumVisible}>\\n              <ActionBar.List\\n                width={containerWidth}\\n                position=\\\"relative\\\"\\n                overflowButton={<ActionBar.OverflowButton aria-label=\\\"More actions\\\" />}\\n              >\\n                {(item: MyActionItem, index: number) => (\\n                  <ActionBar.Item as={index === 0 ? PrimaryButton : undefined}>\\n                    {item.text}\\n                  </ActionBar.Item>\\n                )}\\n              </ActionBar.List>\\n              <ActionBar.Menu.Popper>\\n                <ActionBar.Menu.Card maxWidth={300} maxHeight={200}>\\n                  <ActionBar.Menu.List>\\n                    {(item: MyActionItem) => <ActionBar.Menu.Item>{item.text}</ActionBar.Menu.Item>}\\n                  </ActionBar.Menu.List>\\n                </ActionBar.Menu.Card>\\n              </ActionBar.Menu.Popper>\\n            </ActionBar>\\n          )}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\",\n    \"locationsMap\": {\n      \"action-bar-states\": {\n        \"startLoc\": {\n          \"col\": 31,\n          \"line\": 22\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 54\n        },\n        \"startBody\": {\n          \"col\": 31,\n          \"line\": 22\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 54\n        }\n      },\n      \"action-bar-with-overflow-menu-states\": {\n        \"startLoc\": {\n          \"col\": 47,\n          \"line\": 56\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 125\n        },\n        \"startBody\": {\n          \"col\": 47,\n          \"line\": 56\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 125\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\ntype MyActionItem = {\n  id: string;\n  text: React.ReactNode;\n};\n\nexport const ActionBarStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'With Absolute Positioning', props: {position: 'absolute'}},\n          {label: 'With Relative Positioning', props: {position: 'relative'}},\n          {label: 'Default (with fixed position)', props: {}},\n        ]}\n        columnProps={[{label: ' ', props: {}}]}\n      >\n        {props => (\n          <div\n            style={{\n              background: colors.soap100,\n              position: 'relative',\n              height: `calc(${space.xxl} + 2.25rem)`,\n              marginBottom: space.xs,\n            }}\n          >\n            <p style={{padding: space.xs}}>Outer Block</p>\n            <ActionBar>\n              <ActionBar.List {...props}>\n                <PrimaryButton>First Action</PrimaryButton>\n                <SecondaryButton>Second Action</SecondaryButton>\n              </ActionBar.List>\n            </ActionBar>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};;\n\nexport const ActionBarWithOverflowMenuStates = {\n  render: () => {\n    const [items] = React.useState<MyActionItem[]>([\n      {id: 'first', text: 'First Action'},\n      {id: 'second', text: 'Second Action'},\n      {id: 'third', text: 'Third Action'},\n      {id: 'fourth', text: 'Fourth Action'},\n      {id: 'fifth', text: 'Fifth Action'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Default Action Bar', props: {}},\n            {label: 'Default Action Bar (400px width container)', props: {containerWidth: 400}},\n            {\n              label: 'Default Action Bar (280px width container)',\n              props: {containerWidth: 280},\n            },\n            {\n              label: 'Minimum Visible Items (as 1 button)',\n              props: {maximumVisible: 1},\n            },\n            {\n              label: 'Custom Number Visible Items (as 4 button)',\n              props: {maximumVisible: 2},\n            },\n            {\n              label: 'Maximum Visible Items (as 5 buttons)',\n              props: {maximumVisible: items.length, containerWidth: 830},\n            },\n            {\n              label: 'Maximum Visible Items (400px width)',\n              props: {maximumVisible: items.length, containerWidth: 400},\n            },\n            {\n              label: 'Maximum Visible Items (280px width)',\n              props: {maximumVisible: items.length, containerWidth: 280},\n            },\n          ]}\n          columnProps={[{label: 'Example', props: {}}]}\n        >\n          {({containerWidth, maximumVisible}) => (\n            <ActionBar items={items} maximumVisible={maximumVisible}>\n              <ActionBar.List\n                width={containerWidth}\n                position=\"relative\"\n                overflowButton={<ActionBar.OverflowButton aria-label=\"More actions\" />}\n              >\n                {(item: MyActionItem, index: number) => (\n                  <ActionBar.Item as={index === 0 ? PrimaryButton : undefined}>\n                    {item.text}\n                  </ActionBar.Item>\n                )}\n              </ActionBar.List>\n              <ActionBar.Menu.Popper>\n                <ActionBar.Menu.Card maxWidth={300} maxHeight={200}>\n                  <ActionBar.Menu.List>\n                    {(item: MyActionItem) => <ActionBar.Menu.Item>{item.text}</ActionBar.Menu.Item>}\n                  </ActionBar.Menu.List>\n                </ActionBar.Menu.Card>\n              </ActionBar.Menu.Popper>\n            </ActionBar>\n          )}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"action-bar-states":{startLoc:{col:31,line:109},endLoc:{col:1,line:141},startBody:{col:31,line:109},endBody:{col:1,line:141}},"action-bar-with-overflow-menu-states":{startLoc:{col:47,line:143},endLoc:{col:1,line:212},startBody:{col:47,line:143},endBody:{col:1,line:212}}}},storySource:{source:"import React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {colors, space} from '@workday/canvas-kit-react/tokens';\nimport {ActionBar} from '@workday/canvas-kit-react/action-bar';\nimport {PrimaryButton, SecondaryButton} from '@workday/canvas-kit-react/button';\n\nexport default {\n  title: 'Testing/Buttons/ActionBar',\n  component: ActionBar,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\ntype MyActionItem = {\n  id: string;\n  text: React.ReactNode;\n};\n\nexport const ActionBarStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'With Absolute Positioning', props: {position: 'absolute'}},\n          {label: 'With Relative Positioning', props: {position: 'relative'}},\n          {label: 'Default (with fixed position)', props: {}},\n        ]}\n        columnProps={[{label: ' ', props: {}}]}\n      >\n        {props => (\n          <div\n            style={{\n              background: colors.soap100,\n              position: 'relative',\n              height: `calc(${space.xxl} + 2.25rem)`,\n              marginBottom: space.xs,\n            }}\n          >\n            <p style={{padding: space.xs}}>Outer Block</p>\n            <ActionBar>\n              <ActionBar.List {...props}>\n                <PrimaryButton>First Action</PrimaryButton>\n                <SecondaryButton>Second Action</SecondaryButton>\n              </ActionBar.List>\n            </ActionBar>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n\nexport const ActionBarWithOverflowMenuStates = {\n  render: () => {\n    const [items] = React.useState<MyActionItem[]>([\n      {id: 'first', text: 'First Action'},\n      {id: 'second', text: 'Second Action'},\n      {id: 'third', text: 'Third Action'},\n      {id: 'fourth', text: 'Fourth Action'},\n      {id: 'fifth', text: 'Fifth Action'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Default Action Bar', props: {}},\n            {label: 'Default Action Bar (400px width container)', props: {containerWidth: 400}},\n            {\n              label: 'Default Action Bar (280px width container)',\n              props: {containerWidth: 280},\n            },\n            {\n              label: 'Minimum Visible Items (as 1 button)',\n              props: {maximumVisible: 1},\n            },\n            {\n              label: 'Custom Number Visible Items (as 4 button)',\n              props: {maximumVisible: 2},\n            },\n            {\n              label: 'Maximum Visible Items (as 5 buttons)',\n              props: {maximumVisible: items.length, containerWidth: 830},\n            },\n            {\n              label: 'Maximum Visible Items (400px width)',\n              props: {maximumVisible: items.length, containerWidth: 400},\n            },\n            {\n              label: 'Maximum Visible Items (280px width)',\n              props: {maximumVisible: items.length, containerWidth: 280},\n            },\n          ]}\n          columnProps={[{label: 'Example', props: {}}]}\n        >\n          {({containerWidth, maximumVisible}) => (\n            <ActionBar items={items} maximumVisible={maximumVisible}>\n              <ActionBar.List\n                width={containerWidth}\n                position=\"relative\"\n                overflowButton={<ActionBar.OverflowButton aria-label=\"More actions\" />}\n              >\n                {(item: MyActionItem, index: number) => (\n                  <ActionBar.Item as={index === 0 ? PrimaryButton : undefined}>\n                    {item.text}\n                  </ActionBar.Item>\n                )}\n              </ActionBar.List>\n              <ActionBar.Menu.Popper>\n                <ActionBar.Menu.Card maxWidth={300} maxHeight={200}>\n                  <ActionBar.Menu.List>\n                    {(item: MyActionItem) => <ActionBar.Menu.Item>{item.text}</ActionBar.Menu.Item>}\n                  </ActionBar.Menu.List>\n                </ActionBar.Menu.Card>\n              </ActionBar.Menu.Popper>\n            </ActionBar>\n          )}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"action-bar-states":{startLoc:{col:31,line:22},endLoc:{col:1,line:54},startBody:{col:31,line:22},endBody:{col:1,line:54}},"action-bar-with-overflow-menu-states":{startLoc:{col:47,line:56},endLoc:{col:1,line:125},startBody:{col:47,line:56},endBody:{col:1,line:125}}}},chromatic:{disable:!1}}};exports.default=_default;const ActionBarStates={render:()=>_react.default.createElement(_testing.StaticStates,null,_react.default.createElement(_testing.ComponentStatesTable,{rowProps:[{label:"With Absolute Positioning",props:{position:"absolute"}},{label:"With Relative Positioning",props:{position:"relative"}},{label:"Default (with fixed position)",props:{}}],columnProps:[{label:" ",props:{}}]},(props=>_react.default.createElement("div",{style:{background:_tokens.colors.soap100,position:"relative",height:`calc(${_tokens.space.xxl} + 2.25rem)`,marginBottom:_tokens.space.xs}},_react.default.createElement("p",{style:{padding:_tokens.space.xs}},"Outer Block"),_react.default.createElement(_actionBar.ActionBar,null,_react.default.createElement(_actionBar.ActionBar.List,props,_react.default.createElement(_button.PrimaryButton,null,"First Action"),_react.default.createElement(_button.SecondaryButton,null,"Second Action")))))))};exports.ActionBarStates=ActionBarStates;const ActionBarWithOverflowMenuStates={render:()=>{const[items]=_react.default.useState([{id:"first",text:"First Action"},{id:"second",text:"Second Action"},{id:"third",text:"Third Action"},{id:"fourth",text:"Fourth Action"},{id:"fifth",text:"Fifth Action"}]);return _react.default.createElement(_testing.StaticStates,null,_react.default.createElement(_testing.ComponentStatesTable,{rowProps:[{label:"Default Action Bar",props:{}},{label:"Default Action Bar (400px width container)",props:{containerWidth:400}},{label:"Default Action Bar (280px width container)",props:{containerWidth:280}},{label:"Minimum Visible Items (as 1 button)",props:{maximumVisible:1}},{label:"Custom Number Visible Items (as 4 button)",props:{maximumVisible:2}},{label:"Maximum Visible Items (as 5 buttons)",props:{maximumVisible:items.length,containerWidth:830}},{label:"Maximum Visible Items (400px width)",props:{maximumVisible:items.length,containerWidth:400}},{label:"Maximum Visible Items (280px width)",props:{maximumVisible:items.length,containerWidth:280}}],columnProps:[{label:"Example",props:{}}]},(({containerWidth,maximumVisible})=>_react.default.createElement(_actionBar.ActionBar,{items,maximumVisible},_react.default.createElement(_actionBar.ActionBar.List,{width:containerWidth,position:"relative",overflowButton:_react.default.createElement(_actionBar.ActionBar.OverflowButton,{"aria-label":"More actions"})},((item,index)=>_react.default.createElement(_actionBar.ActionBar.Item,{as:0===index?_button.PrimaryButton:void 0},item.text))),_react.default.createElement(_actionBar.ActionBar.Menu.Popper,null,_react.default.createElement(_actionBar.ActionBar.Menu.Card,{maxWidth:300,maxHeight:200},_react.default.createElement(_actionBar.ActionBar.Menu.List,null,(item=>_react.default.createElement(_actionBar.ActionBar.Menu.Item,null,item.text)))))))))}};exports.ActionBarWithOverflowMenuStates=ActionBarWithOverflowMenuStates,module.exports.__namedExportsOrder=["ActionBarWithOverflowMenuStates","ActionBarStates"]},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText},"./node_modules/react-virtual/dist/react-virtual.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{defaultRangeExtractor:()=>defaultRangeExtractor,useVirtual:()=>useVirtual});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var rafId,props=["bottom","height","left","right","top","width"],observedNodes=new Map,run=function run(){var changedStates=[];observedNodes.forEach((function(state,node){var newRect=node.getBoundingClientRect();(function rectChanged(a,b){return void 0===a&&(a={}),void 0===b&&(b={}),props.some((function(prop){return a[prop]!==b[prop]}))})(newRect,state.rect)&&(state.rect=newRect,changedStates.push(state))})),changedStates.forEach((function(state){state.callbacks.forEach((function(cb){return cb(state.rect)}))})),rafId=window.requestAnimationFrame(run)};var useIsomorphicLayoutEffect="undefined"!=typeof window?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect;function useRect(nodeRef,initialRect){void 0===initialRect&&(initialRect={width:0,height:0});var _React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(nodeRef.current),element=_React$useState[0],setElement=_React$useState[1],_React$useReducer=react__WEBPACK_IMPORTED_MODULE_0__.useReducer(rectReducer,initialRect),rect=_React$useReducer[0],dispatch=_React$useReducer[1],initialRectSet=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);return useIsomorphicLayoutEffect((function(){nodeRef.current!==element&&setElement(nodeRef.current)})),useIsomorphicLayoutEffect((function(){if(element&&!initialRectSet.current){initialRectSet.current=!0;var _rect=element.getBoundingClientRect();dispatch({rect:_rect})}}),[element]),react__WEBPACK_IMPORTED_MODULE_0__.useEffect((function(){if(element){var observer=function observeRect(node,cb){return{observe:function observe(){var wasEmpty=0===observedNodes.size;observedNodes.has(node)?observedNodes.get(node).callbacks.push(cb):observedNodes.set(node,{rect:void 0,hasRectChanged:!1,callbacks:[cb]}),wasEmpty&&run()},unobserve:function unobserve(){var state=observedNodes.get(node);if(state){var index=state.callbacks.indexOf(cb);index>=0&&state.callbacks.splice(index,1),state.callbacks.length||observedNodes.delete(node),observedNodes.size||cancelAnimationFrame(rafId)}}}}(element,(function(rect){dispatch({rect})}));return observer.observe(),function(){observer.unobserve()}}}),[element]),rect}function rectReducer(state,action){var rect=action.rect;return state.height!==rect.height||state.width!==rect.width?rect:state}var defaultEstimateSize=function defaultEstimateSize(){return 50},defaultKeyExtractor=function defaultKeyExtractor(index){return index},defaultMeasureSize=function defaultMeasureSize(el,horizontal){return el[horizontal?"offsetWidth":"offsetHeight"]},defaultRangeExtractor=function defaultRangeExtractor(range){for(var start=Math.max(range.start-range.overscan,0),end=Math.min(range.end+range.overscan,range.size-1),arr=[],i=start;i<=end;i++)arr.push(i);return arr};function useVirtual(_ref){var _measurements,_ref$size=_ref.size,size=void 0===_ref$size?0:_ref$size,_ref$estimateSize=_ref.estimateSize,estimateSize=void 0===_ref$estimateSize?defaultEstimateSize:_ref$estimateSize,_ref$overscan=_ref.overscan,overscan=void 0===_ref$overscan?1:_ref$overscan,_ref$paddingStart=_ref.paddingStart,paddingStart=void 0===_ref$paddingStart?0:_ref$paddingStart,_ref$paddingEnd=_ref.paddingEnd,paddingEnd=void 0===_ref$paddingEnd?0:_ref$paddingEnd,parentRef=_ref.parentRef,horizontal=_ref.horizontal,scrollToFn=_ref.scrollToFn,useObserver=_ref.useObserver,initialRect=_ref.initialRect,onScrollElement=_ref.onScrollElement,scrollOffsetFn=_ref.scrollOffsetFn,_ref$keyExtractor=_ref.keyExtractor,keyExtractor=void 0===_ref$keyExtractor?defaultKeyExtractor:_ref$keyExtractor,_ref$measureSize=_ref.measureSize,measureSize=void 0===_ref$measureSize?defaultMeasureSize:_ref$measureSize,_ref$rangeExtractor=_ref.rangeExtractor,rangeExtractor=void 0===_ref$rangeExtractor?defaultRangeExtractor:_ref$rangeExtractor,sizeKey=horizontal?"width":"height",scrollKey=horizontal?"scrollLeft":"scrollTop",latestRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef({scrollOffset:0,measurements:[]}),_React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),scrollOffset=_React$useState[0],setScrollOffset=_React$useState[1];latestRef.current.scrollOffset=scrollOffset;var outerSize=(useObserver||useRect)(parentRef,initialRect)[sizeKey];latestRef.current.outerSize=outerSize;var defaultScrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){parentRef.current&&(parentRef.current[scrollKey]=offset)}),[parentRef,scrollKey]),resolvedScrollToFn=scrollToFn||defaultScrollToFn;scrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){resolvedScrollToFn(offset,defaultScrollToFn)}),[defaultScrollToFn,resolvedScrollToFn]);var _React$useState2=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),measuredCache=_React$useState2[0],setMeasuredCache=_React$useState2[1],measure=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){return setMeasuredCache({})}),[]),pendingMeasuredCacheIndexesRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef([]),measurements=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){var min=pendingMeasuredCacheIndexesRef.current.length>0?Math.min.apply(Math,pendingMeasuredCacheIndexesRef.current):0;pendingMeasuredCacheIndexesRef.current=[];for(var measurements=latestRef.current.measurements.slice(0,min),i=min;i<size;i++){var key=keyExtractor(i),measuredSize=measuredCache[key],_start=measurements[i-1]?measurements[i-1].end:paddingStart,_size="number"==typeof measuredSize?measuredSize:estimateSize(i),_end=_start+_size;measurements[i]={index:i,start:_start,size:_size,end:_end,key}}return measurements}),[estimateSize,measuredCache,paddingStart,size,keyExtractor]),totalSize=((null==(_measurements=measurements[size-1])?void 0:_measurements.end)||paddingStart)+paddingEnd;latestRef.current.measurements=measurements,latestRef.current.totalSize=totalSize;var element=onScrollElement?onScrollElement.current:parentRef.current,scrollOffsetFnRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(scrollOffsetFn);scrollOffsetFnRef.current=scrollOffsetFn,useIsomorphicLayoutEffect((function(){if(element){var onScroll=function onScroll(event){var offset=scrollOffsetFnRef.current?scrollOffsetFnRef.current(event):element[scrollKey];setScrollOffset(offset)};return onScroll(),element.addEventListener("scroll",onScroll,{capture:!1,passive:!0}),function(){element.removeEventListener("scroll",onScroll)}}setScrollOffset(0)}),[element,scrollKey]);var _calculateRange=function calculateRange(_ref4){var measurements=_ref4.measurements,outerSize=_ref4.outerSize,scrollOffset=_ref4.scrollOffset,size=measurements.length-1,getOffset=function getOffset(index){return measurements[index].start},start=findNearestBinarySearch(0,size,getOffset,scrollOffset),end=start;for(;end<size&&measurements[end].end<scrollOffset+outerSize;)end++;return{start,end}}(latestRef.current),start=_calculateRange.start,end=_calculateRange.end,indexes=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return rangeExtractor({start,end,overscan,size:measurements.length})}),[start,end,overscan,measurements.length,rangeExtractor]),measureSizeRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(measureSize);measureSizeRef.current=measureSize;var virtualItems=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){for(var virtualItems=[],_loop=function _loop(k,len){var i=indexes[k],item=_extends(_extends({},measurements[i]),{},{measureRef:function measureRef(el){if(el){var measuredSize=measureSizeRef.current(el,horizontal);if(measuredSize!==item.size){var _scrollOffset=latestRef.current.scrollOffset;item.start<_scrollOffset&&defaultScrollToFn(_scrollOffset+(measuredSize-item.size)),pendingMeasuredCacheIndexesRef.current.push(i),setMeasuredCache((function(old){var _extends2;return _extends(_extends({},old),{},((_extends2={})[item.key]=measuredSize,_extends2))}))}}}});virtualItems.push(item)},k=0,len=indexes.length;k<len;k++)_loop(k);return virtualItems}),[indexes,defaultScrollToFn,horizontal,measurements]),mountedRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);useIsomorphicLayoutEffect((function(){mountedRef.current&&setMeasuredCache({}),mountedRef.current=!0}),[estimateSize]);var scrollToOffset=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(toOffset,_temp){var _ref2$align=(void 0===_temp?{}:_temp).align,align=void 0===_ref2$align?"start":_ref2$align,_latestRef$current=latestRef.current,scrollOffset=_latestRef$current.scrollOffset,outerSize=_latestRef$current.outerSize;"auto"===align&&(align=toOffset<=scrollOffset?"start":toOffset>=scrollOffset+outerSize?"end":"start"),"start"===align?scrollToFn(toOffset):"end"===align?scrollToFn(toOffset-outerSize):"center"===align&&scrollToFn(toOffset-outerSize/2)}),[scrollToFn]),tryScrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(index,_temp2){var _ref3=void 0===_temp2?{}:_temp2,_ref3$align=_ref3.align,align=void 0===_ref3$align?"auto":_ref3$align,rest=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_ref3,["align"]),_latestRef$current2=latestRef.current,measurements=_latestRef$current2.measurements,scrollOffset=_latestRef$current2.scrollOffset,outerSize=_latestRef$current2.outerSize,measurement=measurements[Math.max(0,Math.min(index,size-1))];if(measurement){if("auto"===align)if(measurement.end>=scrollOffset+outerSize)align="end";else{if(!(measurement.start<=scrollOffset))return;align="start"}var toOffset="center"===align?measurement.start+measurement.size/2:"end"===align?measurement.end:measurement.start;scrollToOffset(toOffset,_extends({align},rest))}}),[scrollToOffset,size]),scrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];tryScrollToIndex.apply(void 0,args),requestAnimationFrame((function(){tryScrollToIndex.apply(void 0,args)}))}),[tryScrollToIndex]);return{virtualItems,totalSize,scrollToOffset,scrollToIndex,measure}}var findNearestBinarySearch=function findNearestBinarySearch(low,high,getCurrentValue,value){for(;low<=high;){var middle=(low+high)/2|0,currentValue=getCurrentValue(middle);if(currentValue<value)low=middle+1;else{if(!(currentValue>value))return middle;high=middle-1}}return low>0?low-1:0}}}]);