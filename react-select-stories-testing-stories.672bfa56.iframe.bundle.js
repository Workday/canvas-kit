"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1110],{"./modules/react/select/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SelectThemedStates=exports.SelectStates=exports.SelectOpenMenuThemedStates=exports.SelectOpenMenuStates=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_testing=__webpack_require__("./modules/react/testing/index.ts"),_storybook=__webpack_require__("./utils/storybook/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_select=__webpack_require__("./modules/react/select/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}exports.default={title:"Testing/Inputs/Select",component:_select.Select,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import * as React from 'react';\\n\\nimport {\\n  ComponentStatesTable,\\n  permutateProps,\\n  StaticStates,\\n} from '@workday/canvas-kit-react/testing';\\nimport {customColorTheme} from '../../../../utils/storybook';\\nimport {FormField} from '@workday/canvas-kit-react/form-field';\\n\\nimport {Select, useSelectModel} from '@workday/canvas-kit-react/select';\\nimport {PartialEmotionCanvasTheme} from '@workday/canvas-kit-react/common';\\n\\nexport default {\\n  title: 'Testing/Inputs/Select',\\n  component: Select,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst options = [\\n  {id: 'E-mail', data: {textValue: 'foo'}},\\n  {id: 'Phone'},\\n  {id: 'Fax (disabled)', disabled: true},\\n  {id: 'Mail'},\\n  {id: 'Mobile Phone'},\\n  {\\n    id: 'The Ontologically Anthropocentric Sensory Immersive Simulation',\\n    disabled: false,\\n  },\\n];\\n\\nconst disabledItems = options.filter(item => item.disabled === true).map(item => item.id);\\n\\nexport const SelectStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\\n  const model = useSelectModel({\\n    items: options,\\n    nonInteractiveIds: disabledItems,\\n  });\\n  return (\\n    <StaticStates theme={props.theme}>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Default', props: {}},\\n          {label: 'Alert', props: {error: 'alert'}},\\n          {label: 'Error', props: {error: 'error'}},\\n        ]}\\n        columnProps={permutateProps(\\n          {\\n            className: [\\n              {label: 'Default', value: ''},\\n              {label: 'Hover', value: 'hover'},\\n              {label: 'Focus', value: 'focus'},\\n              {label: 'Focus Hover', value: 'focus hover'},\\n              {label: 'Active', value: 'active'},\\n              {label: 'Active Hover', value: 'active hover'},\\n            ],\\n            disabled: [\\n              {label: '', value: false},\\n              {label: 'Disabled', value: true},\\n            ],\\n          },\\n          props => {\\n            return !props.disabled || !props.className || props.className === 'hover';\\n          }\\n        )}\\n      >\\n        {props => (\\n          <FormField>\\n            <FormField.Label>Contact</FormField.Label>\\n            <Select model={model}>\\n              <FormField.Input as={Select.Input} {...props} id=\\\"contact-select\\\" />\\n              <Select.Popper>\\n                <Select.Card maxHeight=\\\"200px\\\">\\n                  {model.state.items.length > 0 && (\\n                    <Select.List>\\n                      {item => {\\n                        return (\\n                          <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\\n                            {item.id}\\n                          </Select.Item>\\n                        );\\n                      }}\\n                    </Select.List>\\n                  )}\\n                </Select.Card>\\n              </Select.Popper>\\n            </Select>\\n          </FormField>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  );\\n};\\n\\nexport const SelectOpenMenuStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\\n  const model = useSelectModel({\\n    items: options,\\n    nonInteractiveIds: disabledItems,\\n    initialVisibility: 'visible',\\n  });\\n  return (\\n    <div style={{height: 400}}>\\n      <StaticStates theme={props.theme}>\\n        <ComponentStatesTable\\n          rowProps={[{label: '', props: {}}]}\\n          columnProps={[\\n            {label: 'Default', props: {}},\\n            {label: 'Alert', props: {error: 'alert'}},\\n            {label: 'Error', props: {error: 'error'}},\\n          ]}\\n        >\\n          {props => (\\n            <FormField>\\n              <FormField.Label>Contact</FormField.Label>\\n              <Select model={model}>\\n                <FormField.Input as={Select.Input} {...props} id=\\\"contact-select\\\" />\\n                <Select.Popper>\\n                  <Select.Card maxHeight=\\\"200px\\\">\\n                    {!!model.state.items.length && (\\n                      <Select.List>\\n                        {item => {\\n                          return (\\n                            <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\\n                              {item.id}\\n                            </Select.Item>\\n                          );\\n                        }}\\n                      </Select.List>\\n                    )}\\n                  </Select.Card>\\n                </Select.Popper>\\n              </Select>\\n            </FormField>\\n          )}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    </div>\\n  );\\n};\\n\\nconst themedParameters = {\\n  parameters: {\\n    canvasProviderDecorator: {\\n      theme: customColorTheme,\\n    },\\n  },\\n};\\n\\nexport const SelectThemedStates = {\\n  render: () => <SelectStates theme={{canvas: customColorTheme}} />,\\n};\\n\\nexport const SelectOpenMenuThemedStates = {\\n  parameters: themedParameters,\\n  render: () => <SelectOpenMenuStates theme={{canvas: customColorTheme}} />,\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"SelectStates\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 38\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 97\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 38\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 97\n    }\n  },\n  \"SelectOpenMenuStates\": {\n    \"startLoc\": {\n      \"col\": 36,\n      \"line\": 99\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 143\n    },\n    \"startBody\": {\n      \"col\": 36,\n      \"line\": 99\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 143\n    }\n  },\n  \"SelectThemedStates\": {\n    \"startLoc\": {\n      \"col\": 34,\n      \"line\": 153\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 155\n    },\n    \"startBody\": {\n      \"col\": 34,\n      \"line\": 153\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 155\n    }\n  },\n  \"SelectOpenMenuThemedStates\": {\n    \"startLoc\": {\n      \"col\": 42,\n      \"line\": 157\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 160\n    },\n    \"startBody\": {\n      \"col\": 42,\n      \"line\": 157\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 160\n    }\n  }\n};\n    \nimport * as React from 'react';\n\nimport {\n  ComponentStatesTable,\n  permutateProps,\n  StaticStates,\n} from '@workday/canvas-kit-react/testing';\nimport {customColorTheme} from '../../../../utils/storybook';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\n\nimport {Select, useSelectModel} from '@workday/canvas-kit-react/select';\nimport {PartialEmotionCanvasTheme} from '@workday/canvas-kit-react/common';\n\nexport default {\n  title: 'Testing/Inputs/Select',\n  component: Select,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import * as React from 'react';\\n\\nimport {\\n  ComponentStatesTable,\\n  permutateProps,\\n  StaticStates,\\n} from '@workday/canvas-kit-react/testing';\\nimport {customColorTheme} from '../../../../utils/storybook';\\nimport {FormField} from '@workday/canvas-kit-react/form-field';\\n\\nimport {Select, useSelectModel} from '@workday/canvas-kit-react/select';\\nimport {PartialEmotionCanvasTheme} from '@workday/canvas-kit-react/common';\\n\\nexport default {\\n  title: 'Testing/Inputs/Select',\\n  component: Select,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst options = [\\n  {id: 'E-mail', data: {textValue: 'foo'}},\\n  {id: 'Phone'},\\n  {id: 'Fax (disabled)', disabled: true},\\n  {id: 'Mail'},\\n  {id: 'Mobile Phone'},\\n  {\\n    id: 'The Ontologically Anthropocentric Sensory Immersive Simulation',\\n    disabled: false,\\n  },\\n];\\n\\nconst disabledItems = options.filter(item => item.disabled === true).map(item => item.id);\\n\\nexport const SelectStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\\n  const model = useSelectModel({\\n    items: options,\\n    nonInteractiveIds: disabledItems,\\n  });\\n  return (\\n    <StaticStates theme={props.theme}>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Default', props: {}},\\n          {label: 'Alert', props: {error: 'alert'}},\\n          {label: 'Error', props: {error: 'error'}},\\n        ]}\\n        columnProps={permutateProps(\\n          {\\n            className: [\\n              {label: 'Default', value: ''},\\n              {label: 'Hover', value: 'hover'},\\n              {label: 'Focus', value: 'focus'},\\n              {label: 'Focus Hover', value: 'focus hover'},\\n              {label: 'Active', value: 'active'},\\n              {label: 'Active Hover', value: 'active hover'},\\n            ],\\n            disabled: [\\n              {label: '', value: false},\\n              {label: 'Disabled', value: true},\\n            ],\\n          },\\n          props => {\\n            return !props.disabled || !props.className || props.className === 'hover';\\n          }\\n        )}\\n      >\\n        {props => (\\n          <FormField>\\n            <FormField.Label>Contact</FormField.Label>\\n            <Select model={model}>\\n              <FormField.Input as={Select.Input} {...props} id=\\\"contact-select\\\" />\\n              <Select.Popper>\\n                <Select.Card maxHeight=\\\"200px\\\">\\n                  {model.state.items.length > 0 && (\\n                    <Select.List>\\n                      {item => {\\n                        return (\\n                          <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\\n                            {item.id}\\n                          </Select.Item>\\n                        );\\n                      }}\\n                    </Select.List>\\n                  )}\\n                </Select.Card>\\n              </Select.Popper>\\n            </Select>\\n          </FormField>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  );\\n};\\n\\nexport const SelectOpenMenuStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\\n  const model = useSelectModel({\\n    items: options,\\n    nonInteractiveIds: disabledItems,\\n    initialVisibility: 'visible',\\n  });\\n  return (\\n    <div style={{height: 400}}>\\n      <StaticStates theme={props.theme}>\\n        <ComponentStatesTable\\n          rowProps={[{label: '', props: {}}]}\\n          columnProps={[\\n            {label: 'Default', props: {}},\\n            {label: 'Alert', props: {error: 'alert'}},\\n            {label: 'Error', props: {error: 'error'}},\\n          ]}\\n        >\\n          {props => (\\n            <FormField>\\n              <FormField.Label>Contact</FormField.Label>\\n              <Select model={model}>\\n                <FormField.Input as={Select.Input} {...props} id=\\\"contact-select\\\" />\\n                <Select.Popper>\\n                  <Select.Card maxHeight=\\\"200px\\\">\\n                    {!!model.state.items.length && (\\n                      <Select.List>\\n                        {item => {\\n                          return (\\n                            <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\\n                              {item.id}\\n                            </Select.Item>\\n                          );\\n                        }}\\n                      </Select.List>\\n                    )}\\n                  </Select.Card>\\n                </Select.Popper>\\n              </Select>\\n            </FormField>\\n          )}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    </div>\\n  );\\n};\\n\\nconst themedParameters = {\\n  parameters: {\\n    canvasProviderDecorator: {\\n      theme: customColorTheme,\\n    },\\n  },\\n};\\n\\nexport const SelectThemedStates = {\\n  render: () => <SelectStates theme={{canvas: customColorTheme}} />,\\n};\\n\\nexport const SelectOpenMenuThemedStates = {\\n  parameters: themedParameters,\\n  render: () => <SelectOpenMenuStates theme={{canvas: customColorTheme}} />,\\n};\\n\",\n    \"locationsMap\": {\n      \"select-states\": {\n        \"startLoc\": {\n          \"col\": 28,\n          \"line\": 38\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 97\n        },\n        \"startBody\": {\n          \"col\": 28,\n          \"line\": 38\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 97\n        }\n      },\n      \"select-open-menu-states\": {\n        \"startLoc\": {\n          \"col\": 36,\n          \"line\": 99\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 143\n        },\n        \"startBody\": {\n          \"col\": 36,\n          \"line\": 99\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 143\n        }\n      },\n      \"select-themed-states\": {\n        \"startLoc\": {\n          \"col\": 34,\n          \"line\": 153\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 155\n        },\n        \"startBody\": {\n          \"col\": 34,\n          \"line\": 153\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 155\n        }\n      },\n      \"select-open-menu-themed-states\": {\n        \"startLoc\": {\n          \"col\": 42,\n          \"line\": 157\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 160\n        },\n        \"startBody\": {\n          \"col\": 42,\n          \"line\": 157\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 160\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst options = [\n  {id: 'E-mail', data: {textValue: 'foo'}},\n  {id: 'Phone'},\n  {id: 'Fax (disabled)', disabled: true},\n  {id: 'Mail'},\n  {id: 'Mobile Phone'},\n  {\n    id: 'The Ontologically Anthropocentric Sensory Immersive Simulation',\n    disabled: false,\n  },\n];\n\nconst disabledItems = options.filter(item => item.disabled === true).map(item => item.id);\n\nexport const SelectStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\n  const model = useSelectModel({\n    items: options,\n    nonInteractiveIds: disabledItems,\n  });\n  return (\n    <StaticStates theme={props.theme}>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Default', props: {}},\n          {label: 'Alert', props: {error: 'alert'}},\n          {label: 'Error', props: {error: 'error'}},\n        ]}\n        columnProps={permutateProps(\n          {\n            className: [\n              {label: 'Default', value: ''},\n              {label: 'Hover', value: 'hover'},\n              {label: 'Focus', value: 'focus'},\n              {label: 'Focus Hover', value: 'focus hover'},\n              {label: 'Active', value: 'active'},\n              {label: 'Active Hover', value: 'active hover'},\n            ],\n            disabled: [\n              {label: '', value: false},\n              {label: 'Disabled', value: true},\n            ],\n          },\n          props => {\n            return !props.disabled || !props.className || props.className === 'hover';\n          }\n        )}\n      >\n        {props => (\n          <FormField>\n            <FormField.Label>Contact</FormField.Label>\n            <Select model={model}>\n              <FormField.Input as={Select.Input} {...props} id=\"contact-select\" />\n              <Select.Popper>\n                <Select.Card maxHeight=\"200px\">\n                  {model.state.items.length > 0 && (\n                    <Select.List>\n                      {item => {\n                        return (\n                          <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\n                            {item.id}\n                          </Select.Item>\n                        );\n                      }}\n                    </Select.List>\n                  )}\n                </Select.Card>\n              </Select.Popper>\n            </Select>\n          </FormField>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  );\n};;\n\nexport const SelectOpenMenuStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\n  const model = useSelectModel({\n    items: options,\n    nonInteractiveIds: disabledItems,\n    initialVisibility: 'visible',\n  });\n  return (\n    <div style={{height: 400}}>\n      <StaticStates theme={props.theme}>\n        <ComponentStatesTable\n          rowProps={[{label: '', props: {}}]}\n          columnProps={[\n            {label: 'Default', props: {}},\n            {label: 'Alert', props: {error: 'alert'}},\n            {label: 'Error', props: {error: 'error'}},\n          ]}\n        >\n          {props => (\n            <FormField>\n              <FormField.Label>Contact</FormField.Label>\n              <Select model={model}>\n                <FormField.Input as={Select.Input} {...props} id=\"contact-select\" />\n                <Select.Popper>\n                  <Select.Card maxHeight=\"200px\">\n                    {!!model.state.items.length && (\n                      <Select.List>\n                        {item => {\n                          return (\n                            <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\n                              {item.id}\n                            </Select.Item>\n                          );\n                        }}\n                      </Select.List>\n                    )}\n                  </Select.Card>\n                </Select.Popper>\n              </Select>\n            </FormField>\n          )}\n        </ComponentStatesTable>\n      </StaticStates>\n    </div>\n  );\n};;\n\nconst themedParameters = {\n  parameters: {\n    canvasProviderDecorator: {\n      theme: customColorTheme,\n    },\n  },\n};\n\nexport const SelectThemedStates = {\n  render: () => <SelectStates theme={{canvas: customColorTheme}} />,\n};;\n\nexport const SelectOpenMenuThemedStates = {\n  parameters: themedParameters,\n  render: () => <SelectOpenMenuStates theme={{canvas: customColorTheme}} />,\n};\n",locationsMap:{"select-states":{startLoc:{col:28,line:197},endLoc:{col:1,line:256},startBody:{col:28,line:197},endBody:{col:1,line:256}},"select-open-menu-states":{startLoc:{col:36,line:258},endLoc:{col:1,line:302},startBody:{col:36,line:258},endBody:{col:1,line:302}},"select-themed-states":{startLoc:{col:34,line:312},endLoc:{col:1,line:314},startBody:{col:34,line:312},endBody:{col:1,line:314}},"select-open-menu-themed-states":{startLoc:{col:42,line:316},endLoc:{col:1,line:319},startBody:{col:42,line:316},endBody:{col:1,line:319}}}},storySource:{source:"import * as React from 'react';\n\nimport {\n  ComponentStatesTable,\n  permutateProps,\n  StaticStates,\n} from '@workday/canvas-kit-react/testing';\nimport {customColorTheme} from '../../../../utils/storybook';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\n\nimport {Select, useSelectModel} from '@workday/canvas-kit-react/select';\nimport {PartialEmotionCanvasTheme} from '@workday/canvas-kit-react/common';\n\nexport default {\n  title: 'Testing/Inputs/Select',\n  component: Select,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst options = [\n  {id: 'E-mail', data: {textValue: 'foo'}},\n  {id: 'Phone'},\n  {id: 'Fax (disabled)', disabled: true},\n  {id: 'Mail'},\n  {id: 'Mobile Phone'},\n  {\n    id: 'The Ontologically Anthropocentric Sensory Immersive Simulation',\n    disabled: false,\n  },\n];\n\nconst disabledItems = options.filter(item => item.disabled === true).map(item => item.id);\n\nexport const SelectStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\n  const model = useSelectModel({\n    items: options,\n    nonInteractiveIds: disabledItems,\n  });\n  return (\n    <StaticStates theme={props.theme}>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Default', props: {}},\n          {label: 'Alert', props: {error: 'alert'}},\n          {label: 'Error', props: {error: 'error'}},\n        ]}\n        columnProps={permutateProps(\n          {\n            className: [\n              {label: 'Default', value: ''},\n              {label: 'Hover', value: 'hover'},\n              {label: 'Focus', value: 'focus'},\n              {label: 'Focus Hover', value: 'focus hover'},\n              {label: 'Active', value: 'active'},\n              {label: 'Active Hover', value: 'active hover'},\n            ],\n            disabled: [\n              {label: '', value: false},\n              {label: 'Disabled', value: true},\n            ],\n          },\n          props => {\n            return !props.disabled || !props.className || props.className === 'hover';\n          }\n        )}\n      >\n        {props => (\n          <FormField>\n            <FormField.Label>Contact</FormField.Label>\n            <Select model={model}>\n              <FormField.Input as={Select.Input} {...props} id=\"contact-select\" />\n              <Select.Popper>\n                <Select.Card maxHeight=\"200px\">\n                  {model.state.items.length > 0 && (\n                    <Select.List>\n                      {item => {\n                        return (\n                          <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\n                            {item.id}\n                          </Select.Item>\n                        );\n                      }}\n                    </Select.List>\n                  )}\n                </Select.Card>\n              </Select.Popper>\n            </Select>\n          </FormField>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  );\n};\n\nexport const SelectOpenMenuStates = (props: {theme?: PartialEmotionCanvasTheme}) => {\n  const model = useSelectModel({\n    items: options,\n    nonInteractiveIds: disabledItems,\n    initialVisibility: 'visible',\n  });\n  return (\n    <div style={{height: 400}}>\n      <StaticStates theme={props.theme}>\n        <ComponentStatesTable\n          rowProps={[{label: '', props: {}}]}\n          columnProps={[\n            {label: 'Default', props: {}},\n            {label: 'Alert', props: {error: 'alert'}},\n            {label: 'Error', props: {error: 'error'}},\n          ]}\n        >\n          {props => (\n            <FormField>\n              <FormField.Label>Contact</FormField.Label>\n              <Select model={model}>\n                <FormField.Input as={Select.Input} {...props} id=\"contact-select\" />\n                <Select.Popper>\n                  <Select.Card maxHeight=\"200px\">\n                    {!!model.state.items.length && (\n                      <Select.List>\n                        {item => {\n                          return (\n                            <Select.Item aria-disabled={item.disabled ? item.disabled : undefined}>\n                              {item.id}\n                            </Select.Item>\n                          );\n                        }}\n                      </Select.List>\n                    )}\n                  </Select.Card>\n                </Select.Popper>\n              </Select>\n            </FormField>\n          )}\n        </ComponentStatesTable>\n      </StaticStates>\n    </div>\n  );\n};\n\nconst themedParameters = {\n  parameters: {\n    canvasProviderDecorator: {\n      theme: customColorTheme,\n    },\n  },\n};\n\nexport const SelectThemedStates = {\n  render: () => <SelectStates theme={{canvas: customColorTheme}} />,\n};\n\nexport const SelectOpenMenuThemedStates = {\n  parameters: themedParameters,\n  render: () => <SelectOpenMenuStates theme={{canvas: customColorTheme}} />,\n};\n",locationsMap:{"select-states":{startLoc:{col:28,line:38},endLoc:{col:1,line:97},startBody:{col:28,line:38},endBody:{col:1,line:97}},"select-open-menu-states":{startLoc:{col:36,line:99},endLoc:{col:1,line:143},startBody:{col:36,line:99},endBody:{col:1,line:143}},"select-themed-states":{startLoc:{col:34,line:153},endLoc:{col:1,line:155},startBody:{col:34,line:153},endBody:{col:1,line:155}},"select-open-menu-themed-states":{startLoc:{col:42,line:157},endLoc:{col:1,line:160},startBody:{col:42,line:157},endBody:{col:1,line:160}}}},chromatic:{disable:!1}}};const options=[{id:"E-mail",data:{textValue:"foo"}},{id:"Phone"},{id:"Fax (disabled)",disabled:!0},{id:"Mail"},{id:"Mobile Phone"},{id:"The Ontologically Anthropocentric Sensory Immersive Simulation",disabled:!1}],disabledItems=options.filter((item=>!0===item.disabled)).map((item=>item.id)),SelectStates=props=>{const model=(0,_select.useSelectModel)({items:options,nonInteractiveIds:disabledItems});return React.createElement(_testing.StaticStates,{theme:props.theme},React.createElement(_testing.ComponentStatesTable,{rowProps:[{label:"Default",props:{}},{label:"Alert",props:{error:"alert"}},{label:"Error",props:{error:"error"}}],columnProps:(0,_testing.permutateProps)({className:[{label:"Default",value:""},{label:"Hover",value:"hover"},{label:"Focus",value:"focus"},{label:"Focus Hover",value:"focus hover"},{label:"Active",value:"active"},{label:"Active Hover",value:"active hover"}],disabled:[{label:"",value:!1},{label:"Disabled",value:!0}]},(props=>!props.disabled||!props.className||"hover"===props.className))},(props=>React.createElement(_formField.FormField,null,React.createElement(_formField.FormField.Label,null,"Contact"),React.createElement(_select.Select,{model},React.createElement(_formField.FormField.Input,_extends({as:_select.Select.Input},props,{id:"contact-select"})),React.createElement(_select.Select.Popper,null,React.createElement(_select.Select.Card,{maxHeight:"200px"},model.state.items.length>0&&React.createElement(_select.Select.List,null,(item=>React.createElement(_select.Select.Item,{"aria-disabled":item.disabled?item.disabled:void 0},item.id))))))))))};exports.SelectStates=SelectStates,SelectStates.displayName="SelectStates";const SelectOpenMenuStates=props=>{const model=(0,_select.useSelectModel)({items:options,nonInteractiveIds:disabledItems,initialVisibility:"visible"});return React.createElement("div",{style:{height:400}},React.createElement(_testing.StaticStates,{theme:props.theme},React.createElement(_testing.ComponentStatesTable,{rowProps:[{label:"",props:{}}],columnProps:[{label:"Default",props:{}},{label:"Alert",props:{error:"alert"}},{label:"Error",props:{error:"error"}}]},(props=>React.createElement(_formField.FormField,null,React.createElement(_formField.FormField.Label,null,"Contact"),React.createElement(_select.Select,{model},React.createElement(_formField.FormField.Input,_extends({as:_select.Select.Input},props,{id:"contact-select"})),React.createElement(_select.Select.Popper,null,React.createElement(_select.Select.Card,{maxHeight:"200px"},!!model.state.items.length&&React.createElement(_select.Select.List,null,(item=>React.createElement(_select.Select.Item,{"aria-disabled":item.disabled?item.disabled:void 0},item.id)))))))))))};exports.SelectOpenMenuStates=SelectOpenMenuStates,SelectOpenMenuStates.displayName="SelectOpenMenuStates";const themedParameters={parameters:{canvasProviderDecorator:{theme:_storybook.customColorTheme}}};exports.SelectThemedStates={render:()=>React.createElement(SelectStates,{theme:{canvas:_storybook.customColorTheme}})},exports.SelectOpenMenuThemedStates={parameters:themedParameters,render:()=>React.createElement(SelectOpenMenuStates,{theme:{canvas:_storybook.customColorTheme}})};module.exports.__namedExportsOrder=["SelectThemedStates","SelectStates","SelectOpenMenuThemedStates","SelectOpenMenuStates"]},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText},"./node_modules/react-virtual/dist/react-virtual.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{defaultRangeExtractor:()=>defaultRangeExtractor,useVirtual:()=>useVirtual});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var rafId,props=["bottom","height","left","right","top","width"],observedNodes=new Map,run=function run(){var changedStates=[];observedNodes.forEach((function(state,node){var newRect=node.getBoundingClientRect();(function rectChanged(a,b){return void 0===a&&(a={}),void 0===b&&(b={}),props.some((function(prop){return a[prop]!==b[prop]}))})(newRect,state.rect)&&(state.rect=newRect,changedStates.push(state))})),changedStates.forEach((function(state){state.callbacks.forEach((function(cb){return cb(state.rect)}))})),rafId=window.requestAnimationFrame(run)};var useIsomorphicLayoutEffect="undefined"!=typeof window?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect;function useRect(nodeRef,initialRect){void 0===initialRect&&(initialRect={width:0,height:0});var _React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(nodeRef.current),element=_React$useState[0],setElement=_React$useState[1],_React$useReducer=react__WEBPACK_IMPORTED_MODULE_0__.useReducer(rectReducer,initialRect),rect=_React$useReducer[0],dispatch=_React$useReducer[1],initialRectSet=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);return useIsomorphicLayoutEffect((function(){nodeRef.current!==element&&setElement(nodeRef.current)})),useIsomorphicLayoutEffect((function(){if(element&&!initialRectSet.current){initialRectSet.current=!0;var _rect=element.getBoundingClientRect();dispatch({rect:_rect})}}),[element]),react__WEBPACK_IMPORTED_MODULE_0__.useEffect((function(){if(element){var observer=function observeRect(node,cb){return{observe:function observe(){var wasEmpty=0===observedNodes.size;observedNodes.has(node)?observedNodes.get(node).callbacks.push(cb):observedNodes.set(node,{rect:void 0,hasRectChanged:!1,callbacks:[cb]}),wasEmpty&&run()},unobserve:function unobserve(){var state=observedNodes.get(node);if(state){var index=state.callbacks.indexOf(cb);index>=0&&state.callbacks.splice(index,1),state.callbacks.length||observedNodes.delete(node),observedNodes.size||cancelAnimationFrame(rafId)}}}}(element,(function(rect){dispatch({rect})}));return observer.observe(),function(){observer.unobserve()}}}),[element]),rect}function rectReducer(state,action){var rect=action.rect;return state.height!==rect.height||state.width!==rect.width?rect:state}var defaultEstimateSize=function defaultEstimateSize(){return 50},defaultKeyExtractor=function defaultKeyExtractor(index){return index},defaultMeasureSize=function defaultMeasureSize(el,horizontal){return el[horizontal?"offsetWidth":"offsetHeight"]},defaultRangeExtractor=function defaultRangeExtractor(range){for(var start=Math.max(range.start-range.overscan,0),end=Math.min(range.end+range.overscan,range.size-1),arr=[],i=start;i<=end;i++)arr.push(i);return arr};function useVirtual(_ref){var _measurements,_ref$size=_ref.size,size=void 0===_ref$size?0:_ref$size,_ref$estimateSize=_ref.estimateSize,estimateSize=void 0===_ref$estimateSize?defaultEstimateSize:_ref$estimateSize,_ref$overscan=_ref.overscan,overscan=void 0===_ref$overscan?1:_ref$overscan,_ref$paddingStart=_ref.paddingStart,paddingStart=void 0===_ref$paddingStart?0:_ref$paddingStart,_ref$paddingEnd=_ref.paddingEnd,paddingEnd=void 0===_ref$paddingEnd?0:_ref$paddingEnd,parentRef=_ref.parentRef,horizontal=_ref.horizontal,scrollToFn=_ref.scrollToFn,useObserver=_ref.useObserver,initialRect=_ref.initialRect,onScrollElement=_ref.onScrollElement,scrollOffsetFn=_ref.scrollOffsetFn,_ref$keyExtractor=_ref.keyExtractor,keyExtractor=void 0===_ref$keyExtractor?defaultKeyExtractor:_ref$keyExtractor,_ref$measureSize=_ref.measureSize,measureSize=void 0===_ref$measureSize?defaultMeasureSize:_ref$measureSize,_ref$rangeExtractor=_ref.rangeExtractor,rangeExtractor=void 0===_ref$rangeExtractor?defaultRangeExtractor:_ref$rangeExtractor,sizeKey=horizontal?"width":"height",scrollKey=horizontal?"scrollLeft":"scrollTop",latestRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef({scrollOffset:0,measurements:[]}),_React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),scrollOffset=_React$useState[0],setScrollOffset=_React$useState[1];latestRef.current.scrollOffset=scrollOffset;var outerSize=(useObserver||useRect)(parentRef,initialRect)[sizeKey];latestRef.current.outerSize=outerSize;var defaultScrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){parentRef.current&&(parentRef.current[scrollKey]=offset)}),[parentRef,scrollKey]),resolvedScrollToFn=scrollToFn||defaultScrollToFn;scrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){resolvedScrollToFn(offset,defaultScrollToFn)}),[defaultScrollToFn,resolvedScrollToFn]);var _React$useState2=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),measuredCache=_React$useState2[0],setMeasuredCache=_React$useState2[1],measure=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){return setMeasuredCache({})}),[]),pendingMeasuredCacheIndexesRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef([]),measurements=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){var min=pendingMeasuredCacheIndexesRef.current.length>0?Math.min.apply(Math,pendingMeasuredCacheIndexesRef.current):0;pendingMeasuredCacheIndexesRef.current=[];for(var measurements=latestRef.current.measurements.slice(0,min),i=min;i<size;i++){var key=keyExtractor(i),measuredSize=measuredCache[key],_start=measurements[i-1]?measurements[i-1].end:paddingStart,_size="number"==typeof measuredSize?measuredSize:estimateSize(i),_end=_start+_size;measurements[i]={index:i,start:_start,size:_size,end:_end,key}}return measurements}),[estimateSize,measuredCache,paddingStart,size,keyExtractor]),totalSize=((null==(_measurements=measurements[size-1])?void 0:_measurements.end)||paddingStart)+paddingEnd;latestRef.current.measurements=measurements,latestRef.current.totalSize=totalSize;var element=onScrollElement?onScrollElement.current:parentRef.current,scrollOffsetFnRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(scrollOffsetFn);scrollOffsetFnRef.current=scrollOffsetFn,useIsomorphicLayoutEffect((function(){if(element){var onScroll=function onScroll(event){var offset=scrollOffsetFnRef.current?scrollOffsetFnRef.current(event):element[scrollKey];setScrollOffset(offset)};return onScroll(),element.addEventListener("scroll",onScroll,{capture:!1,passive:!0}),function(){element.removeEventListener("scroll",onScroll)}}setScrollOffset(0)}),[element,scrollKey]);var _calculateRange=function calculateRange(_ref4){var measurements=_ref4.measurements,outerSize=_ref4.outerSize,scrollOffset=_ref4.scrollOffset,size=measurements.length-1,getOffset=function getOffset(index){return measurements[index].start},start=findNearestBinarySearch(0,size,getOffset,scrollOffset),end=start;for(;end<size&&measurements[end].end<scrollOffset+outerSize;)end++;return{start,end}}(latestRef.current),start=_calculateRange.start,end=_calculateRange.end,indexes=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return rangeExtractor({start,end,overscan,size:measurements.length})}),[start,end,overscan,measurements.length,rangeExtractor]),measureSizeRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(measureSize);measureSizeRef.current=measureSize;var virtualItems=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){for(var virtualItems=[],_loop=function _loop(k,len){var i=indexes[k],item=_extends(_extends({},measurements[i]),{},{measureRef:function measureRef(el){if(el){var measuredSize=measureSizeRef.current(el,horizontal);if(measuredSize!==item.size){var _scrollOffset=latestRef.current.scrollOffset;item.start<_scrollOffset&&defaultScrollToFn(_scrollOffset+(measuredSize-item.size)),pendingMeasuredCacheIndexesRef.current.push(i),setMeasuredCache((function(old){var _extends2;return _extends(_extends({},old),{},((_extends2={})[item.key]=measuredSize,_extends2))}))}}}});virtualItems.push(item)},k=0,len=indexes.length;k<len;k++)_loop(k);return virtualItems}),[indexes,defaultScrollToFn,horizontal,measurements]),mountedRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);useIsomorphicLayoutEffect((function(){mountedRef.current&&setMeasuredCache({}),mountedRef.current=!0}),[estimateSize]);var scrollToOffset=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(toOffset,_temp){var _ref2$align=(void 0===_temp?{}:_temp).align,align=void 0===_ref2$align?"start":_ref2$align,_latestRef$current=latestRef.current,scrollOffset=_latestRef$current.scrollOffset,outerSize=_latestRef$current.outerSize;"auto"===align&&(align=toOffset<=scrollOffset?"start":toOffset>=scrollOffset+outerSize?"end":"start"),"start"===align?scrollToFn(toOffset):"end"===align?scrollToFn(toOffset-outerSize):"center"===align&&scrollToFn(toOffset-outerSize/2)}),[scrollToFn]),tryScrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(index,_temp2){var _ref3=void 0===_temp2?{}:_temp2,_ref3$align=_ref3.align,align=void 0===_ref3$align?"auto":_ref3$align,rest=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_ref3,["align"]),_latestRef$current2=latestRef.current,measurements=_latestRef$current2.measurements,scrollOffset=_latestRef$current2.scrollOffset,outerSize=_latestRef$current2.outerSize,measurement=measurements[Math.max(0,Math.min(index,size-1))];if(measurement){if("auto"===align)if(measurement.end>=scrollOffset+outerSize)align="end";else{if(!(measurement.start<=scrollOffset))return;align="start"}var toOffset="center"===align?measurement.start+measurement.size/2:"end"===align?measurement.end:measurement.start;scrollToOffset(toOffset,_extends({align},rest))}}),[scrollToOffset,size]),scrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];tryScrollToIndex.apply(void 0,args),requestAnimationFrame((function(){tryScrollToIndex.apply(void 0,args)}))}),[tryScrollToIndex]);return{virtualItems,totalSize,scrollToOffset,scrollToIndex,measure}}var findNearestBinarySearch=function findNearestBinarySearch(low,high,getCurrentValue,value){for(;low<=high;){var middle=(low+high)/2|0,currentValue=getCurrentValue(middle);if(currentValue<value)low=middle+1;else{if(!(currentValue>value))return middle;high=middle-1}}return low>0?low-1:0}}}]);