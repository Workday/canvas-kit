"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8379],{"./modules/react/common/stories/mdx/CompoundComponentUtilities.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_CreateModelHook__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/react/common/stories/mdx/examples/CreateModelHook.tsx"),_examples_CreateContainer__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./modules/react/common/stories/mdx/examples/CreateContainer.tsx"),_examples_CreateSubcomponent__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./modules/react/common/stories/mdx/examples/CreateSubcomponent.tsx"),_examples_CreateElemPropsHook__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./modules/react/common/stories/mdx/examples/CreateElemPropsHook.tsx"),_examples_CreateComponent__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/react/common/stories/mdx/examples/CreateComponent.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",a:"a",h2:"h2",pre:"pre",code:"code",h3:"h3",em:"em",ul:"ul",li:"li"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Hooks and Utilities/Compound Components"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"compound-component-utilities",children:"Compound Component Utilities"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The following utilities are used to create and compose\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/guides-compound-components--docs",children:"compound components"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"installation",children:"Installation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-sh",children:"yarn add @workday/canvas-kit-react\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"createcomponent",children:"createComponent"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createComponent"})," is a factory function that creates components to be exported. It enforces React\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ref"})," forwarding, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"as"})," prop, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"displayName"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"subComponents"}),", and handles proper typing without much\nboiler plate. The return type is ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Component<element, Props>"})," which looks like\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Component<'div', Props>"})," which is a clean interface that tells you the default element that is\nused."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createComponent"})," is great to use if you want to create quick compound components or you need to set\nup components with ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ref"})," forwarding."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_CreateComponent__WEBPACK_IMPORTED_MODULE_5__.sz}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"createmodelhook",children:"createModelHook"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["When building compound components that might have some internal state or events, you typically want\na model. A model allows a component to share information. This is where ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createModelHook"})," comes in\nhandy."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage-1",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createModelHook"})," is a factory function that takes in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"defaultConfig"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"requiredConfig"})," and\nreturns a function which is your model hook."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Let's make a simple disclosure component as an example. This is how we'd use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createModelHook"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createModelHook} from '@workday/canvas-kit-react/common';\nexport const useDisclosureModel = createModelHook({\n  // This becomes the default values on the model\n  defaultConfig: {\n    // some default config\n  },\n})(config => {\n  const state = {\n    // some state\n  };\n  // Sets events that can be used across subcomponents\n  const events = {\n    // some events\n  };\n\n  return {state, events};\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_CreateModelHook__WEBPACK_IMPORTED_MODULE_6__.H}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Typescript will infer all config from the returned ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"state"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"events"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"defaultConfig"})," and the\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"requiredConfig"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"api",children:"API"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["When ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useDisclosureModel"}),"is created, five properties are attached to it for composability:\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"defaultConfig"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"requiredConfig"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"TConfig"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"getElemProps"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Context"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"defaultconfig",children:"defaultConfig"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["All config that has default values. Optional values also go here, but are represented as ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"undefined"}),"\nas part of the union type ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"(undefined as undefined | string)"}),". Using this can be useful when\ncreating other models that share similar config."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createModelHook} from '@workday/canvas-kit-react/common';\nexport const useExpandableModel = createModelHook({\n  defaultConfig: {\n    // extend the default config from the `useDisclosureModel`\n    ...useDisclosureModel.defaultConfig,\n  },\n})(config => {\n  const disclosure = useDisclosureModel(config);\n  const state = {\n    ...disclosure.state,\n  };\n  const events = {\n    ...disclosure.events,\n  };\n  return {state, events};\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"requiredconfig",children:"requiredConfig"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"All config that is required by the model. Most config should go into default config with thoughtful\ndefaults."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"contextoverride",children:"contextOverride"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The React context used by components to share a model between a container component and\nsubcomponents. It is used internally by ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createSubcomponents"})," and should not\nneed to be referenced directly."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Each subcomponent is tied to a model hook's context. For example, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useModalModel"})," extends\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"usePopupModel"}),", but ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Modal"})," components point directly to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Popup"})," components. The\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"contextOverride: usePopupModel.Context"})," forces ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useModalModel"}),"'s internal context to point to the\nsame context reference as the one used in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"usePopupModel"}),". This allows the model returned by\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useModalModel"})," to be compatible with both ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Modal"})," subcomponents and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Popup"})," subcomponents. If you\ndo not override context, you must create a new container and subcomponent for every component using\nthe newly created model hook."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createModelHook} from '@workday/canvas-kit-react/common';\nexport const useModalModel = createModelHook({\n  defaultConfig: usePopupModel.defaultConfig,\n  requiredConfig: usePopupModel.requiredConfig,\n  // share context from the usePopupModel instead of the default one created by createModelHook\n  contextOverride: usePopupModel.Context,\n})(config => {\n  const model = usePopupModel(config);\n\n  useInitialFocus(model);\n  useReturnFocus(model);\n  useCloseOnOverlayClick(model);\n  useCloseOnEscape(model);\n  useFocusTrap(model);\n  useAssistiveHideSiblings(model);\n  useDisableBodyScroll(model);\n\n  return model;\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"tconfig",children:"TConfig"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["TConfig gives you the typings that are defined in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"defaultConfig"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"requiredConfig"})," instead of\nhaving to redfine those types. This is useful when building a model that share similar config and\nyou want to merge them while getting the correct typings."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createModelHook} from '@workday/canvas-kit-react/common';\nexport const useActionBarModel = createModelHook({\n  defaultConfig: {\n    // We define the config and use the typings that come from useMenuModel for when an action bar renders a menu\n    menuConfig: {} as typeof useMenuModel.TConfig,\n  },\n  requiredConfig: useOverflowListModel.requiredConfig,\n})(config => {\n  // define your internal state and events\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"getelemprops",children:"getElemProps"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["This function will separate all ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemProps"})," or default attributes from an element from the model\nconfig props. If a prop is both a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"config"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"and"})," an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemProp"}),", you can manually apply the prop\nagain. ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemProps"})," is called internally automatically by ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"}),". If you use\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"}),", you shouldn't need to use this function."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["By default ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createModelHook"})," does this for you and spreads the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemProps"})," onto the component."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"createcontainer-and-createsubcomponent",children:"createContainer and createSubcomponent"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createSubcomponent"})," functions take a default React.ElementType which can be\nan element string like div or button or a component like Button. It also takes a config object\ncontaining the following:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"displayName"}),": This will be the name of the component when shown by the React Dev tools. By\nconvention, we make that name be the same as typed in a render function. For example\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Disclosure.Target"})," vs ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"DisclosureTarget"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"modelHook"}),": This is the model hook used by the compound component (",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useDisclosureModel"})," in our\ncase). This model hook is used to determine proper prop types and seamlessly handle the option\nmodel prop. For ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"}),", if a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"model"})," is not passed, a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"model"})," is created and added to\nReact Context. For ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createSubcomponent"}),", if a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"model"})," is not passed, the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"model"})," comes from React\nContext."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemPropsHook"}),": This is the elemPropsHook that takes a model and elemProps and returns elemProps."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"subComponents"}),": For container components. A list of sub components to add to the returned\ncomponent. For example, a sub component called ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"DisclosureTarget"})," will be added to the export of\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Disclosure"})," so that the user can import only ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Disclosure"})," and use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Disclosure.Target"}),".\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"subComponents"})," is needed for Typescript because static properties cannot be added to predefined\ninterfaces. ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Disclosure.Target"})," = ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"DisclosureTarget"})," will caused a type error. This property\nallows the createComponent factory function to infer the final interface of the returned\ncomponent."]}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Finally, a generic function is returned that takes the component configuration. The first argument\nis ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemProps"})," with ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ref"})," and hook props already merged in with props handed to the component. The\nmodel config props will already be filtered out. We'll worry about ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemPropsHook"})," later. The second\nis an Element property. Element is the value passed to the Component's as prop. It will default to\nthe provided element. The last parameter is an optional model reference. Ideally, the model is used\nin ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemPropsHook"})," and therefore not normally needed inside the render function."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"createcontainer",children:"createContainer"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["When building a component that has a model, you typically start with a container component.\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"})," is a utility function that hooks up all the pieces for you."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"usage-2",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["It will wrap your component in a context provider so that ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"subComponents"})," have access to the\nmodel."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"It attaches your model hook to your component."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["It runs any ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemPropsHook"})," hooks defined."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["You can attach ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"subComponents"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["It will also extract the element attributes and define the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ref"})," type based on the element you\ngive it."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createContainer} from '@workday/canvas-kit-react/common';\ninterface DisclosureProps {}\n\n//... useDisclosureModel\n\nexport const Disclosure = createContainer('div')({\n  displayName: 'Disclosure',\n  modelHook: useDisclosureModel,\n})<DisclosureProps>(({children, ...elemProps}, Element, model) => {\n  return (\n    // spread div attributes including ref\n    <Element {...elemProps}>{children}</Element>\n  );\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_CreateContainer__WEBPACK_IMPORTED_MODULE_7__.s}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"createsubcomponent",children:"createSubcomponent"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Once you've built a container component, adding a subcomponent is easy. ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createSubcomponent"})," is\nsimilar to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"})," in that it hooks up many of the pieces for you. The main difference is\nit uses the context created by ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"}),". This allows access to the model created at the\nroot level so that you can use any state or events at a child component level."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"usage-3",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["It subscribes to the parent context allowing you access to the model hook ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"state"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"events"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"It attaches your model hook to your component."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["It runs any ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemPropsHook"})," hooks defined."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["You can attach ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"subComponents"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["It will also extract the element attributes and define the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ref"})," type based on the element you\ngive it."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createSubcomponent} from '@workday/canvas-kit-react/common';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\nexport interface DisclosureTargetProps {\n  /**\n   * The children of the `Expandable.Target`\n   */\n  children?: React.ReactNode;\n}\n\n//... useDisclosureModel\n\nexport const DisclosureTarget = createSubcomponent('button')({\n  modelHook: useDisclosureModel,\n})<DisclosureTargetProps>(({children, ...elemProps}, Element, model) => {\n  return (\n    <PrimaryButton\n      as={Element}\n      onClick={() =>\n        model.state.visibility === 'hidden' ? model.events.show() : model.events.hide()\n      }\n      {...elemProps}\n    >\n      {children}\n    </PrimaryButton>\n  );\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_CreateSubcomponent__WEBPACK_IMPORTED_MODULE_8__.O4}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"createelempropshook",children:"createElemPropsHook"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"This is a utility function that is helpful to use when you have elem attributes that need to be\ndyanmic based on the model hook state. This function will also handle merging of element props."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Once you create your element props hook you then attach your hook to either your ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createContainer"}),"\ncomponent or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createSubcomponent"})," by adding it to the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"elemPropsHook"})," property."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage-4",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createSubcomponent, createElemPropsHook} from '@workday/canvas-kit-react/common';\nimport {Box} from '@workday/canvas-kit-react/layout';\n\nexport interface DisclosureContentProps extends BoxProps {\n  /**\n   * The children of the `Expandable.Content` whose visibility is controlled by the associated\n   * `Expandable.Target`\n   */\n  children?: React.ReactNode;\n}\n\n//...useDisclosureModel defined\n\n// Use createElemPropsHook to add style and id attribute based on the disclosure model hook state\n// These attributes will be merged with the rest of elemProps that come from DisclosureContentProps\nconst useDisclosureContent = createElemPropsHook(useDisclosureModel)(({state}) => {\n  return {\n    style: state.visibility !== 'hidden' ? {} : {display: 'none'},\n    id: state.id,\n  };\n});\n\nexport const DisclosureContent = createSubcomponent('div')({\n  modelHook: useDisclosureModel,\n  // attached our elemPropsHook to the component\n  elemPropsHook: useDisclosureContent,\n})<DisclosureContentProps>(({children, ...elementProps}, Element) => {\n  return (\n    <Box as={Element} {...elementProps}>\n      {children}\n    </Box>\n  );\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_CreateElemPropsHook__WEBPACK_IMPORTED_MODULE_9__.$})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/react/common/stories/mdx/examples/CreateComponent.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.sz=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const CardHeading=(0,_common.createComponent)("h2")({displayName:"CardHeading",Component:({children,...elemProps},ref,Element)=>_react.default.createElement(_text.Heading,_extends({size:"medium",as:Element,ref},elemProps),children)});const Card=(0,_common.createComponent)("div")({displayName:"Card",subComponents:{Heading:CardHeading},Component:({children,...elemProps},ref,Element)=>_react.default.createElement(_layout.Box,_extends({as:Element},elemProps,{ref}),children)});const CreateComponent=()=>_react.default.createElement(Card,{depth:2,border:`1px solid ${_tokens.colors.soap400}`,padding:"s",as:"section"},_react.default.createElement(Card.Heading,null,"Card Heading"));exports.sz=CreateComponent,CreateComponent.displayName="CreateComponent",CardHeading.__RAW__="import React from 'react';\nimport {createComponent, ExtractProps} from '@workday/canvas-kit-react/common';\nimport {Box, BoxProps} from '@workday/canvas-kit-react/layout';\nimport {Heading} from '@workday/canvas-kit-react/text';\nimport {colors} from '@workday/canvas-kit-react/tokens';\n\n// Extend Heading Props and omitting size since we've added a default\ninterface CardHeadingProps extends Omit<ExtractProps<typeof Heading>, 'size'> {}\nexport const CardHeading = createComponent('h2')({\n  displayName: 'CardHeading',\n  Component: ({children, ...elemProps}: CardHeadingProps, ref, Element) => {\n    return (\n      <Heading size=\"medium\" as={Element} ref={ref} {...elemProps}>\n        {children}\n      </Heading>\n    );\n  },\n});\n\n// Extend Box Props for customization\ninterface CardProps extends BoxProps {}\nexport const Card = createComponent('div')({\n  displayName: 'Card',\n  subComponents: {\n    Heading: CardHeading,\n  },\n  Component: ({children, ...elemProps}: CardProps, ref, Element) => {\n    return (\n      <Box as={Element} {...elemProps} ref={ref}>\n        {children}\n      </Box>\n    );\n  },\n});\n\nexport const CreateComponent = () => {\n  return (\n    <Card depth={2} border={`1px solid ${colors.soap400}`} padding=\"s\" as=\"section\">\n      <Card.Heading>Card Heading</Card.Heading>\n    </Card>\n  );\n};\n",Card.__RAW__="import React from 'react';\nimport {createComponent, ExtractProps} from '@workday/canvas-kit-react/common';\nimport {Box, BoxProps} from '@workday/canvas-kit-react/layout';\nimport {Heading} from '@workday/canvas-kit-react/text';\nimport {colors} from '@workday/canvas-kit-react/tokens';\n\n// Extend Heading Props and omitting size since we've added a default\ninterface CardHeadingProps extends Omit<ExtractProps<typeof Heading>, 'size'> {}\nexport const CardHeading = createComponent('h2')({\n  displayName: 'CardHeading',\n  Component: ({children, ...elemProps}: CardHeadingProps, ref, Element) => {\n    return (\n      <Heading size=\"medium\" as={Element} ref={ref} {...elemProps}>\n        {children}\n      </Heading>\n    );\n  },\n});\n\n// Extend Box Props for customization\ninterface CardProps extends BoxProps {}\nexport const Card = createComponent('div')({\n  displayName: 'Card',\n  subComponents: {\n    Heading: CardHeading,\n  },\n  Component: ({children, ...elemProps}: CardProps, ref, Element) => {\n    return (\n      <Box as={Element} {...elemProps} ref={ref}>\n        {children}\n      </Box>\n    );\n  },\n});\n\nexport const CreateComponent = () => {\n  return (\n    <Card depth={2} border={`1px solid ${colors.soap400}`} padding=\"s\" as=\"section\">\n      <Card.Heading>Card Heading</Card.Heading>\n    </Card>\n  );\n};\n",CreateComponent.__RAW__="import React from 'react';\nimport {createComponent, ExtractProps} from '@workday/canvas-kit-react/common';\nimport {Box, BoxProps} from '@workday/canvas-kit-react/layout';\nimport {Heading} from '@workday/canvas-kit-react/text';\nimport {colors} from '@workday/canvas-kit-react/tokens';\n\n// Extend Heading Props and omitting size since we've added a default\ninterface CardHeadingProps extends Omit<ExtractProps<typeof Heading>, 'size'> {}\nexport const CardHeading = createComponent('h2')({\n  displayName: 'CardHeading',\n  Component: ({children, ...elemProps}: CardHeadingProps, ref, Element) => {\n    return (\n      <Heading size=\"medium\" as={Element} ref={ref} {...elemProps}>\n        {children}\n      </Heading>\n    );\n  },\n});\n\n// Extend Box Props for customization\ninterface CardProps extends BoxProps {}\nexport const Card = createComponent('div')({\n  displayName: 'Card',\n  subComponents: {\n    Heading: CardHeading,\n  },\n  Component: ({children, ...elemProps}: CardProps, ref, Element) => {\n    return (\n      <Box as={Element} {...elemProps} ref={ref}>\n        {children}\n      </Box>\n    );\n  },\n});\n\nexport const CreateComponent = () => {\n  return (\n    <Card depth={2} border={`1px solid ${colors.soap400}`} padding=\"s\" as=\"section\">\n      <Card.Heading>Card Heading</Card.Heading>\n    </Card>\n  );\n};\n"},"./modules/react/common/stories/mdx/examples/CreateContainer.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.s=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const useDisclosureModel=(0,_common.createModelHook)({defaultConfig:{id:"",initialVisibility:"hidden"}})((config=>{const id=(0,_common.useUniqueId)(config.id),[visibility,setVisibility]=_react.default.useState(config.initialVisibility||"hidden");return{state:{id,visibility},events:{show(event){setVisibility("visible")},hide(event){setVisibility("hidden")}}}})),Disclosure=(0,_common.createContainer)("button")({displayName:"Disclosure",modelHook:useDisclosureModel,subComponents:{}})((({children,...elemProps},Element,model)=>_react.default.createElement(Element,_extends({onClick:()=>"visible"===model.state.visibility?model.events.hide():model.events.show()},elemProps),"visible"===model.state.visibility?"close":"open"))),CreateContainer=()=>_react.default.createElement(Disclosure,null);exports.s=CreateContainer,CreateContainer.displayName="CreateContainer",CreateContainer.__RAW__="import React from 'react';\nimport {createContainer, createModelHook, useUniqueId} from '@workday/canvas-kit-react/common';\n\nexport type Visibility = 'hidden' | 'visible';\n\n// First we define a model using out createModelHook\nconst useDisclosureModel = createModelHook({\n  // This becomes the default values on the model\n  defaultConfig: {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id: '',\n    /**\n     * The initial visibility of the disclosed content\n     * @default 'hidden'\n     */\n    initialVisibility: 'hidden' as Visibility,\n  },\n})(config => {\n  const id = useUniqueId(config.id);\n  const [visibility, setVisibility] = React.useState(config.initialVisibility || 'hidden');\n  //  Set the default internal state for your model.\n  const state = {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id,\n    /**\n     * Visibility state of the disclosed content. Models are allowed to extend the states to fit\n     * their needs, so if you need to consistently determine \"not hidden\", use `visibility !==\n     * 'hidden'` rather than `visibility === 'visible'`\n     */\n    visibility,\n  };\n  // Sets events that can be used across subcomponents\n  const events = {\n    /**\n     * Start showing the disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    show(event?: Event | React.SyntheticEvent) {\n      setVisibility('visible');\n    },\n    /**\n     * Start hiding this disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    hide(event?: Event | React.SyntheticEvent) {\n      setVisibility('hidden');\n    },\n  };\n\n  return {state, events};\n});\n\n// Disclosure Container Component\ninterface DisclosureProps extends React.HtmlHTMLAttributes<HTMLButtonElement> {}\n\nconst Disclosure = createContainer('button')({\n  displayName: 'Disclosure',\n  modelHook: useDisclosureModel,\n  subComponents: {},\n})<DisclosureProps>(({children, ...elemProps}, Element, model) => {\n  return (\n    <Element\n      onClick={() =>\n        model.state.visibility === 'visible' ? model.events.hide() : model.events.show()\n      }\n      {...elemProps}\n    >\n      {model.state.visibility === 'visible' ? 'close' : 'open'}\n    </Element>\n  );\n});\n\nexport const CreateContainer = () => {\n  return <Disclosure />;\n};\n"},"./modules/react/common/stories/mdx/examples/CreateElemPropsHook.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.$=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const useDisclosureModel=(0,_common.createModelHook)({defaultConfig:{id:"",initialVisibility:"hidden"}})((config=>{const id=(0,_common.useUniqueId)(config.id),[visibility,setVisibility]=_react.default.useState(config.initialVisibility||"hidden");return{state:{id,visibility},events:{show(event){setVisibility("visible")},hide(event){setVisibility("hidden")}}}})),useDisclosureTarget=(0,_common.createElemPropsHook)(useDisclosureModel)((({state,events})=>({onClick:event=>{"hidden"!==state.visibility?events.hide(event):events.show(event)}}))),DisclosureTarget=(0,_common.createSubcomponent)("button")({modelHook:useDisclosureModel,elemPropsHook:useDisclosureTarget})((({children,...elemProps},Element,model)=>_react.default.createElement(_button.PrimaryButton,_extends({as:Element},elemProps),children))),useDisclosureContent=(0,_common.createElemPropsHook)(useDisclosureModel)((({state})=>({style:"hidden"!==state.visibility?{}:{display:"none"},id:state.id}))),DisclosureContent=(0,_common.createSubcomponent)("div")({modelHook:useDisclosureModel,elemPropsHook:useDisclosureContent})((({children,...elementProps},Element)=>_react.default.createElement(_layout.Box,_extends({as:Element},elementProps),children))),Disclosure=(0,_common.createContainer)()({displayName:"Disclosure",modelHook:useDisclosureModel,subComponents:{Target:DisclosureTarget,Content:DisclosureContent}})((({children},Element,model)=>_react.default.createElement(_react.default.Fragment,null,children))),CreateElemPropsHook=()=>_react.default.createElement(Disclosure,null,_react.default.createElement(Disclosure.Target,null,"Open"),_react.default.createElement(Disclosure.Content,null,"Content"));exports.$=CreateElemPropsHook,CreateElemPropsHook.displayName="CreateElemPropsHook",CreateElemPropsHook.__RAW__="import React from 'react';\nimport {\n  createContainer,\n  createModelHook,\n  createSubcomponent,\n  createElemPropsHook,\n  useUniqueId,\n} from '@workday/canvas-kit-react/common';\nimport {PrimaryButton, PrimaryButtonProps} from '@workday/canvas-kit-react/button';\nimport {Box, BoxProps} from '@workday/canvas-kit-react/layout';\n\ntype Visibility = 'hidden' | 'visible';\n\n// First we define a model using out createModelHook\nconst useDisclosureModel = createModelHook({\n  // This becomes the default values on the model\n  defaultConfig: {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id: '',\n    /**\n     * The initial visibility of the disclosed content\n     * @default 'hidden'\n     */\n    initialVisibility: 'hidden' as Visibility,\n  },\n})(config => {\n  const id = useUniqueId(config.id);\n  const [visibility, setVisibility] = React.useState(config.initialVisibility || 'hidden');\n  //  Set the default internal state for your model.\n  const state = {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id,\n    /**\n     * Visibility state of the disclosed content. Models are allowed to extend the states to fit\n     * their needs, so if you need to consistently determine \"not hidden\", use `visibility !==\n     * 'hidden'` rather than `visibility === 'visible'`\n     */\n    visibility,\n  };\n  // Sets events that can be used across subcomponents\n  const events = {\n    /**\n     * Start showing the disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    show(event?: Event | React.SyntheticEvent) {\n      setVisibility('visible');\n    },\n    /**\n     * Start hiding this disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    hide(event?: Event | React.SyntheticEvent) {\n      setVisibility('hidden');\n    },\n  };\n\n  return {state, events};\n});\n\n// Disclose Target\ninterface DisclosureTargetProps extends PrimaryButtonProps {}\n\n// Use createElemPropsHook to define an onClick prop  using the model state and events\n// This will be merged into the rest of the elemProps of the component\nconst useDisclosureTarget = createElemPropsHook(useDisclosureModel)(({state, events}) => {\n  return {\n    onClick: (event: React.MouseEvent) => {\n      if (state.visibility !== 'hidden') {\n        events.hide(event);\n      } else {\n        events.show(event);\n      }\n    },\n  };\n});\n\nconst DisclosureTarget = createSubcomponent('button')({\n  modelHook: useDisclosureModel,\n  elemPropsHook: useDisclosureTarget,\n})<DisclosureTargetProps>(({children, ...elemProps}, Element, model) => {\n  return (\n    <PrimaryButton as={Element} {...elemProps}>\n      {children}\n    </PrimaryButton>\n  );\n});\n\n// Disclosure Content\ninterface DisclosureContentProps extends BoxProps {}\nconst useDisclosureContent = createElemPropsHook(useDisclosureModel)(({state}) => {\n  return {\n    style: state.visibility !== 'hidden' ? {} : {display: 'none'},\n    id: state.id,\n  };\n});\n\nconst DisclosureContent = createSubcomponent('div')({\n  modelHook: useDisclosureModel,\n  // attached our elemPropsHook to the component\n  elemPropsHook: useDisclosureContent,\n})<DisclosureContentProps>(({children, ...elementProps}, Element) => {\n  return (\n    <Box as={Element} {...elementProps}>\n      {children}\n    </Box>\n  );\n});\n\n// Disclosure Container Component\ninterface DisclosureProps {}\n\nconst Disclosure = createContainer()({\n  displayName: 'Disclosure',\n  modelHook: useDisclosureModel,\n  subComponents: {\n    Target: DisclosureTarget,\n    Content: DisclosureContent,\n  },\n})<DisclosureProps>(({children}, Element, model) => {\n  return <>{children}</>;\n});\n\nexport const CreateElemPropsHook = () => {\n  return (\n    <Disclosure>\n      <Disclosure.Target>Open</Disclosure.Target>\n      <Disclosure.Content>Content</Disclosure.Content>\n    </Disclosure>\n  );\n};\n"},"./modules/react/common/stories/mdx/examples/CreateModelHook.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.H=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const useDisclosureModel=(0,_common.createModelHook)({defaultConfig:{id:"",initialVisibility:"hidden"}})((config=>{const id=(0,_common.useUniqueId)(config.id),[visibility,setVisibility]=_react.default.useState(config.initialVisibility);return{state:{id,visibility},events:{show(event){setVisibility("visible")},hide(event){setVisibility("hidden")}}}})),Disclosure=(0,_common.createContainer)()({displayName:"Disclosure",modelHook:useDisclosureModel})((({children,...elemProps},Element,model)=>_react.default.createElement("button",_extends({onClick:()=>"visible"===model.state.visibility?model.events.hide():model.events.show()},elemProps),"visible"===model.state.visibility?"close":"open"))),CreateModelHook=()=>_react.default.createElement(Disclosure,null);exports.H=CreateModelHook,CreateModelHook.displayName="CreateModelHook",CreateModelHook.__RAW__="import React from 'react';\nimport {createContainer, createModelHook, useUniqueId} from '@workday/canvas-kit-react/common';\n\nexport type Visibility = 'hidden' | 'visible';\n\n// First we define a model using out createModelHook\nconst useDisclosureModel = createModelHook({\n  // This becomes the default values on the model\n  defaultConfig: {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id: '',\n    /**\n     * The initial visibility of the disclosed content. The `as Visibility` overrides the inferred type.\n     */\n    initialVisibility: 'hidden' as Visibility,\n  },\n})(config => {\n  const id = useUniqueId(config.id);\n  const [visibility, setVisibility] = React.useState(config.initialVisibility);\n  //  Set the default internal state for your model.\n  const state = {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id,\n    /**\n     * Visibility state of the disclosed content. Models are allowed to extend the states to fit\n     * their needs, so if you need to consistently determine \"not hidden\", use `visibility !==\n     * 'hidden'` rather than `visibility === 'visible'`\n     */\n    visibility,\n  };\n  // Sets events that can be used across subcomponents\n  const events = {\n    /**\n     * Start showing the disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    show(event?: Event | React.SyntheticEvent) {\n      setVisibility('visible');\n    },\n    /**\n     * Start hiding this disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    hide(event?: Event | React.SyntheticEvent) {\n      setVisibility('hidden');\n    },\n  };\n\n  return {state, events};\n});\n\n// Disclosure Container Component\ninterface DisclosureProps {}\n\nconst Disclosure = createContainer()({\n  displayName: 'Disclosure',\n  modelHook: useDisclosureModel,\n})<DisclosureProps>(({children, ...elemProps}, Element, model) => {\n  return (\n    <button\n      onClick={() =>\n        model.state.visibility === 'visible' ? model.events.hide() : model.events.show()\n      }\n      {...elemProps}\n    >\n      {model.state.visibility === 'visible' ? 'close' : 'open'}\n    </button>\n  );\n});\n\nexport const CreateModelHook = () => {\n  return <Disclosure />;\n};\n"},"./modules/react/common/stories/mdx/examples/CreateSubcomponent.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.O4=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const useDisclosureModel=(0,_common.createModelHook)({defaultConfig:{id:"",initialVisibility:"hidden"}})((config=>{const id=(0,_common.useUniqueId)(config.id),[visibility,setVisibility]=_react.default.useState(config.initialVisibility||"hidden");return{state:{id,visibility},events:{show(event){setVisibility("visible")},hide(event){setVisibility("hidden")}}}})),DisclosureTarget=(0,_common.createSubcomponent)("button")({modelHook:useDisclosureModel})((({children,...elemProps},Element,model)=>_react.default.createElement(_button.PrimaryButton,_extends({onClick:event=>{"hidden"!==model.state.visibility?model.events.hide(event):model.events.show(event)},as:Element},elemProps),"visible"===model.state.visibility?"Close":"Open")));const Disclosure=(0,_common.createContainer)()({displayName:"Disclosure",modelHook:useDisclosureModel,subComponents:{Target:DisclosureTarget}})((({children},Element,model)=>_react.default.createElement(_react.default.Fragment,null,children))),CreateSubcomponent=()=>_react.default.createElement(Disclosure,null,_react.default.createElement(Disclosure.Target,null));exports.O4=CreateSubcomponent,CreateSubcomponent.displayName="CreateSubcomponent",DisclosureTarget.__RAW__="import React from 'react';\nimport {\n  createContainer,\n  createModelHook,\n  createSubcomponent,\n  useUniqueId,\n} from '@workday/canvas-kit-react/common';\nimport {PrimaryButton, PrimaryButtonProps} from '@workday/canvas-kit-react/button';\n\nexport type Visibility = 'hidden' | 'visible';\n\n// First we define a model using out createModelHook\nconst useDisclosureModel = createModelHook({\n  // This becomes the default values on the model\n  defaultConfig: {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id: '',\n    /**\n     * The initial visibility of the disclosed content\n     * @default 'hidden'\n     */\n    initialVisibility: 'hidden' as Visibility,\n  },\n})(config => {\n  const id = useUniqueId(config.id);\n  const [visibility, setVisibility] = React.useState(config.initialVisibility || 'hidden');\n  //  Set the default internal state for your model.\n  const state = {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id,\n    /**\n     * Visibility state of the disclosed content. Models are allowed to extend the states to fit\n     * their needs, so if you need to consistently determine \"not hidden\", use `visibility !==\n     * 'hidden'` rather than `visibility === 'visible'`\n     */\n    visibility,\n  };\n  // Sets events that can be used across subcomponents\n  const events = {\n    /**\n     * Start showing the disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    show(event?: Event | React.SyntheticEvent) {\n      setVisibility('visible');\n    },\n    /**\n     * Start hiding this disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    hide(event?: Event | React.SyntheticEvent) {\n      setVisibility('hidden');\n    },\n  };\n\n  return {state, events};\n});\n\n// Disclose Target\nexport interface DisclosureTargetProps extends PrimaryButtonProps {}\n\nexport const DisclosureTarget = createSubcomponent('button')({\n  modelHook: useDisclosureModel,\n})<DisclosureTargetProps>(({children, ...elemProps}, Element, model) => {\n  return (\n    <PrimaryButton\n      onClick={(event: React.MouseEvent) => {\n        if (model.state.visibility !== 'hidden') {\n          model.events.hide(event);\n        } else {\n          model.events.show(event);\n        }\n      }}\n      as={Element}\n      {...elemProps}\n    >\n      {model.state.visibility === 'visible' ? 'Close' : 'Open'}\n    </PrimaryButton>\n  );\n});\n\n// Disclosure Container Component\ninterface DisclosureProps {}\n\nconst Disclosure = createContainer()({\n  displayName: 'Disclosure',\n  modelHook: useDisclosureModel,\n  subComponents: {\n    Target: DisclosureTarget,\n  },\n})<DisclosureProps>(({children}, Element, model) => {\n  return <>{children}</>;\n});\n\nexport const CreateSubcomponent = () => {\n  return (\n    <Disclosure>\n      <Disclosure.Target />\n    </Disclosure>\n  );\n};\n",CreateSubcomponent.__RAW__="import React from 'react';\nimport {\n  createContainer,\n  createModelHook,\n  createSubcomponent,\n  useUniqueId,\n} from '@workday/canvas-kit-react/common';\nimport {PrimaryButton, PrimaryButtonProps} from '@workday/canvas-kit-react/button';\n\nexport type Visibility = 'hidden' | 'visible';\n\n// First we define a model using out createModelHook\nconst useDisclosureModel = createModelHook({\n  // This becomes the default values on the model\n  defaultConfig: {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id: '',\n    /**\n     * The initial visibility of the disclosed content\n     * @default 'hidden'\n     */\n    initialVisibility: 'hidden' as Visibility,\n  },\n})(config => {\n  const id = useUniqueId(config.id);\n  const [visibility, setVisibility] = React.useState(config.initialVisibility || 'hidden');\n  //  Set the default internal state for your model.\n  const state = {\n    /** ID reference of the list. Children ids can be derived from this id */\n    id,\n    /**\n     * Visibility state of the disclosed content. Models are allowed to extend the states to fit\n     * their needs, so if you need to consistently determine \"not hidden\", use `visibility !==\n     * 'hidden'` rather than `visibility === 'visible'`\n     */\n    visibility,\n  };\n  // Sets events that can be used across subcomponents\n  const events = {\n    /**\n     * Start showing the disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    show(event?: Event | React.SyntheticEvent) {\n      setVisibility('visible');\n    },\n    /**\n     * Start hiding this disclosed content. If a DOM event triggered this event, the event data will\n     * be passed along. This data can be used by guards and callbacks.\n     */\n    hide(event?: Event | React.SyntheticEvent) {\n      setVisibility('hidden');\n    },\n  };\n\n  return {state, events};\n});\n\n// Disclose Target\nexport interface DisclosureTargetProps extends PrimaryButtonProps {}\n\nexport const DisclosureTarget = createSubcomponent('button')({\n  modelHook: useDisclosureModel,\n})<DisclosureTargetProps>(({children, ...elemProps}, Element, model) => {\n  return (\n    <PrimaryButton\n      onClick={(event: React.MouseEvent) => {\n        if (model.state.visibility !== 'hidden') {\n          model.events.hide(event);\n        } else {\n          model.events.show(event);\n        }\n      }}\n      as={Element}\n      {...elemProps}\n    >\n      {model.state.visibility === 'visible' ? 'Close' : 'Open'}\n    </PrimaryButton>\n  );\n});\n\n// Disclosure Container Component\ninterface DisclosureProps {}\n\nconst Disclosure = createContainer()({\n  displayName: 'Disclosure',\n  modelHook: useDisclosureModel,\n  subComponents: {\n    Target: DisclosureTarget,\n  },\n})<DisclosureProps>(({children}, Element, model) => {\n  return <>{children}</>;\n});\n\nexport const CreateSubcomponent = () => {\n  return (\n    <Disclosure>\n      <Disclosure.Target />\n    </Disclosure>\n  );\n};\n"}}]);