"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1722],{"./modules/preview-react/segmented-control/stories/SegmentedControl.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Dynamic=exports.RTL=exports.Vertical=exports.Sizes=exports.TextOnly=exports.TextAndIcon=exports.Disabled=exports.Basic=exports.default=void 0;var _SegmentedControl=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./modules/preview-react/segmented-control/stories/SegmentedControl.mdx")),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts"),_Basic=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Basic.tsx"),_Disabled=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Disabled.tsx"),_TextAndIcon=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/TextAndIcon.tsx"),_TextOnly=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/TextOnly.tsx"),_Sizes=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Sizes.tsx"),_Vertical=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Vertical.tsx"),_RTL=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/RTL.tsx"),_Dynamic=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Dynamic.tsx");var _default={title:"Preview/Segmented Control",component:_segmentedControl.SegmentedControl,tags:["autodocs"],parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import {Meta, StoryObj} from \'@storybook/react\';\\nimport mdxDoc from \'./SegmentedControl.mdx\';\\n\\nimport {SegmentedControl} from \'@workday/canvas-kit-preview-react/segmented-control\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {Disabled as DisabledExample} from \'./examples/Disabled\';\\nimport {TextAndIcon as TextAndIconExample} from \'./examples/TextAndIcon\';\\nimport {TextOnly as TextOnlyExample} from \'./examples/TextOnly\';\\nimport {Sizes as SizesExample} from \'./examples/Sizes\';\\nimport {Vertical as VerticalExample} from \'./examples/Vertical\';\\nimport {RTL as RTLExample} from \'./examples/RTL\';\\nimport {Dynamic as DynamicExample} from \'./examples/Dynamic\';\\n\\nexport default {\\n  title: \'Preview/Segmented Control\',\\n  component: SegmentedControl,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof SegmentedControl>;\\n\\ntype Story = StoryObj<typeof SegmentedControl>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\nexport const Disabled: Story = {\\n  render: DisabledExample,\\n};\\nexport const TextAndIcon: Story = {\\n  render: TextAndIconExample,\\n};\\nexport const TextOnly: Story = {\\n  render: TextOnlyExample,\\n};\\nexport const Sizes: Story = {\\n  render: SizesExample,\\n};\\nexport const Vertical: Story = {\\n  render: VerticalExample,\\n};\\nexport const RTL: Story = {\\n  render: RTLExample,\\n};\\nexport const Dynamic: Story = {\\n  render: DynamicExample,\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "Basic": {\n    "startLoc": {\n      "col": 28,\n      "line": 28\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 30\n    },\n    "startBody": {\n      "col": 28,\n      "line": 28\n    },\n    "endBody": {\n      "col": 1,\n      "line": 30\n    }\n  },\n  "Disabled": {\n    "startLoc": {\n      "col": 31,\n      "line": 31\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 33\n    },\n    "startBody": {\n      "col": 31,\n      "line": 31\n    },\n    "endBody": {\n      "col": 1,\n      "line": 33\n    }\n  },\n  "TextAndIcon": {\n    "startLoc": {\n      "col": 34,\n      "line": 34\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 36\n    },\n    "startBody": {\n      "col": 34,\n      "line": 34\n    },\n    "endBody": {\n      "col": 1,\n      "line": 36\n    }\n  },\n  "TextOnly": {\n    "startLoc": {\n      "col": 31,\n      "line": 37\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 39\n    },\n    "startBody": {\n      "col": 31,\n      "line": 37\n    },\n    "endBody": {\n      "col": 1,\n      "line": 39\n    }\n  },\n  "Sizes": {\n    "startLoc": {\n      "col": 28,\n      "line": 40\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 42\n    },\n    "startBody": {\n      "col": 28,\n      "line": 40\n    },\n    "endBody": {\n      "col": 1,\n      "line": 42\n    }\n  },\n  "Vertical": {\n    "startLoc": {\n      "col": 31,\n      "line": 43\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 45\n    },\n    "startBody": {\n      "col": 31,\n      "line": 43\n    },\n    "endBody": {\n      "col": 1,\n      "line": 45\n    }\n  },\n  "RTL": {\n    "startLoc": {\n      "col": 26,\n      "line": 46\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 48\n    },\n    "startBody": {\n      "col": 26,\n      "line": 46\n    },\n    "endBody": {\n      "col": 1,\n      "line": 48\n    }\n  },\n  "Dynamic": {\n    "startLoc": {\n      "col": 30,\n      "line": 49\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 51\n    },\n    "startBody": {\n      "col": 30,\n      "line": 49\n    },\n    "endBody": {\n      "col": 1,\n      "line": 51\n    }\n  }\n};\n    \nimport {Meta, StoryObj} from \'@storybook/react\';\nimport mdxDoc from \'./SegmentedControl.mdx\';\n\nimport {SegmentedControl} from \'@workday/canvas-kit-preview-react/segmented-control\';\n\nimport {Basic as BasicExample} from \'./examples/Basic\';\nimport {Disabled as DisabledExample} from \'./examples/Disabled\';\nimport {TextAndIcon as TextAndIconExample} from \'./examples/TextAndIcon\';\nimport {TextOnly as TextOnlyExample} from \'./examples/TextOnly\';\nimport {Sizes as SizesExample} from \'./examples/Sizes\';\nimport {Vertical as VerticalExample} from \'./examples/Vertical\';\nimport {RTL as RTLExample} from \'./examples/RTL\';\nimport {Dynamic as DynamicExample} from \'./examples/Dynamic\';\n\nexport default {\n  title: \'Preview/Segmented Control\',\n  component: SegmentedControl,\n  tags: [\'autodocs\'],\n  parameters: {\n  "storySource": {\n    "source": "import {Meta, StoryObj} from \'@storybook/react\';\\nimport mdxDoc from \'./SegmentedControl.mdx\';\\n\\nimport {SegmentedControl} from \'@workday/canvas-kit-preview-react/segmented-control\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {Disabled as DisabledExample} from \'./examples/Disabled\';\\nimport {TextAndIcon as TextAndIconExample} from \'./examples/TextAndIcon\';\\nimport {TextOnly as TextOnlyExample} from \'./examples/TextOnly\';\\nimport {Sizes as SizesExample} from \'./examples/Sizes\';\\nimport {Vertical as VerticalExample} from \'./examples/Vertical\';\\nimport {RTL as RTLExample} from \'./examples/RTL\';\\nimport {Dynamic as DynamicExample} from \'./examples/Dynamic\';\\n\\nexport default {\\n  title: \'Preview/Segmented Control\',\\n  component: SegmentedControl,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof SegmentedControl>;\\n\\ntype Story = StoryObj<typeof SegmentedControl>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\nexport const Disabled: Story = {\\n  render: DisabledExample,\\n};\\nexport const TextAndIcon: Story = {\\n  render: TextAndIconExample,\\n};\\nexport const TextOnly: Story = {\\n  render: TextOnlyExample,\\n};\\nexport const Sizes: Story = {\\n  render: SizesExample,\\n};\\nexport const Vertical: Story = {\\n  render: VerticalExample,\\n};\\nexport const RTL: Story = {\\n  render: RTLExample,\\n};\\nexport const Dynamic: Story = {\\n  render: DynamicExample,\\n};\\n",\n    "locationsMap": {\n      "basic": {\n        "startLoc": {\n          "col": 28,\n          "line": 28\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 30\n        },\n        "startBody": {\n          "col": 28,\n          "line": 28\n        },\n        "endBody": {\n          "col": 1,\n          "line": 30\n        }\n      },\n      "disabled": {\n        "startLoc": {\n          "col": 31,\n          "line": 31\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 33\n        },\n        "startBody": {\n          "col": 31,\n          "line": 31\n        },\n        "endBody": {\n          "col": 1,\n          "line": 33\n        }\n      },\n      "text-and-icon": {\n        "startLoc": {\n          "col": 34,\n          "line": 34\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 36\n        },\n        "startBody": {\n          "col": 34,\n          "line": 34\n        },\n        "endBody": {\n          "col": 1,\n          "line": 36\n        }\n      },\n      "text-only": {\n        "startLoc": {\n          "col": 31,\n          "line": 37\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 39\n        },\n        "startBody": {\n          "col": 31,\n          "line": 37\n        },\n        "endBody": {\n          "col": 1,\n          "line": 39\n        }\n      },\n      "sizes": {\n        "startLoc": {\n          "col": 28,\n          "line": 40\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 42\n        },\n        "startBody": {\n          "col": 28,\n          "line": 40\n        },\n        "endBody": {\n          "col": 1,\n          "line": 42\n        }\n      },\n      "vertical": {\n        "startLoc": {\n          "col": 31,\n          "line": 43\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 45\n        },\n        "startBody": {\n          "col": 31,\n          "line": 43\n        },\n        "endBody": {\n          "col": 1,\n          "line": 45\n        }\n      },\n      "rtl": {\n        "startLoc": {\n          "col": 26,\n          "line": 46\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 48\n        },\n        "startBody": {\n          "col": 26,\n          "line": 46\n        },\n        "endBody": {\n          "col": 1,\n          "line": 48\n        }\n      },\n      "dynamic": {\n        "startLoc": {\n          "col": 30,\n          "line": 49\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 51\n        },\n        "startBody": {\n          "col": 30,\n          "line": 49\n        },\n        "endBody": {\n          "col": 1,\n          "line": 51\n        }\n      }\n    }\n  }\n,\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof SegmentedControl>;\n\ntype Story = StoryObj<typeof SegmentedControl>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};;\nexport const Disabled: Story = {\n  render: DisabledExample,\n};;\nexport const TextAndIcon: Story = {\n  render: TextAndIconExample,\n};;\nexport const TextOnly: Story = {\n  render: TextOnlyExample,\n};;\nexport const Sizes: Story = {\n  render: SizesExample,\n};;\nexport const Vertical: Story = {\n  render: VerticalExample,\n};;\nexport const RTL: Story = {\n  render: RTLExample,\n};;\nexport const Dynamic: Story = {\n  render: DynamicExample,\n};\n',locationsMap:{basic:{startLoc:{col:28,line:331},endLoc:{col:1,line:333},startBody:{col:28,line:331},endBody:{col:1,line:333}},disabled:{startLoc:{col:31,line:334},endLoc:{col:1,line:336},startBody:{col:31,line:334},endBody:{col:1,line:336}},"text-and-icon":{startLoc:{col:34,line:337},endLoc:{col:1,line:339},startBody:{col:34,line:337},endBody:{col:1,line:339}},"text-only":{startLoc:{col:31,line:340},endLoc:{col:1,line:342},startBody:{col:31,line:340},endBody:{col:1,line:342}},sizes:{startLoc:{col:28,line:343},endLoc:{col:1,line:345},startBody:{col:28,line:343},endBody:{col:1,line:345}},vertical:{startLoc:{col:31,line:346},endLoc:{col:1,line:348},startBody:{col:31,line:346},endBody:{col:1,line:348}},rtl:{startLoc:{col:26,line:349},endLoc:{col:1,line:351},startBody:{col:26,line:349},endBody:{col:1,line:351}},dynamic:{startLoc:{col:30,line:352},endLoc:{col:1,line:354},startBody:{col:30,line:352},endBody:{col:1,line:354}}}},storySource:{source:"import {Meta, StoryObj} from '@storybook/react';\nimport mdxDoc from './SegmentedControl.mdx';\n\nimport {SegmentedControl} from '@workday/canvas-kit-preview-react/segmented-control';\n\nimport {Basic as BasicExample} from './examples/Basic';\nimport {Disabled as DisabledExample} from './examples/Disabled';\nimport {TextAndIcon as TextAndIconExample} from './examples/TextAndIcon';\nimport {TextOnly as TextOnlyExample} from './examples/TextOnly';\nimport {Sizes as SizesExample} from './examples/Sizes';\nimport {Vertical as VerticalExample} from './examples/Vertical';\nimport {RTL as RTLExample} from './examples/RTL';\nimport {Dynamic as DynamicExample} from './examples/Dynamic';\n\nexport default {\n  title: 'Preview/Segmented Control',\n  component: SegmentedControl,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof SegmentedControl>;\n\ntype Story = StoryObj<typeof SegmentedControl>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};\nexport const Disabled: Story = {\n  render: DisabledExample,\n};\nexport const TextAndIcon: Story = {\n  render: TextAndIconExample,\n};\nexport const TextOnly: Story = {\n  render: TextOnlyExample,\n};\nexport const Sizes: Story = {\n  render: SizesExample,\n};\nexport const Vertical: Story = {\n  render: VerticalExample,\n};\nexport const RTL: Story = {\n  render: RTLExample,\n};\nexport const Dynamic: Story = {\n  render: DynamicExample,\n};\n",locationsMap:{basic:{startLoc:{col:28,line:28},endLoc:{col:1,line:30},startBody:{col:28,line:28},endBody:{col:1,line:30}},disabled:{startLoc:{col:31,line:31},endLoc:{col:1,line:33},startBody:{col:31,line:31},endBody:{col:1,line:33}},"text-and-icon":{startLoc:{col:34,line:34},endLoc:{col:1,line:36},startBody:{col:34,line:34},endBody:{col:1,line:36}},"text-only":{startLoc:{col:31,line:37},endLoc:{col:1,line:39},startBody:{col:31,line:37},endBody:{col:1,line:39}},sizes:{startLoc:{col:28,line:40},endLoc:{col:1,line:42},startBody:{col:28,line:40},endBody:{col:1,line:42}},vertical:{startLoc:{col:31,line:43},endLoc:{col:1,line:45},startBody:{col:31,line:43},endBody:{col:1,line:45}},rtl:{startLoc:{col:26,line:46},endLoc:{col:1,line:48},startBody:{col:26,line:46},endBody:{col:1,line:48}},dynamic:{startLoc:{col:30,line:49},endLoc:{col:1,line:51},startBody:{col:30,line:49},endBody:{col:1,line:51}}}},docs:{page:_SegmentedControl.default}}};exports.default=_default;const Basic={render:_Basic.Basic};exports.Basic=Basic;const Disabled={render:_Disabled.Disabled};exports.Disabled=Disabled;const TextAndIcon={render:_TextAndIcon.TextAndIcon};exports.TextAndIcon=TextAndIcon;const TextOnly={render:_TextOnly.TextOnly};exports.TextOnly=TextOnly;const Sizes={render:_Sizes.Sizes};exports.Sizes=Sizes;const Vertical={render:_Vertical.Vertical};exports.Vertical=Vertical;const RTL={render:_RTL.RTL};exports.RTL=RTL;const Dynamic={render:_Dynamic.Dynamic};exports.Dynamic=Dynamic,module.exports.__namedExportsOrder=["Dynamic","RTL","Vertical","Sizes","TextOnly","TextAndIcon","Disabled","Basic"]},"./modules/preview-react/segmented-control/stories/SegmentedControl.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_SegmentedControl_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/preview-react/segmented-control/stories/SegmentedControl.stories.ts"),_examples_Basic__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Basic.tsx"),_examples_Disabled__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Disabled.tsx"),_examples_TextAndIcon__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/TextAndIcon.tsx"),_examples_TextOnly__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/TextOnly.tsx"),_examples_Sizes__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Sizes.tsx"),_examples_Vertical__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Vertical.tsx"),_examples_RTL__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/RTL.tsx"),_examples_Dynamic__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./modules/preview-react/segmented-control/stories/examples/Dynamic.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",a:"a",h2:"h2",pre:"pre",code:"code",h3:"h3",strong:"strong",h4:"h4",ul:"ul",li:"li"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{of:_SegmentedControl_stories__WEBPACK_IMPORTED_MODULE_5__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-segmented-control",children:"Canvas Kit Segmented Control"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Segmented Control is a\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/guides-compound-components--docs",children:"compound component"})," that represents\na linear group of multiple buttons allowing the selection of a specific value."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://design.workday.com/components/buttons/segmented-control",target:"_blank",rel:"nofollow noopener noreferrer",children:"> Workday Design Reference"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"installation",children:"Installation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-sh",children:"yarn add @workday/canvas-kit-preview-react\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," includes a container ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," component and the following\nsubcomponents: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.List"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The example below contains a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," with four icon-only buttons. Each button is rendered\nusing a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"})," and is paired with a tooltip describing the button's function. Only\none button can be active at a time."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Basic__WEBPACK_IMPORTED_MODULE_6__.Basic}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Note that you must provide ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.List"})," with an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-label"})," prop for accessibility\nreasons."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["We ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"strongly"})," discourage including more than four buttons in a single ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"variations",children:"Variations"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," supports three variations based on whether or not its ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"}),"\ncomponents have an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"icon"})," prop and/or text content: icon-only, text-only, and text-and-icon."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["All ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"})," components within a given ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," must be of the same\nvariation."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"icon-only",children:"Icon-Only"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["To render an icon-only ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"}),", apply the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"icon"})," prop to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"})," and do\nnot provide it with text content. Refer to the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"#basic-example",children:"basic example"})," above for an instance\nof an icon-only ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The icon-only variation is the only variation which supports a vertical orientation in addition to\nthe default horizontal orientation. Set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"orientation"})," prop of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"vertical"}),"\nto configure the component to render vertically."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Vertical__WEBPACK_IMPORTED_MODULE_7__.Vertical}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"text-only",children:"Text-Only"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["To render a text-only ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"}),", omit the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"icon"})," prop from ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"})," and\nprovide it with text content."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_TextOnly__WEBPACK_IMPORTED_MODULE_8__.TextOnly}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"text-and-icon",children:"Text-and-Icon"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["To render a text-and-icon ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"}),", apply the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"icon"})," prop to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"})," and\nprovide it with text content."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_TextAndIcon__WEBPACK_IMPORTED_MODULE_9__.TextAndIcon}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"sizes",children:"Sizes"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," accepts a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"size"})," prop which supports the following values:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"small"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"medium"})," (Default)"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"large"})}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Sizes__WEBPACK_IMPORTED_MODULE_10__.Sizes}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"disabled"})," prop of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," to disable the entire component including its buttons."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Disabled__WEBPACK_IMPORTED_MODULE_11__.Disabled}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"right-to-left-rtl",children:"Right-to-Left (RTL)"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," supports right-to-left languages when specified in the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CanvasProvider"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"theme"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_RTL__WEBPACK_IMPORTED_MODULE_12__.RTL}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"dynamic-items",children:"Dynamic Items"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl"})," supports a\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/features-collections--basic#dynamic-items",children:"dynamic API"})," where instead\nof statically providing the JSX for each ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SegmentedControl.Item"}),", you pass an array of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"items"})," in\nthe ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"model"})," state and provide a render function to display the items."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Dynamic__WEBPACK_IMPORTED_MODULE_13__.Dynamic}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"component-api",children:"Component API"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.SymbolDoc,{name:"SegmentedControl",fileName:"/preview-react/"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"specifications",children:"Specifications"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.Specifications,{file:"SegmentedControl.spec.ts",name:"SegmentedControl"})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/preview-react/segmented-control/stories/examples/Basic.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Basic=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js");const Basic=()=>{const[viewType,setViewType]=_react.default.useState("table");return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_segmentedControl.SegmentedControl,{initialValue:viewType,onSelect:data=>setViewType(data.id)},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon,tooltipProps:{title:"Table"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-view",icon:_canvasSystemIconsWeb.listViewIcon,tooltipProps:{title:"List"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-detail",icon:_canvasSystemIconsWeb.listDetailIcon,tooltipProps:{title:"Detail"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagrams",icon:_canvasSystemIconsWeb.pieChartIcon,tooltipProps:{title:"Diagram"}}))),_react.default.createElement(_text.BodyText,{size:"small",marginTop:"s"},"Selected: ",viewType))};exports.Basic=Basic,Basic.__RAW__="import React from 'react';\n\nimport {SegmentedControl} from '@workday/canvas-kit-preview-react/segmented-control';\nimport {BodyText} from '@workday/canvas-kit-react/text';\nimport {\n  gridIcon,\n  listViewIcon,\n  listDetailIcon,\n  pieChartIcon,\n} from '@workday/canvas-system-icons-web';\n\nexport const Basic = () => {\n  const [viewType, setViewType] = React.useState('table');\n\n  return (\n    <>\n      <SegmentedControl initialValue={viewType} onSelect={data => setViewType(data.id)}>\n        <SegmentedControl.List aria-label=\"View type\">\n          <SegmentedControl.Item data-id=\"table\" icon={gridIcon} tooltipProps={{title: 'Table'}} />\n          <SegmentedControl.Item\n            data-id=\"list-view\"\n            icon={listViewIcon}\n            tooltipProps={{title: 'List'}}\n          />\n          <SegmentedControl.Item\n            data-id=\"list-detail\"\n            icon={listDetailIcon}\n            tooltipProps={{title: 'Detail'}}\n          />\n          <SegmentedControl.Item\n            data-id=\"diagrams\"\n            icon={pieChartIcon}\n            tooltipProps={{title: 'Diagram'}}\n          />\n        </SegmentedControl.List>\n      </SegmentedControl>\n      <BodyText size=\"small\" marginTop=\"s\">\n        Selected: {viewType}\n      </BodyText>\n    </>\n  );\n};\n"},"./modules/preview-react/segmented-control/stories/examples/Disabled.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Disabled=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js");const Disabled=()=>_react.default.createElement(_segmentedControl.SegmentedControl,{disabled:!0},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon,tooltipProps:{title:"Table"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-view",icon:_canvasSystemIconsWeb.listViewIcon,tooltipProps:{title:"List"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-detail",icon:_canvasSystemIconsWeb.listDetailIcon,tooltipProps:{title:"Detail"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagrams",icon:_canvasSystemIconsWeb.pieChartIcon,tooltipProps:{title:"Diagram"}})));exports.Disabled=Disabled,Disabled.displayName="Disabled",Disabled.__RAW__="import React from 'react';\nimport {SegmentedControl} from '@workday/canvas-kit-preview-react/segmented-control';\nimport {\n  gridIcon,\n  listViewIcon,\n  listDetailIcon,\n  pieChartIcon,\n} from '@workday/canvas-system-icons-web';\n\nexport const Disabled = () => (\n  <SegmentedControl disabled>\n    <SegmentedControl.List aria-label=\"View type\">\n      <SegmentedControl.Item data-id=\"table\" icon={gridIcon} tooltipProps={{title: 'Table'}} />\n      <SegmentedControl.Item\n        data-id=\"list-view\"\n        icon={listViewIcon}\n        tooltipProps={{title: 'List'}}\n      />\n      <SegmentedControl.Item\n        data-id=\"list-detail\"\n        icon={listDetailIcon}\n        tooltipProps={{title: 'Detail'}}\n      />\n      <SegmentedControl.Item\n        data-id=\"diagrams\"\n        icon={pieChartIcon}\n        tooltipProps={{title: 'Diagram'}}\n      />\n    </SegmentedControl.List>\n  </SegmentedControl>\n);\n"},"./modules/preview-react/segmented-control/stories/examples/Dynamic.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Dynamic=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js");const Dynamic=()=>{const[viewType,setViewType]=_react.default.useState("table"),model=(0,_segmentedControl.useSegmentedControlModel)({items:[{id:"table",icon:_canvasSystemIconsWeb.gridIcon,label:"Table"},{id:"list",icon:_canvasSystemIconsWeb.listViewIcon,label:"List"},{id:"detail",icon:_canvasSystemIconsWeb.listDetailIcon,label:"Detail"},{id:"diagram",icon:_canvasSystemIconsWeb.pieChartIcon,label:"Diagram"}],size:"small",initialValue:viewType,onSelect:data=>{console.log(`${data.id} is selected`),setViewType(data.id)}});return _react.default.createElement(_segmentedControl.SegmentedControl,{model},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},(item=>_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":item.id,icon:item.icon},item.label))))};exports.Dynamic=Dynamic,Dynamic.displayName="Dynamic",Dynamic.__RAW__="import React from 'react';\nimport {\n  SegmentedControl,\n  useSegmentedControlModel,\n} from '@workday/canvas-kit-preview-react/segmented-control';\nimport {\n  gridIcon,\n  listViewIcon,\n  listDetailIcon,\n  pieChartIcon,\n} from '@workday/canvas-system-icons-web';\n\nexport const Dynamic = () => {\n  const [viewType, setViewType] = React.useState('table');\n\n  const model = useSegmentedControlModel({\n    items: [\n      {id: 'table', icon: gridIcon, label: 'Table'},\n      {id: 'list', icon: listViewIcon, label: 'List'},\n      {id: 'detail', icon: listDetailIcon, label: 'Detail'},\n      {id: 'diagram', icon: pieChartIcon, label: 'Diagram'},\n    ],\n    size: 'small',\n    initialValue: viewType,\n    onSelect: data => {\n      console.log(`${data.id} is selected`);\n      setViewType(data.id);\n    },\n  });\n\n  return (\n    <SegmentedControl model={model}>\n      <SegmentedControl.List aria-label=\"View type\">\n        {item => (\n          <SegmentedControl.Item data-id={item.id} icon={item.icon}>\n            {item.label}\n          </SegmentedControl.Item>\n        )}\n      </SegmentedControl.List>\n    </SegmentedControl>\n  );\n};\n"},"./modules/preview-react/segmented-control/stories/examples/RTL.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RTL=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts");const RTL=()=>_react.default.createElement(_common.CanvasProvider,{theme:{canvas:{direction:_common.ContentDirection.RTL}}},_react.default.createElement(_segmentedControl.SegmentedControl,{initialValue:"list-detail"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon},"שולחן"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-view",icon:_canvasSystemIconsWeb.listViewIcon},"רשימה"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-detail",icon:_canvasSystemIconsWeb.listDetailIcon},"פרטים"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagrams",icon:_canvasSystemIconsWeb.pieChartIcon},"תרשים"))));exports.RTL=RTL,RTL.displayName="RTL",RTL.__RAW__='import React from \'react\';\nimport {CanvasProvider, ContentDirection} from \'@workday/canvas-kit-react/common\';\nimport {\n  gridIcon,\n  listViewIcon,\n  listDetailIcon,\n  pieChartIcon,\n} from \'@workday/canvas-system-icons-web\';\nimport {SegmentedControl} from \'@workday/canvas-kit-preview-react/segmented-control\';\n\nexport const RTL = () => (\n  <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n    <SegmentedControl initialValue="list-detail">\n      <SegmentedControl.List aria-label="View type">\n        <SegmentedControl.Item data-id="table" icon={gridIcon}>\n          שולחן\n        </SegmentedControl.Item>\n        <SegmentedControl.Item data-id="list-view" icon={listViewIcon}>\n          רשימה\n        </SegmentedControl.Item>\n        <SegmentedControl.Item data-id="list-detail" icon={listDetailIcon}>\n          פרטים\n        </SegmentedControl.Item>\n        <SegmentedControl.Item data-id="diagrams" icon={pieChartIcon}>\n          תרשים\n        </SegmentedControl.Item>\n      </SegmentedControl.List>\n    </SegmentedControl>\n  </CanvasProvider>\n);\n'},"./modules/preview-react/segmented-control/stories/examples/Sizes.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Sizes=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_layout=__webpack_require__("./modules/react/layout/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts");const Sizes=()=>_react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_layout.Box,null,_react.default.createElement(_text.BodyText,{size:"medium",fontWeight:"bold",marginTop:0},"Small"),_react.default.createElement(_segmentedControl.SegmentedControl,{size:"small"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon},"Table"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-view",icon:_canvasSystemIconsWeb.listViewIcon},"List"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-detail",icon:_canvasSystemIconsWeb.listDetailIcon},"Detail"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagrams",icon:_canvasSystemIconsWeb.pieChartIcon},"Diagram")))),_react.default.createElement(_layout.Box,null,_react.default.createElement(_text.BodyText,{size:"medium",fontWeight:"bold"},"Medium"),_react.default.createElement(_segmentedControl.SegmentedControl,{size:"medium"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon},"Table"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-view",icon:_canvasSystemIconsWeb.listViewIcon},"List"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-detail",icon:_canvasSystemIconsWeb.listDetailIcon},"Detail"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagrams",icon:_canvasSystemIconsWeb.pieChartIcon},"Diagram")))),_react.default.createElement(_layout.Box,null,_react.default.createElement(_text.BodyText,{size:"medium",fontWeight:"bold"},"Large"),_react.default.createElement(_segmentedControl.SegmentedControl,{size:"large"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"Content view type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon},"Table"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-view",icon:_canvasSystemIconsWeb.listViewIcon},"List"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-detail",icon:_canvasSystemIconsWeb.listDetailIcon},"Detail"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagrams",icon:_canvasSystemIconsWeb.pieChartIcon},"Diagram")))));exports.Sizes=Sizes,Sizes.__RAW__='import React from \'react\';\nimport {Box} from \'@workday/canvas-kit-react/layout\';\nimport {\n  gridIcon,\n  listViewIcon,\n  listDetailIcon,\n  pieChartIcon,\n} from \'@workday/canvas-system-icons-web\';\nimport {SegmentedControl} from \'@workday/canvas-kit-preview-react/segmented-control\';\nimport {BodyText} from \'@workday/canvas-kit-react/text\';\n\nexport const Sizes = () => (\n  <>\n    <Box>\n      <BodyText size="medium" fontWeight="bold" marginTop={0}>\n        Small\n      </BodyText>\n      <SegmentedControl size="small">\n        <SegmentedControl.List aria-label="View type">\n          <SegmentedControl.Item data-id="table" icon={gridIcon}>\n            Table\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="list-view" icon={listViewIcon}>\n            List\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="list-detail" icon={listDetailIcon}>\n            Detail\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="diagrams" icon={pieChartIcon}>\n            Diagram\n          </SegmentedControl.Item>\n        </SegmentedControl.List>\n      </SegmentedControl>\n    </Box>\n    <Box>\n      <BodyText size="medium" fontWeight="bold">\n        Medium\n      </BodyText>\n      <SegmentedControl size="medium">\n        <SegmentedControl.List aria-label="View type">\n          <SegmentedControl.Item data-id="table" icon={gridIcon}>\n            Table\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="list-view" icon={listViewIcon}>\n            List\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="list-detail" icon={listDetailIcon}>\n            Detail\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="diagrams" icon={pieChartIcon}>\n            Diagram\n          </SegmentedControl.Item>\n        </SegmentedControl.List>\n      </SegmentedControl>\n    </Box>\n    <Box>\n      <BodyText size="medium" fontWeight="bold">\n        Large\n      </BodyText>\n      <SegmentedControl size="large">\n        <SegmentedControl.List aria-label="Content view type">\n          <SegmentedControl.Item data-id="table" icon={gridIcon}>\n            Table\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="list-view" icon={listViewIcon}>\n            List\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="list-detail" icon={listDetailIcon}>\n            Detail\n          </SegmentedControl.Item>\n          <SegmentedControl.Item data-id="diagrams" icon={pieChartIcon}>\n            Diagram\n          </SegmentedControl.Item>\n        </SegmentedControl.List>\n      </SegmentedControl>\n    </Box>\n  </>\n);\n'},"./modules/preview-react/segmented-control/stories/examples/TextAndIcon.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextAndIcon=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts");const TextAndIcon=()=>_react.default.createElement(_segmentedControl.SegmentedControl,null,_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon},"Table"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list",icon:_canvasSystemIconsWeb.listViewIcon},"List"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagram",icon:_canvasSystemIconsWeb.pieChartIcon},"Diagram")));exports.TextAndIcon=TextAndIcon,TextAndIcon.displayName="TextAndIcon",TextAndIcon.__RAW__='import React from \'react\';\nimport {gridIcon, listViewIcon, pieChartIcon} from \'@workday/canvas-system-icons-web\';\nimport {SegmentedControl} from \'@workday/canvas-kit-preview-react/segmented-control\';\n\nexport const TextAndIcon = () => (\n  <SegmentedControl>\n    <SegmentedControl.List aria-label="View type">\n      <SegmentedControl.Item data-id="table" icon={gridIcon}>\n        Table\n      </SegmentedControl.Item>\n      <SegmentedControl.Item data-id="list" icon={listViewIcon}>\n        List\n      </SegmentedControl.Item>\n      <SegmentedControl.Item data-id="diagram" icon={pieChartIcon}>\n        Diagram\n      </SegmentedControl.Item>\n    </SegmentedControl.List>\n  </SegmentedControl>\n);\n'},"./modules/preview-react/segmented-control/stories/examples/TextOnly.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextOnly=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts");const TextOnly=()=>_react.default.createElement(_segmentedControl.SegmentedControl,null,_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table"},"Table"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list"},"List"),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagram"},"Diagram")));exports.TextOnly=TextOnly,TextOnly.displayName="TextOnly",TextOnly.__RAW__='import React from \'react\';\nimport {SegmentedControl} from \'@workday/canvas-kit-preview-react/segmented-control\';\n\nexport const TextOnly = () => (\n  <SegmentedControl>\n    <SegmentedControl.List aria-label="View type">\n      <SegmentedControl.Item data-id="table">Table</SegmentedControl.Item>\n      <SegmentedControl.Item data-id="list">List</SegmentedControl.Item>\n      <SegmentedControl.Item data-id="diagram">Diagram</SegmentedControl.Item>\n    </SegmentedControl.List>\n  </SegmentedControl>\n);\n'},"./modules/preview-react/segmented-control/stories/examples/Vertical.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Vertical=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_segmentedControl=__webpack_require__("./modules/preview-react/segmented-control/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js");const Vertical=()=>_react.default.createElement(_segmentedControl.SegmentedControl,{orientation:"vertical"},_react.default.createElement(_segmentedControl.SegmentedControl.List,{"aria-label":"View type"},_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"table",icon:_canvasSystemIconsWeb.gridIcon,tooltipProps:{title:"Table"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-view",icon:_canvasSystemIconsWeb.listViewIcon,tooltipProps:{title:"List"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"list-detail",icon:_canvasSystemIconsWeb.listDetailIcon,tooltipProps:{title:"Detail"}}),_react.default.createElement(_segmentedControl.SegmentedControl.Item,{"data-id":"diagram",icon:_canvasSystemIconsWeb.pieChartIcon,tooltipProps:{title:"Diagram"}})));exports.Vertical=Vertical,Vertical.displayName="Vertical",Vertical.__RAW__="import React from 'react';\nimport {SegmentedControl} from '@workday/canvas-kit-preview-react/segmented-control';\nimport {\n  gridIcon,\n  listViewIcon,\n  listDetailIcon,\n  pieChartIcon,\n} from '@workday/canvas-system-icons-web';\n\nexport const Vertical = () => (\n  <SegmentedControl orientation=\"vertical\">\n    <SegmentedControl.List aria-label=\"View type\">\n      <SegmentedControl.Item data-id=\"table\" icon={gridIcon} tooltipProps={{title: 'Table'}} />\n      <SegmentedControl.Item\n        data-id=\"list-view\"\n        icon={listViewIcon}\n        tooltipProps={{title: 'List'}}\n      />\n      <SegmentedControl.Item\n        data-id=\"list-detail\"\n        icon={listDetailIcon}\n        tooltipProps={{title: 'Detail'}}\n      />\n      <SegmentedControl.Item\n        data-id=\"diagram\"\n        icon={pieChartIcon}\n        tooltipProps={{title: 'Diagram'}}\n      />\n    </SegmentedControl.List>\n  </SegmentedControl>\n);\n"}}]);