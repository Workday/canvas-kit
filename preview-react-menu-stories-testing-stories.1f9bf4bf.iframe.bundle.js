"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8926],{"./modules/preview-react/menu/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.MenuItemStates=void 0;(function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}})(__webpack_require__("./node_modules/react/index.js"));var _testing=__webpack_require__("./modules/react/testing/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_index=__webpack_require__("./modules/preview-react/menu/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const noop=()=>{};exports.default={title:"Testing/Preview/Menu",component:_index.DeprecatedMenu,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {\\n  uploadCloudIcon,\\n  extLinkIcon,\\n  userIcon,\\n  taskContactIcon,\\n} from '@workday/canvas-system-icons-web';\\nimport {DeprecatedMenu, DeprecatedMenuItem, DeprecatedMenuItemProps} from '../index';\\n\\n// eslint-disable-next-line no-empty-function\\nconst noop = () => {};\\n\\nexport default {\\n  title: 'Testing/Preview/Menu',\\n  component: DeprecatedMenu,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n      diffThreshold: 0.3, // Chrome downsizes images non-deterministically. From testing, 0.28 is the minimum.\\n    },\\n  },\\n};\\n\\ninterface StoryMenuItemProps extends Omit<DeprecatedMenuItemProps, 'role'> {\\n  text: React.ReactNode;\\n}\\n\\nconst createMenuItems = (hasIcons?: boolean, isFocused?: boolean): StoryMenuItemProps[] => {\\n  return [\\n    {\\n      text: `First Item`,\\n      icon: hasIcons ? uploadCloudIcon : undefined,\\n      isFocused: isFocused,\\n    },\\n    {\\n      text: `Second Item (with a really really really long label)`,\\n      icon: undefined,\\n    },\\n    {\\n      text: `Third Item (with a really really really long label)`,\\n      icon: hasIcons ? uploadCloudIcon : undefined,\\n    },\\n    {\\n      text: `Fourth Item (with a really really really long label)`,\\n      icon: hasIcons ? uploadCloudIcon : undefined,\\n      secondaryIcon: hasIcons ? taskContactIcon : undefined,\\n    },\\n    {\\n      text: `Fifth Item (disabled)`,\\n      icon: undefined,\\n      secondaryIcon: hasIcons ? extLinkIcon : undefined,\\n      isDisabled: true,\\n    },\\n    {\\n      text: hasIcons ? (\\n        ''\\n      ) : (\\n        <em>\\n          Sixth Item (<b>with markup</b>)\\n        </em>\\n      ),\\n      icon: hasIcons ? userIcon : undefined,\\n      'aria-label': hasIcons ? `I am a label for screen readers` : undefined,\\n    },\\n    {\\n      text: `Seventh Item (with divider)`,\\n      icon: undefined,\\n      hasDivider: true,\\n    },\\n  ];\\n};\\nconst buildItem = (item: StoryMenuItemProps, index: number) => (\\n  <DeprecatedMenuItem\\n    key={index}\\n    onClick={noop}\\n    icon={item.icon}\\n    isFocused={item.isFocused}\\n    secondaryIcon={item.secondaryIcon}\\n    isDisabled={item.isDisabled}\\n    hasDivider={item.hasDivider}\\n    aria-label={item['aria-label']}\\n  >\\n    {item.text}\\n  </DeprecatedMenuItem>\\n);\\n\\nexport const MenuItemStates = () => (\\n  <StaticStates>\\n    <ComponentStatesTable\\n      rowProps={[\\n        {label: 'Default', props: {}},\\n        {label: 'With Icons', props: {hasIcons: true}},\\n        {label: 'With Icons and Custom Width', props: {hasIcons: true, width: 200}},\\n        {\\n          label: 'With Icons and Custom Focus',\\n          props: {hasIcons: true, initialSelectedItem: 3},\\n        },\\n      ]}\\n      columnProps={[{label: 'Default', props: {}}]}\\n    >\\n      {props => (\\n        <DeprecatedMenu width={props.width} initialSelectedItem={props.initialSelectedItem}>\\n          {createMenuItems(props.hasIcons).map(buildItem)}\\n        </DeprecatedMenu>\\n      )}\\n    </ComponentStatesTable>\\n  </StaticStates>\\n);\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"MenuItemStates\": {\n    \"startLoc\": {\n      \"col\": 30,\n      \"line\": 88\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 109\n    },\n    \"startBody\": {\n      \"col\": 30,\n      \"line\": 88\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 109\n    }\n  }\n};\n    \nimport React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {\n  uploadCloudIcon,\n  extLinkIcon,\n  userIcon,\n  taskContactIcon,\n} from '@workday/canvas-system-icons-web';\nimport {DeprecatedMenu, DeprecatedMenuItem, DeprecatedMenuItemProps} from '../index';\n\n\nconst noop = () => {};\n\nexport default {\n  title: 'Testing/Preview/Menu',\n  component: DeprecatedMenu,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {\\n  uploadCloudIcon,\\n  extLinkIcon,\\n  userIcon,\\n  taskContactIcon,\\n} from '@workday/canvas-system-icons-web';\\nimport {DeprecatedMenu, DeprecatedMenuItem, DeprecatedMenuItemProps} from '../index';\\n\\n\\nconst noop = () => {};\\n\\nexport default {\\n  title: 'Testing/Preview/Menu',\\n  component: DeprecatedMenu,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n      diffThreshold: 0.3, // Chrome downsizes images non-deterministically. From testing, 0.28 is the minimum.\\n    },\\n  },\\n};\\n\\ninterface StoryMenuItemProps extends Omit<DeprecatedMenuItemProps, 'role'> {\\n  text: React.ReactNode;\\n}\\n\\nconst createMenuItems = (hasIcons?: boolean, isFocused?: boolean): StoryMenuItemProps[] => {\\n  return [\\n    {\\n      text: `First Item`,\\n      icon: hasIcons ? uploadCloudIcon : undefined,\\n      isFocused: isFocused,\\n    },\\n    {\\n      text: `Second Item (with a really really really long label)`,\\n      icon: undefined,\\n    },\\n    {\\n      text: `Third Item (with a really really really long label)`,\\n      icon: hasIcons ? uploadCloudIcon : undefined,\\n    },\\n    {\\n      text: `Fourth Item (with a really really really long label)`,\\n      icon: hasIcons ? uploadCloudIcon : undefined,\\n      secondaryIcon: hasIcons ? taskContactIcon : undefined,\\n    },\\n    {\\n      text: `Fifth Item (disabled)`,\\n      icon: undefined,\\n      secondaryIcon: hasIcons ? extLinkIcon : undefined,\\n      isDisabled: true,\\n    },\\n    {\\n      text: hasIcons ? (\\n        ''\\n      ) : (\\n        <em>\\n          Sixth Item (<b>with markup</b>)\\n        </em>\\n      ),\\n      icon: hasIcons ? userIcon : undefined,\\n      'aria-label': hasIcons ? `I am a label for screen readers` : undefined,\\n    },\\n    {\\n      text: `Seventh Item (with divider)`,\\n      icon: undefined,\\n      hasDivider: true,\\n    },\\n  ];\\n};\\nconst buildItem = (item: StoryMenuItemProps, index: number) => (\\n  <DeprecatedMenuItem\\n    key={index}\\n    onClick={noop}\\n    icon={item.icon}\\n    isFocused={item.isFocused}\\n    secondaryIcon={item.secondaryIcon}\\n    isDisabled={item.isDisabled}\\n    hasDivider={item.hasDivider}\\n    aria-label={item['aria-label']}\\n  >\\n    {item.text}\\n  </DeprecatedMenuItem>\\n);\\n\\nexport const MenuItemStates = () => (\\n  <StaticStates>\\n    <ComponentStatesTable\\n      rowProps={[\\n        {label: 'Default', props: {}},\\n        {label: 'With Icons', props: {hasIcons: true}},\\n        {label: 'With Icons and Custom Width', props: {hasIcons: true, width: 200}},\\n        {\\n          label: 'With Icons and Custom Focus',\\n          props: {hasIcons: true, initialSelectedItem: 3},\\n        },\\n      ]}\\n      columnProps={[{label: 'Default', props: {}}]}\\n    >\\n      {props => (\\n        <DeprecatedMenu width={props.width} initialSelectedItem={props.initialSelectedItem}>\\n          {createMenuItems(props.hasIcons).map(buildItem)}\\n        </DeprecatedMenu>\\n      )}\\n    </ComponentStatesTable>\\n  </StaticStates>\\n);\\n\",\n    \"locationsMap\": {\n      \"menu-item-states\": {\n        \"startLoc\": {\n          \"col\": 30,\n          \"line\": 88\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 109\n        },\n        \"startBody\": {\n          \"col\": 30,\n          \"line\": 88\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 109\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n      diffThreshold: 0.3, // Chrome downsizes images non-deterministically. From testing, 0.28 is the minimum.\n    },\n  },\n};\n\ninterface StoryMenuItemProps extends Omit<DeprecatedMenuItemProps, 'role'> {\n  text: React.ReactNode;\n}\n\nconst createMenuItems = (hasIcons?: boolean, isFocused?: boolean): StoryMenuItemProps[] => {\n  return [\n    {\n      text: `First Item`,\n      icon: hasIcons ? uploadCloudIcon : undefined,\n      isFocused: isFocused,\n    },\n    {\n      text: `Second Item (with a really really really long label)`,\n      icon: undefined,\n    },\n    {\n      text: `Third Item (with a really really really long label)`,\n      icon: hasIcons ? uploadCloudIcon : undefined,\n    },\n    {\n      text: `Fourth Item (with a really really really long label)`,\n      icon: hasIcons ? uploadCloudIcon : undefined,\n      secondaryIcon: hasIcons ? taskContactIcon : undefined,\n    },\n    {\n      text: `Fifth Item (disabled)`,\n      icon: undefined,\n      secondaryIcon: hasIcons ? extLinkIcon : undefined,\n      isDisabled: true,\n    },\n    {\n      text: hasIcons ? (\n        ''\n      ) : (\n        <em>\n          Sixth Item (<b>with markup</b>)\n        </em>\n      ),\n      icon: hasIcons ? userIcon : undefined,\n      'aria-label': hasIcons ? `I am a label for screen readers` : undefined,\n    },\n    {\n      text: `Seventh Item (with divider)`,\n      icon: undefined,\n      hasDivider: true,\n    },\n  ];\n};\nconst buildItem = (item: StoryMenuItemProps, index: number) => (\n  <DeprecatedMenuItem\n    key={index}\n    onClick={noop}\n    icon={item.icon}\n    isFocused={item.isFocused}\n    secondaryIcon={item.secondaryIcon}\n    isDisabled={item.isDisabled}\n    hasDivider={item.hasDivider}\n    aria-label={item['aria-label']}\n  >\n    {item.text}\n  </DeprecatedMenuItem>\n);\n\nexport const MenuItemStates = () => (\n  <StaticStates>\n    <ComponentStatesTable\n      rowProps={[\n        {label: 'Default', props: {}},\n        {label: 'With Icons', props: {hasIcons: true}},\n        {label: 'With Icons and Custom Width', props: {hasIcons: true, width: 200}},\n        {\n          label: 'With Icons and Custom Focus',\n          props: {hasIcons: true, initialSelectedItem: 3},\n        },\n      ]}\n      columnProps={[{label: 'Default', props: {}}]}\n    >\n      {props => (\n        <DeprecatedMenu width={props.width} initialSelectedItem={props.initialSelectedItem}>\n          {createMenuItems(props.hasIcons).map(buildItem)}\n        </DeprecatedMenu>\n      )}\n    </ComponentStatesTable>\n  </StaticStates>\n);\n",locationsMap:{"menu-item-states":{startLoc:{col:30,line:139},endLoc:{col:1,line:160},startBody:{col:30,line:139},endBody:{col:1,line:160}}}},storySource:{source:"import React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {\n  uploadCloudIcon,\n  extLinkIcon,\n  userIcon,\n  taskContactIcon,\n} from '@workday/canvas-system-icons-web';\nimport {DeprecatedMenu, DeprecatedMenuItem, DeprecatedMenuItemProps} from '../index';\n\n\nconst noop = () => {};\n\nexport default {\n  title: 'Testing/Preview/Menu',\n  component: DeprecatedMenu,\n  parameters: {\n    chromatic: {\n      disable: false,\n      diffThreshold: 0.3, // Chrome downsizes images non-deterministically. From testing, 0.28 is the minimum.\n    },\n  },\n};\n\ninterface StoryMenuItemProps extends Omit<DeprecatedMenuItemProps, 'role'> {\n  text: React.ReactNode;\n}\n\nconst createMenuItems = (hasIcons?: boolean, isFocused?: boolean): StoryMenuItemProps[] => {\n  return [\n    {\n      text: `First Item`,\n      icon: hasIcons ? uploadCloudIcon : undefined,\n      isFocused: isFocused,\n    },\n    {\n      text: `Second Item (with a really really really long label)`,\n      icon: undefined,\n    },\n    {\n      text: `Third Item (with a really really really long label)`,\n      icon: hasIcons ? uploadCloudIcon : undefined,\n    },\n    {\n      text: `Fourth Item (with a really really really long label)`,\n      icon: hasIcons ? uploadCloudIcon : undefined,\n      secondaryIcon: hasIcons ? taskContactIcon : undefined,\n    },\n    {\n      text: `Fifth Item (disabled)`,\n      icon: undefined,\n      secondaryIcon: hasIcons ? extLinkIcon : undefined,\n      isDisabled: true,\n    },\n    {\n      text: hasIcons ? (\n        ''\n      ) : (\n        <em>\n          Sixth Item (<b>with markup</b>)\n        </em>\n      ),\n      icon: hasIcons ? userIcon : undefined,\n      'aria-label': hasIcons ? `I am a label for screen readers` : undefined,\n    },\n    {\n      text: `Seventh Item (with divider)`,\n      icon: undefined,\n      hasDivider: true,\n    },\n  ];\n};\nconst buildItem = (item: StoryMenuItemProps, index: number) => (\n  <DeprecatedMenuItem\n    key={index}\n    onClick={noop}\n    icon={item.icon}\n    isFocused={item.isFocused}\n    secondaryIcon={item.secondaryIcon}\n    isDisabled={item.isDisabled}\n    hasDivider={item.hasDivider}\n    aria-label={item['aria-label']}\n  >\n    {item.text}\n  </DeprecatedMenuItem>\n);\n\nexport const MenuItemStates = () => (\n  <StaticStates>\n    <ComponentStatesTable\n      rowProps={[\n        {label: 'Default', props: {}},\n        {label: 'With Icons', props: {hasIcons: true}},\n        {label: 'With Icons and Custom Width', props: {hasIcons: true, width: 200}},\n        {\n          label: 'With Icons and Custom Focus',\n          props: {hasIcons: true, initialSelectedItem: 3},\n        },\n      ]}\n      columnProps={[{label: 'Default', props: {}}]}\n    >\n      {props => (\n        <DeprecatedMenu width={props.width} initialSelectedItem={props.initialSelectedItem}>\n          {createMenuItems(props.hasIcons).map(buildItem)}\n        </DeprecatedMenu>\n      )}\n    </ComponentStatesTable>\n  </StaticStates>\n);\n",locationsMap:{"menu-item-states":{startLoc:{col:30,line:88},endLoc:{col:1,line:109},startBody:{col:30,line:88},endBody:{col:1,line:109}}}},chromatic:{disable:!1,diffThreshold:.3}}};const buildItem=(item,index)=>(0,_jsxRuntime.jsx)(_index.DeprecatedMenuItem,{onClick:noop,icon:item.icon,isFocused:item.isFocused,secondaryIcon:item.secondaryIcon,isDisabled:item.isDisabled,hasDivider:item.hasDivider,"aria-label":item["aria-label"],children:item.text},index);buildItem.displayName="buildItem";const MenuItemStates=()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Default",props:{}},{label:"With Icons",props:{hasIcons:!0}},{label:"With Icons and Custom Width",props:{hasIcons:!0,width:200}},{label:"With Icons and Custom Focus",props:{hasIcons:!0,initialSelectedItem:3}}],columnProps:[{label:"Default",props:{}}],children:props=>{return(0,_jsxRuntime.jsx)(_index.DeprecatedMenu,{width:props.width,initialSelectedItem:props.initialSelectedItem,children:(hasIcons=props.hasIcons,[{text:"First Item",icon:hasIcons?_canvasSystemIconsWeb.uploadCloudIcon:void 0,isFocused},{text:"Second Item (with a really really really long label)",icon:void 0},{text:"Third Item (with a really really really long label)",icon:hasIcons?_canvasSystemIconsWeb.uploadCloudIcon:void 0},{text:"Fourth Item (with a really really really long label)",icon:hasIcons?_canvasSystemIconsWeb.uploadCloudIcon:void 0,secondaryIcon:hasIcons?_canvasSystemIconsWeb.taskContactIcon:void 0},{text:"Fifth Item (disabled)",icon:void 0,secondaryIcon:hasIcons?_canvasSystemIconsWeb.extLinkIcon:void 0,isDisabled:!0},{text:hasIcons?"":(0,_jsxRuntime.jsxs)("em",{children:["Sixth Item (",(0,_jsxRuntime.jsx)("b",{children:"with markup"}),")"]}),icon:hasIcons?_canvasSystemIconsWeb.userIcon:void 0,"aria-label":hasIcons?"I am a label for screen readers":void 0},{text:"Seventh Item (with divider)",icon:void 0,hasDivider:!0}]).map(buildItem)});var hasIcons,isFocused}})});exports.MenuItemStates=MenuItemStates,MenuItemStates.displayName="MenuItemStates",module.exports.__namedExportsOrder=["MenuItemStates"]}}]);