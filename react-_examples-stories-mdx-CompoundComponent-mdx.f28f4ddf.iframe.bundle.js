"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[6102],{"./modules/react/_examples/stories/mdx/CompoundComponent.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_compoundComponent_CustomCard__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/react/_examples/stories/mdx/examples/compoundComponent/CustomCard.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Examples/Compound Component"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-examples",children:"Canvas Kit Examples"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"compound-component",children:"Compound Component"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Component component utilites are a great way to wrap and extend exisitng Canvas Kit Components. This\ncan dramatically simplify state handling and gives you easy access to things like ref forwarding."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["For more complex examples,\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://workday.github.io/canvas-kit/?path=/docs/guides-creating-compound-components--docs",target:"_blank",rel:"nofollow noopener noreferrer",children:"see the creating-compound-components guide"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_compoundComponent_CustomCard__WEBPACK_IMPORTED_MODULE_5__.B})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/react/_examples/stories/mdx/examples/compoundComponent/CustomCard.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.B=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_card=__webpack_require__("./modules/react/card/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const useCustomCardModel=(0,_common.createModelHook)({defaultConfig:{theme:"dark"}})((config=>{const lightThemeColor=_tokens.colors.frenchVanilla100,darkThemeColor=_tokens.colors.blackPepper300,inverseColor=color=>color===darkThemeColor?lightThemeColor:darkThemeColor,[theme,setTheme]=_react.default.useState(config.theme),[mainColor,setMainColor]=_react.default.useState("dark"===config.theme?darkThemeColor:lightThemeColor),[contrastColor,setContrastColor]=_react.default.useState("dark"===config.theme?lightThemeColor:darkThemeColor);return{state:{theme,mainColor,contrastColor},events:{toggleTheme:()=>{setTheme((currentTheme=>"dark"===currentTheme?"light":"dark")),setMainColor(inverseColor),setContrastColor(inverseColor)}}}})),useCustomCardButton=(0,_common.createElemPropsHook)(useCustomCardModel)((({state,events})=>({colors:{default:{background:state.contrastColor,label:state.mainColor},hover:{},active:{},focus:{},disabled:{}},onClick:()=>events.toggleTheme()}))),CustomCardButton=(0,_common.createSubcomponent)(_button.PrimaryButton)({displayName:"CustomCard.Button",modelHook:useCustomCardModel,elemPropsHook:useCustomCardButton})((({children,...elemProps})=>_react.default.createElement(_button.PrimaryButton,elemProps,children))),useCustomCard=(0,_common.createElemPropsHook)(useCustomCardModel)((({state})=>({backgroundColor:state.mainColor}))),CustomCard=(0,_common.createContainer)(_card.Card)({displayName:"CustomCard",subComponents:{Heading:_card.Card.Heading,Body:_card.Card.Body,Button:CustomCardButton},modelHook:useCustomCardModel,elemPropsHook:useCustomCard})((({theme,children,...elemProps})=>_react.default.createElement(_card.Card,_extends({depth:2},elemProps),children))),Template=()=>{const[icon,setIcon]=_react.default.useState("üåù"),model=useCustomCardModel({onToggleTheme:(_,{theme:previousTheme})=>setIcon("dark"===previousTheme?"üåö":"üåù")}),buttonRef=_react.default.useRef(null);return _react.default.useEffect((()=>{var _buttonRef$current;return null===(_buttonRef$current=buttonRef.current)||void 0===_buttonRef$current?void 0:_buttonRef$current.focus()}),[]),_react.default.createElement(CustomCard,{model},_react.default.createElement(CustomCard.Heading,null,_react.default.createElement(_layout.Box,{color:model.state.contrastColor},"Change your theme ",icon)),_react.default.createElement(CustomCard.Body,null,_react.default.createElement(CustomCard.Button,{ref:buttonRef},"Toggle")))};exports.B=Template,Template.displayName="Template",Template.__RAW__="import React from 'react';\nimport {\n  createContainer,\n  createElemPropsHook,\n  createModelHook,\n  createSubcomponent,\n  ExtractProps,\n} from '@workday/canvas-kit-react/common';\nimport {Card} from '@workday/canvas-kit-react/card';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\nimport {Box} from '@workday/canvas-kit-react/layout';\nimport {colors} from '@workday/canvas-kit-react/tokens';\n\nexport type Theme = 'dark' | 'light';\ninterface CustomCardProps extends ExtractProps<typeof Card> {\n  theme?: Theme;\n}\n\n/**\n * Compound Component Model Hook\n */\nconst useCustomCardModel = createModelHook({\n  defaultConfig: {theme: 'dark' as Theme},\n})(config => {\n  const lightThemeColor = colors.frenchVanilla100;\n  const darkThemeColor = colors.blackPepper300;\n  const inverseColor = color => (color === darkThemeColor ? lightThemeColor : darkThemeColor);\n\n  const [theme, setTheme] = React.useState(config.theme);\n  const [mainColor, setMainColor] = React.useState(\n    config.theme === 'dark' ? darkThemeColor : lightThemeColor\n  );\n  const [contrastColor, setContrastColor] = React.useState(\n    config.theme === 'dark' ? lightThemeColor : darkThemeColor\n  );\n  const state = {theme, mainColor, contrastColor};\n\n  const events = {\n    toggleTheme: () => {\n      setTheme(currentTheme => (currentTheme === 'dark' ? 'light' : 'dark'));\n      setMainColor(inverseColor);\n      setContrastColor(inverseColor);\n    },\n  };\n\n  return {state, events};\n});\n\n/**\n * Subcomponent Hook\n */\nconst useCustomCardButton = createElemPropsHook(useCustomCardModel)(({state, events}) => ({\n  colors: {\n    default: {\n      background: state.contrastColor,\n      label: state.mainColor,\n    },\n    hover: {},\n    active: {},\n    focus: {},\n    disabled: {},\n  },\n  onClick: () => events.toggleTheme(),\n}));\n\n/**\n * Subcomponent Component\n */\nconst CustomCardButton = createSubcomponent(PrimaryButton)({\n  displayName: 'CustomCard.Button',\n  modelHook: useCustomCardModel,\n  elemPropsHook: useCustomCardButton,\n})(({children, ...elemProps}) => {\n  return <PrimaryButton {...elemProps}>{children}</PrimaryButton>;\n});\n\n/**\n * Main Component Hook\n */\nconst useCustomCard = createElemPropsHook(useCustomCardModel)(({state}) => ({\n  backgroundColor: state.mainColor,\n}));\n\n/**\n * Main Component\n */\nconst CustomCard = createContainer(Card)({\n  displayName: 'CustomCard',\n  subComponents: {\n    Heading: Card.Heading,\n    Body: Card.Body,\n    Button: CustomCardButton,\n  },\n  modelHook: useCustomCardModel,\n  elemPropsHook: useCustomCard,\n})<CustomCardProps>(({theme, children, ...elemProps}) => {\n  return (\n    <Card depth={2} {...elemProps}>\n      {children}\n    </Card>\n  );\n});\n\n/**\n * Usage\n */\nexport const Template = () => {\n  const [icon, setIcon] = React.useState('üåù');\n  const model = useCustomCardModel({\n    onToggleTheme: (_, {theme: previousTheme}) => setIcon(previousTheme === 'dark' ? 'üåö' : 'üåù'),\n  });\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\n  React.useEffect(() => buttonRef.current?.focus(), []);\n\n  return (\n    <CustomCard model={model}>\n      <CustomCard.Heading>\n        <Box color={model.state.contrastColor}>Change your theme {icon}</Box>\n      </CustomCard.Heading>\n      <CustomCard.Body>\n        <CustomCard.Button ref={buttonRef}>Toggle</CustomCard.Button>\n      </CustomCard.Body>\n    </CustomCard>\n  );\n};\n"}}]);