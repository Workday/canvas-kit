"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8723],{"./modules/react/_examples/stories/mdx/TablesAdvanced.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_Table_WithSelectableRows__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/react/_examples/stories/mdx/examples/Table/WithSelectableRows.tsx"),_examples_Table_WithExpandableRows__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/react/_examples/stories/mdx/examples/Table/WithExpandableRows.tsx"),_examples_Table_WithSortableColumnHeaders__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./modules/react/_examples/stories/mdx/examples/Table/WithSortableColumnHeaders.tsx");function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p",code:"code",h3:"h3",ul:"ul",li:"li"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Examples/Advanced Tables"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"advanced-table-examples",children:"Advanced Table Examples"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Out of the box, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Table"})," is a lightweight component with a high degree of flexibility, but not much\nfunctionality outside of providing a basic table layout. This leaves a gap for developers to\nimplement common features, such as selecting rows and sorting columns, on top of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Table"})," to meet\ntheir specific application needs. During the development process, it's often unclear how to\nimplement these features in an accessible way. In an effort to reduce that gap and increase clarity,\nwe've documented several advanced examples below to communicate the accessibility nuances alongside\ntangible code snippets."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"expandable-rows",children:"Expandable Rows"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Expandable Rows combines the likes of an accordion with tabular data tables. Column 1 renders icon\nbuttons with 2 states, a collapsed and expanded state. A new row that spans the entire width of the\ntable is added to the table just after the expanded row."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-expanded"})," property is added to the button to communicate this state to screen reader\nusers."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["A Canvas accessible ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Tooltip"})," component is used to assign names to each icon button based on the\nmost useful value in the row. In this example, we combined the car make and model together. This\nallows everyone to view the name of the checkboxes by hovering the mouse or focusing with the\nkeyboard."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["The expanded row uses ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"colspan"})," to span the entire width of the table and support screen readers.\nThis space provides flexibility to show headings, lists, and other structured content for the\ntable row above."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"There is no explicit relationship between a row of cells, and the spanned content below it. The\nspanned content is assumed to belong to the row of cells above it, based on established accordion\npatterns and logical reading order of content rendered to the screen."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Outlining hierarchy in a data table is not supported for screen readers in this example."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Table_WithExpandableRows__WEBPACK_IMPORTED_MODULE_5__._}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"selectable-rows",children:"Selectable Rows"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Developed by the Workday accessibility team, using a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Checkbox"}),' labeled "Select All" inside of a\ntable column header can be a confusing experience for screen reader users. Screen readers will\nautomatically announce the "Select All" column header each time users are reading any cell in\ncolumn 1. For instance, the ',(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Checkbox"})," in row 4 is decidedly not going to select all of the rows.\nHere is what we did about it:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["We intentionally rendered row 1, column 1 as a standard ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<td>"}),' element so screen readers won\'t\nautomatically announce "Select All" while reading cells in column 1.']}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:['Our research found that VoiceOver (MacOS v12.7, Safari v17.1) persistently announce "Select All"\ndespite using the ',(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<td>"})," element because of the optional ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<thead>"})," element in the table. We\nomitted the optional ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<thead>"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<tbody>"})," elements from this example for that reason."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["We used Canvas' accessible ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Tooltip"})," component to assign names to each Checkbox based on the most\nuseful value in the row, the topping name. This allows everyone to view the name of the checkboxes\nby hovering the mouse or focusing with the keyboard."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["We rendered the cells in column 2 as the row headers for the table, enabling screen readers to\nautomatically announce the topping name even while reading down the Amounts in column 3. When we\nrendered column 1 as row headers, then reading down column 2 (Topping Name) sounded redundant\nbecause the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Checkbox"})," names in column 1 are identical to the Topping Name in column 2."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Table_WithSelectableRows__WEBPACK_IMPORTED_MODULE_6__.G}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"sortable-column-headers",children:"Sortable Column Headers"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The challenge in this example is, how will we clearly communicate the complexity of the column\nheaders to screen readers and keep the tabular data easy to understand? The column headers must\ndescribe the column name, the current sort state of the column, they are interactive (a button), and\ninstructions about how the column will be sorted next. When screen reader users are focused on the\ntabular data cells, instructions about how the column will be sorted next is probably not relevant,\ndistracting, and makes it harder to understand the data."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-sort"})," property has been initialized to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"none"})," on each of the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<th>"})," elements; this value\nis updated to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"ascending"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"descending"})," to reflect the current state."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["A ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<button>"})," element describing the column name is used inside of the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<th>"})," column header."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"describe"})," variant of the Canvas ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Tooltip"})," component is applied to the button in the column\nheader. This is used to describe how the column will be sorted after interaction and applied to\nthe accessible description of the button with the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-describedby"})," property. This way screen\nreaders won't read the longer description of the column headers automatically while focusing on\nthe tabular data below."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-sort"})," property may not reliably provide the current sort state of the column to users\nfocused on the tabular data in the table. It may be more reliable to use an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-label"})," string on\nthe button that describes the column name and sort state together."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Table_WithSortableColumnHeaders__WEBPACK_IMPORTED_MODULE_7__.dD})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/react/_examples/stories/mdx/examples/Table/WithExpandableRows.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports._=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_statusIndicator=__webpack_require__("./modules/preview-react/status-indicator/index.ts"),_table=__webpack_require__("./modules/react/table/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");const headingID=(0,_common.generateUniqueId)(),autoData=[{id:(0,_common.generateUniqueId)(),brand:"Porsche",model:"992 911 GT3",year:"2022",price:"Starts at $160,000",engine:"4.0L Flat 6",transmission:"PDK or 7-Speed Manual",horsepower:"502hp",torque:"346 lb-ft",curbWeight:"3,164 lbs",orderStatus:"Order Placed"},{id:(0,_common.generateUniqueId)(),brand:"BMW",model:"M5 Competition",year:"2018",price:"Starts at $105,000",engine:"Twin-Turbo 4.4L V8",transmission:"Automatic",horsepower:"627hp",torque:"553 lb-ft",curbWeight:"4,345 lbs",orderStatus:"Order Fulfilled"},{id:(0,_common.generateUniqueId)(),brand:"Audi",model:"R8",year:"2022",price:"Starts at $148,000",engine:"5.2L V10",transmission:"Automatic",horsepower:"562hp",torque:"408 lb-ft",curbWeight:"3,594 lbs",orderStatus:"Order Fulfilled"},{id:(0,_common.generateUniqueId)(),brand:"Lotus",model:"Emira",year:"2023",price:"Starts at $78,000",engine:"Supercharged 3.5L V6",transmission:"Automatic or 6-Speed Manual",horsepower:"400hp",torque:"317 lb-ft",curbWeight:"3520 lbs",orderStatus:"Shipped: In Transit"},{id:(0,_common.generateUniqueId)(),brand:"Toyota",model:"Supra",year:"1998",price:"$40,000 - $80,000",engine:"3.0L Inline 6",transmission:"Automatic or 6-Speed Manual",horsepower:"320hp",torque:"315 lb-ft",curbWeight:"3,599 lbs",orderStatus:"Delivered"},{id:(0,_common.generateUniqueId)(),brand:"Nissan",model:"Skyline GT-R",year:"1994",price:"$45,000 - $90,000",engine:"2.6L Twin-Turbo Inline 6",transmission:"5-Speed Manual",horsepower:"276hp",torque:"260 lb-ft",curbWeight:"3,153 lbs",orderStatus:"Delivered"}],expandableSectionStyles=(0,_canvasKitStyling.createStyles)({alignItems:"flex-start",display:"flex",gap:_canvasTokensWeb.system.space.x4,padding:_canvasTokensWeb.system.space.x8}),expandableHeadingStyles=(0,_canvasKitStyling.createStyles)({margin:0,fontWeight:_canvasTokensWeb.system.fontWeight.bold}),expandableListStyles=(0,_canvasKitStyling.createStyles)({listStyle:"none",margin:0,padding:0,gap:_canvasTokensWeb.system.space.x2});function ExpandableRow({data}){const[rowExpanded,setRowExpanded]=_react.default.useState(!1);return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_table.Table.Row,{gridTemplateColumns:"4rem repeat(4, 1fr)"},_react.default.createElement(_table.Table.Cell,null,_react.default.createElement(_tooltip.Tooltip,{title:`${data.brand} ${data.model}`},_react.default.createElement(_button.TertiaryButton,{size:"small",icon:rowExpanded?_canvasSystemIconsWeb.chevronDownSmallIcon:_canvasSystemIconsWeb.chevronRightSmallIcon,"aria-expanded":rowExpanded,onClick:()=>setRowExpanded(!rowExpanded)}))),_react.default.createElement(_table.Table.Header,{scope:"row"},data.brand),_react.default.createElement(_table.Table.Cell,null,data.model),_react.default.createElement(_table.Table.Cell,null,data.year),_react.default.createElement(_table.Table.Cell,null,data.price)),rowExpanded&&_react.default.createElement(_table.Table.Row,null,_react.default.createElement(_table.Table.Cell,{colSpan:5,cs:expandableSectionStyles},_react.default.createElement("div",null,_react.default.createElement(_text.Subtext,{as:"h4",size:"large",cs:expandableHeadingStyles},"Status"),_react.default.createElement(_statusIndicator.StatusIndicator,{variant:"blue"},data.orderStatus)),_react.default.createElement("div",null,_react.default.createElement(_text.Subtext,{as:"h4",size:"large",cs:expandableHeadingStyles},"Specifications"),_react.default.createElement("ul",{className:expandableListStyles},_react.default.createElement(_text.Subtext,{as:"li",size:"large"},"Engine: ",data.engine),_react.default.createElement(_text.Subtext,{as:"li",size:"large"},"Transmission: ",data.transmission),_react.default.createElement(_text.Subtext,{as:"li",size:"large"},"Horsepower: ",data.horsepower),_react.default.createElement(_text.Subtext,{as:"li",size:"large"},"Torque: ",data.torque),_react.default.createElement(_text.Subtext,{as:"li",size:"large"},"Curb Weight: ",data.curbWeight))))))}const ExpandableRows=()=>_react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_text.Heading,{as:"h3",id:headingID,size:"small"},"Showroom Inventory"),_react.default.createElement(_table.Table,{"aria-labelledby":headingID},_react.default.createElement(_table.Table.Head,null,_react.default.createElement(_table.Table.Row,{gridTemplateColumns:"4rem repeat(4, 1fr)"},_react.default.createElement(_table.Table.Cell,null),_react.default.createElement(_table.Table.Header,{scope:"col"},"Make"),_react.default.createElement(_table.Table.Header,{scope:"col"},"Model"),_react.default.createElement(_table.Table.Header,{scope:"col"},"Year"),_react.default.createElement(_table.Table.Header,{scope:"col"},"Price"))),_react.default.createElement(_table.Table.Body,null,autoData.map((item=>_react.default.createElement(ExpandableRow,{key:item.id,data:item}))))));exports._=ExpandableRows,ExpandableRows.__RAW__="import React from 'react';\n\nimport {StatusIndicator} from '@workday/canvas-kit-preview-react/status-indicator';\nimport {Table} from '@workday/canvas-kit-react/table';\nimport {TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {generateUniqueId} from '@workday/canvas-kit-react/common';\nimport {Heading, Subtext} from '@workday/canvas-kit-react/text';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {createStyles} from '@workday/canvas-kit-styling';\n\nimport {chevronDownSmallIcon, chevronRightSmallIcon} from '@workday/canvas-system-icons-web';\nimport {system} from '@workday/canvas-tokens-web';\n\ninterface AutoData {\n  id: string;\n  brand: string;\n  model: string;\n  year: string;\n  price: string;\n  engine: string;\n  transmission: string;\n  horsepower: string;\n  torque: string;\n  curbWeight: string;\n  orderStatus: string;\n}\n\nconst headingID = generateUniqueId();\nconst autoData: AutoData[] = [\n  {\n    id: generateUniqueId(),\n    brand: 'Porsche',\n    model: '992 911 GT3',\n    year: '2022',\n    price: 'Starts at $160,000',\n    engine: '4.0L Flat 6',\n    transmission: 'PDK or 7-Speed Manual',\n    horsepower: '502hp',\n    torque: '346 lb-ft',\n    curbWeight: '3,164 lbs',\n    orderStatus: 'Order Placed',\n  },\n  {\n    id: generateUniqueId(),\n    brand: 'BMW',\n    model: 'M5 Competition',\n    year: '2018',\n    price: 'Starts at $105,000',\n    engine: 'Twin-Turbo 4.4L V8',\n    transmission: 'Automatic',\n    horsepower: '627hp',\n    torque: '553 lb-ft',\n    curbWeight: '4,345 lbs',\n    orderStatus: 'Order Fulfilled',\n  },\n  {\n    id: generateUniqueId(),\n    brand: 'Audi',\n    model: 'R8',\n    year: '2022',\n    price: 'Starts at $148,000',\n    engine: '5.2L V10',\n    transmission: 'Automatic',\n    horsepower: '562hp',\n    torque: '408 lb-ft',\n    curbWeight: '3,594 lbs',\n    orderStatus: 'Order Fulfilled',\n  },\n  {\n    id: generateUniqueId(),\n    brand: 'Lotus',\n    model: 'Emira',\n    year: '2023',\n    price: 'Starts at $78,000',\n    engine: 'Supercharged 3.5L V6',\n    transmission: 'Automatic or 6-Speed Manual',\n    horsepower: '400hp',\n    torque: '317 lb-ft',\n    curbWeight: '3520 lbs',\n    orderStatus: 'Shipped: In Transit',\n  },\n  {\n    id: generateUniqueId(),\n    brand: 'Toyota',\n    model: 'Supra',\n    year: '1998',\n    price: '$40,000 - $80,000',\n    engine: '3.0L Inline 6',\n    transmission: 'Automatic or 6-Speed Manual',\n    horsepower: '320hp',\n    torque: '315 lb-ft',\n    curbWeight: '3,599 lbs',\n    orderStatus: 'Delivered',\n  },\n  {\n    id: generateUniqueId(),\n    brand: 'Nissan',\n    model: 'Skyline GT-R',\n    year: '1994',\n    price: '$45,000 - $90,000',\n    engine: '2.6L Twin-Turbo Inline 6',\n    transmission: '5-Speed Manual',\n    horsepower: '276hp',\n    torque: '260 lb-ft',\n    curbWeight: '3,153 lbs',\n    orderStatus: 'Delivered',\n  },\n];\n\ninterface RowProps {\n  data: AutoData;\n}\n\nconst expandableSectionStyles = createStyles({\n  alignItems: 'flex-start',\n  display: 'flex',\n  gap: system.space.x4,\n  padding: system.space.x8,\n});\n\nconst expandableHeadingStyles = createStyles({\n  margin: 0,\n  fontWeight: system.fontWeight.bold,\n});\n\nconst expandableListStyles = createStyles({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  gap: system.space.x2,\n});\n\nfunction ExpandableRow({data}: RowProps) {\n  const [rowExpanded, setRowExpanded] = React.useState(false);\n\n  return (\n    <>\n      <Table.Row gridTemplateColumns=\"4rem repeat(4, 1fr)\">\n        <Table.Cell>\n          <Tooltip title={`${data.brand} ${data.model}`}>\n            <TertiaryButton\n              size=\"small\"\n              icon={rowExpanded ? chevronDownSmallIcon : chevronRightSmallIcon}\n              aria-expanded={rowExpanded}\n              onClick={() => setRowExpanded(!rowExpanded)}\n            />\n          </Tooltip>\n        </Table.Cell>\n        <Table.Header scope=\"row\">{data.brand}</Table.Header>\n        <Table.Cell>{data.model}</Table.Cell>\n        <Table.Cell>{data.year}</Table.Cell>\n        <Table.Cell>{data.price}</Table.Cell>\n      </Table.Row>\n      {rowExpanded && (\n        <Table.Row>\n          <Table.Cell colSpan={5} cs={expandableSectionStyles}>\n            <div>\n              <Subtext as=\"h4\" size=\"large\" cs={expandableHeadingStyles}>\n                Status\n              </Subtext>\n              <StatusIndicator variant=\"blue\">{data.orderStatus}</StatusIndicator>\n            </div>\n            <div>\n              <Subtext as=\"h4\" size=\"large\" cs={expandableHeadingStyles}>\n                Specifications\n              </Subtext>\n              <ul className={expandableListStyles}>\n                <Subtext as=\"li\" size=\"large\">\n                  Engine: {data.engine}\n                </Subtext>\n                <Subtext as=\"li\" size=\"large\">\n                  Transmission: {data.transmission}\n                </Subtext>\n                <Subtext as=\"li\" size=\"large\">\n                  Horsepower: {data.horsepower}\n                </Subtext>\n                <Subtext as=\"li\" size=\"large\">\n                  Torque: {data.torque}\n                </Subtext>\n                <Subtext as=\"li\" size=\"large\">\n                  Curb Weight: {data.curbWeight}\n                </Subtext>\n              </ul>\n            </div>\n          </Table.Cell>\n        </Table.Row>\n      )}\n    </>\n  );\n}\n\nexport const ExpandableRows = () => {\n  return (\n    <>\n      <Heading as=\"h3\" id={headingID} size=\"small\">\n        Showroom Inventory\n      </Heading>\n      <Table aria-labelledby={headingID}>\n        <Table.Head>\n          <Table.Row gridTemplateColumns=\"4rem repeat(4, 1fr)\">\n            <Table.Cell></Table.Cell>\n            <Table.Header scope=\"col\">Make</Table.Header>\n            <Table.Header scope=\"col\">Model</Table.Header>\n            <Table.Header scope=\"col\">Year</Table.Header>\n            <Table.Header scope=\"col\">Price</Table.Header>\n          </Table.Row>\n        </Table.Head>\n        <Table.Body>\n          {autoData.map(item => (\n            <ExpandableRow key={item.id} data={item} />\n          ))}\n        </Table.Body>\n      </Table>\n    </>\n  );\n};\n"},"./modules/react/_examples/stories/mdx/examples/Table/WithSelectableRows.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.G=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_table=__webpack_require__("./modules/react/table/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_checkbox=__webpack_require__("./modules/react/checkbox/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");const selectableRowStencil=(0,_canvasKitStyling.createStencil)({base:{gridTemplateColumns:"3.5rem repeat(2, 1fr)",transition:"background-color 200ms"},modifiers:{isSelected:{true:{backgroundColor:_canvasTokensWeb.base.blueberry100}}}}),tableHeaderStyles=(0,_canvasKitStyling.createStyles)({backgroundColor:_canvasTokensWeb.base.soap100}),tableCellStyles=(0,_canvasKitStyling.createStyles)({backgroundColor:"transparent"}),SelectableRow=(0,_common.createComponent)("tr")({displayName:"SelectableRow",Component:({onSelect,rowData})=>_react.default.createElement(_table.Table.Row,{cs:selectableRowStencil({isSelected:rowData.checked})},_react.default.createElement(_table.Table.Cell,{cs:tableCellStyles},_react.default.createElement(_tooltip.Tooltip,{title:rowData.name},_react.default.createElement(_checkbox.Checkbox,{checked:rowData.checked,onChange:onSelect}))),_react.default.createElement(_table.Table.Cell,{cs:tableCellStyles,scope:"row"},rowData.name),_react.default.createElement(_table.Table.Cell,{cs:tableCellStyles},rowData.amount))}),pizzaToppingData=[{name:"Pepperoni",amount:"2.5 oz.",checked:!1},{name:"Mozzarella",amount:"5 oz.",checked:!1},{name:"Basil",amount:"10 Leaves",checked:!1},{name:"Roasted Red Peppers",amount:"3 oz.",checked:!1},{name:"Mushrooms",amount:"2 oz.",checked:!1}],headingID=(0,_common.generateUniqueId)(),SelectableRows=()=>{const[selectAllState,setSelectAllState]=_react.default.useState("unchecked"),[toppings,setToppings]=_react.default.useState(pizzaToppingData);return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_text.Heading,{as:"h3",id:headingID,size:"small"},"Select your pizza toppings"),_react.default.createElement(_table.Table,{"aria-labelledby":headingID},_react.default.createElement(_table.Table.Row,{gridTemplateColumns:"3.5rem repeat(2, 1fr)"},_react.default.createElement(_table.Table.Cell,{cs:tableHeaderStyles},_react.default.createElement(_tooltip.Tooltip,{title:"Select All"},_react.default.createElement(_checkbox.Checkbox,{checked:"checked"===selectAllState,indeterminate:"indeterminate"===selectAllState,onChange:()=>{if("checked"===selectAllState||"indeterminate"===selectAllState){setSelectAllState("unchecked");const updatedToppingData=toppings.map((topping=>({...topping,checked:!1})));setToppings(updatedToppingData)}if("unchecked"===selectAllState){setSelectAllState("checked");const updatedToppingData=toppings.map((topping=>({...topping,checked:!0})));setToppings(updatedToppingData)}}}))),_react.default.createElement(_table.Table.Header,{scope:"col",cs:tableHeaderStyles},"Toppings"),_react.default.createElement(_table.Table.Header,{scope:"col",cs:tableHeaderStyles},"Amount")),_react.default.createElement(_table.Table.Body,null,toppings.map((rowData=>_react.default.createElement(SelectableRow,{key:rowData.name,rowData,onSelect:()=>(name=>{const updatedToppings=toppings.map((topping=>topping.name===name?{...topping,checked:!topping.checked}:topping));setToppings(updatedToppings);const selectedToppings=updatedToppings.filter((topping=>!0===topping.checked));0===selectedToppings.length?setSelectAllState("unchecked"):selectedToppings.length===updatedToppings.length?setSelectAllState("checked"):setSelectAllState("indeterminate")})(rowData.name)}))))))};exports.G=SelectableRows,SelectableRows.__RAW__="import React from 'react';\n\nimport {Table} from '@workday/canvas-kit-react/table';\nimport {Heading} from '@workday/canvas-kit-react/text';\nimport {Checkbox} from '@workday/canvas-kit-react/checkbox';\nimport {createComponent, generateUniqueId} from '@workday/canvas-kit-react/common';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {createStencil, createStyles} from '@workday/canvas-kit-styling';\nimport {base} from '@workday/canvas-tokens-web';\n\nconst selectableRowStencil = createStencil({\n  base: {\n    gridTemplateColumns: '3.5rem repeat(2, 1fr)',\n    transition: 'background-color 200ms',\n  },\n  modifiers: {\n    isSelected: {\n      true: {\n        backgroundColor: base.blueberry100,\n      },\n    },\n  },\n});\n\nconst tableHeaderStyles = createStyles({\n  backgroundColor: base.soap100,\n});\n\nconst tableCellStyles = createStyles({\n  backgroundColor: 'transparent',\n});\n\ninterface SelectableRowProps {\n  onSelect?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  rowData: PizzaTopping;\n}\n\nconst SelectableRow = createComponent('tr')({\n  displayName: 'SelectableRow',\n  Component: ({onSelect, rowData}: SelectableRowProps) => {\n    return (\n      <Table.Row cs={selectableRowStencil({isSelected: rowData.checked})}>\n        <Table.Cell cs={tableCellStyles}>\n          <Tooltip title={rowData.name}>\n            <Checkbox checked={rowData.checked} onChange={onSelect} />\n          </Tooltip>\n        </Table.Cell>\n        <Table.Cell cs={tableCellStyles} scope=\"row\">\n          {rowData.name}\n        </Table.Cell>\n        <Table.Cell cs={tableCellStyles}>{rowData.amount}</Table.Cell>\n      </Table.Row>\n    );\n  },\n});\n\ninterface PizzaTopping {\n  name: string;\n  amount: string;\n  checked: boolean;\n}\n\nconst pizzaToppingData: PizzaTopping[] = [\n  {name: 'Pepperoni', amount: '2.5 oz.', checked: false},\n  {name: 'Mozzarella', amount: '5 oz.', checked: false},\n  {name: 'Basil', amount: '10 Leaves', checked: false},\n  {name: 'Roasted Red Peppers', amount: '3 oz.', checked: false},\n  {name: 'Mushrooms', amount: '2 oz.', checked: false},\n];\n\nconst headingID = generateUniqueId();\n\ntype SelectAll = 'checked' | 'indeterminate' | 'unchecked';\n\nexport const SelectableRows = () => {\n  const [selectAllState, setSelectAllState] = React.useState<SelectAll>('unchecked');\n  const [toppings, setToppings] = React.useState(pizzaToppingData);\n\n  const handleToppingChange = (name: string) => {\n    // Toggle the selected item's checked state and update state\n    const updatedToppings = toppings.map(topping => {\n      if (topping.name === name) {\n        return {...topping, checked: !topping.checked};\n      } else {\n        return topping;\n      }\n    });\n    setToppings(updatedToppings);\n\n    // Update the Select All checkbox state\n    const selectedToppings = updatedToppings.filter(topping => topping.checked === true);\n    // If no toppings are selected, set the Select All checkbox to 'unchecked'\n    if (selectedToppings.length === 0) {\n      setSelectAllState('unchecked');\n      // If all toppings are selected, set the Select All checkbox to 'checked'\n    } else if (selectedToppings.length === updatedToppings.length) {\n      setSelectAllState('checked');\n      // Otherwise, set the Select All checkbox to 'indeterminate'\n    } else {\n      setSelectAllState('indeterminate');\n    }\n  };\n\n  const handleSelectAll = () => {\n    // If the Select All checkbox is in a checked or indeterminate state,\n    // update it to 'unchecked', and uncheck all topping checkboxes\n    if (selectAllState === 'checked' || selectAllState === 'indeterminate') {\n      setSelectAllState('unchecked');\n      const updatedToppingData = toppings.map(topping => ({...topping, checked: false}));\n      setToppings(updatedToppingData);\n    }\n    // If the Select All checkbox is in an unchecked state,\n    // update it to 'checked', and check all topping checkboxes\n    if (selectAllState === 'unchecked') {\n      setSelectAllState('checked');\n      const updatedToppingData = toppings.map(topping => ({...topping, checked: true}));\n      setToppings(updatedToppingData);\n    }\n  };\n\n  return (\n    <>\n      <Heading as=\"h3\" id={headingID} size=\"small\">\n        Select your pizza toppings\n      </Heading>\n      <Table aria-labelledby={headingID}>\n        <Table.Row gridTemplateColumns=\"3.5rem repeat(2, 1fr)\">\n          <Table.Cell cs={tableHeaderStyles}>\n            <Tooltip title=\"Select All\">\n              <Checkbox\n                checked={selectAllState === 'checked'}\n                indeterminate={selectAllState === 'indeterminate'}\n                onChange={handleSelectAll}\n              />\n            </Tooltip>\n          </Table.Cell>\n          <Table.Header scope=\"col\" cs={tableHeaderStyles}>\n            Toppings\n          </Table.Header>\n          <Table.Header scope=\"col\" cs={tableHeaderStyles}>\n            Amount\n          </Table.Header>\n        </Table.Row>\n        <Table.Body>\n          {toppings.map(rowData => (\n            <SelectableRow\n              key={rowData.name}\n              rowData={rowData}\n              onSelect={() => handleToppingChange(rowData.name)}\n            />\n          ))}\n        </Table.Body>\n      </Table>\n    </>\n  );\n};\n"},"./modules/react/_examples/stories/mdx/examples/Table/WithSortableColumnHeaders.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.dD=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_table=__webpack_require__("./modules/react/table/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const countryData=[{country:"Australia",capital:"Canberra",population:2569e4},{country:"Bahamas",capital:"Nassau",population:407906},{country:"Canada",capital:"Ottawa",population:3825e4},{country:"Fiji",capital:"Suva",population:924610},{country:"Ghana",capital:"Accra",population:3283e4},{country:"Hong Kong",capital:"City of Victoria",population:7413e3},{country:"India",capital:"New Delhi",population:1408e6},{country:"Ireland",capital:"Dublin",population:5033e3},{country:"Jamaica",capital:"Kingston",population:2828e3},{country:"Kenya",capital:"Nairobi",population:5301e4},{country:"Micronesia",capital:"Palikir",population:113131},{country:"New Zealand",capital:"Wellington",population:5123e3},{country:"Philippines",capital:"Manila",population:1139e5},{country:"Puerto Rico",capital:"San Juan",population:3264e3},{country:"Samoa",capital:"Apia",population:218764},{country:"Singapore",capital:"Singapore",population:5454e3},{country:"Tanzania",capital:"Dodoma",population:6359e4},{country:"United Kingdom",capital:"London",population:6733e4},{country:"United States",capital:"Washington, D.C.",population:3319e5},{country:"Zimbabwe",capital:"Harare",population:1599e4}],initialHeaderRowState={column1SortDirection:"none",column2SortDirection:"none",column3SortDirection:"none"};function getNextSortOrder(sortOrder){return"ascending"===sortOrder?"descending":"ascending"}function headerRowReducer(state,action){switch(action.column){case"Country":return"ascending"===state.column1SortDirection?action.payload.sort(((a,b)=>b.country.localeCompare(a.country))):action.payload.sort(((a,b)=>a.country.localeCompare(b.country))),{...initialHeaderRowState,column1SortDirection:getNextSortOrder(state.column1SortDirection)};case"Capital":return"ascending"===state.column2SortDirection?action.payload.sort(((a,b)=>b.capital.localeCompare(a.capital))):action.payload.sort(((a,b)=>a.capital.localeCompare(b.capital))),{...initialHeaderRowState,column2SortDirection:getNextSortOrder(state.column2SortDirection)};case"Population":return"ascending"===state.column3SortDirection?action.payload.sort(((a,b)=>b.population-a.population)):action.payload.sort(),{...initialHeaderRowState,column3SortDirection:getNextSortOrder(state.column3SortDirection)};default:return initialHeaderRowState}}const getSortIcon=sortOrder=>"ascending"===sortOrder?_canvasSystemIconsWeb.sortUpIcon:"descending"===sortOrder?_canvasSystemIconsWeb.sortDownIcon:void 0,SortableColumnHeader=(0,_common.createComponent)("th")({displayName:"SortableColumnHeader",Component:({label,sortOrder,onSortAction,children,...elemProps},ref)=>_react.default.createElement(_table.Table.Header,_extends({ref,scope:"col","aria-sort":sortOrder},elemProps),_react.default.createElement(_tooltip.Tooltip,{type:"describe",title:`Sort ${getNextSortOrder(sortOrder)}`},_react.default.createElement(_button.TertiaryButton,{icon:getSortIcon(sortOrder),iconPosition:"end",onClick:()=>onSortAction(label)},children)))});const textStyles=(0,_canvasKitStyling.createStyles)({paddingInlineStart:_canvasTokensWeb.system.space.x3}),SortableColumnHeaders=()=>{const[headerRowState,headerRowDispatch]=_react.default.useReducer(headerRowReducer,initialHeaderRowState);function sortColumnHandler(columnName){headerRowDispatch({column:columnName,payload:countryData})}return _react.default.createElement(_table.Table,{maxHeight:"40rem"},_react.default.createElement(_table.Table.Caption,null,"Population Listed by Country (2021)"),_react.default.createElement(_table.Table.Head,null,_react.default.createElement(_table.Table.Row,null,_react.default.createElement(SortableColumnHeader,{label:"Country",sortOrder:headerRowState.column1SortDirection,onSortAction:sortColumnHandler},"Country"),_react.default.createElement(SortableColumnHeader,{label:"Capital",sortOrder:headerRowState.column2SortDirection,onSortAction:sortColumnHandler},"Capital"),_react.default.createElement(SortableColumnHeader,{label:"Population",sortOrder:headerRowState.column3SortDirection,onSortAction:sortColumnHandler},"Population"))),_react.default.createElement(_table.Table.Body,null,countryData.map((item=>_react.default.createElement(_table.Table.Row,{key:item.country},_react.default.createElement(_table.Table.Header,{scope:"row"},_react.default.createElement(_text.Text,{cs:textStyles},item.country)),_react.default.createElement(_table.Table.Cell,null,_react.default.createElement(_text.Text,{cs:textStyles},item.capital)),_react.default.createElement(_table.Table.Cell,null,_react.default.createElement(_text.Text,{cs:textStyles},item.population.toLocaleString())))))))};exports.dD=SortableColumnHeaders,SortableColumnHeaders.displayName="SortableColumnHeaders",SortableColumnHeader.__RAW__="import React from 'react';\n\nimport {createComponent} from '@workday/canvas-kit-react/common';\nimport {Table} from '@workday/canvas-kit-react/table';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {Text} from '@workday/canvas-kit-react/text';\nimport {sortDownIcon, sortUpIcon} from '@workday/canvas-system-icons-web';\nimport {createStyles} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\ninterface CountryData {\n  country: string;\n  capital: string;\n  population: number;\n}\n\nconst countryData: CountryData[] = [\n  {country: 'Australia', capital: 'Canberra', population: 25690000},\n  {country: 'Bahamas', capital: 'Nassau', population: 407906},\n  {country: 'Canada', capital: 'Ottawa', population: 38250000},\n  {country: 'Fiji', capital: 'Suva', population: 924610},\n  {country: 'Ghana', capital: 'Accra', population: 32830000},\n  {country: 'Hong Kong', capital: 'City of Victoria', population: 7413000},\n  {country: 'India', capital: 'New Delhi', population: 1408000000},\n  {country: 'Ireland', capital: 'Dublin', population: 5033000},\n  {country: 'Jamaica', capital: 'Kingston', population: 2828000},\n  {country: 'Kenya', capital: 'Nairobi', population: 53010000},\n  {country: 'Micronesia', capital: 'Palikir', population: 113131},\n  {country: 'New Zealand', capital: 'Wellington', population: 5123000},\n  {country: 'Philippines', capital: 'Manila', population: 113900000},\n  {country: 'Puerto Rico', capital: 'San Juan', population: 3264000},\n  {country: 'Samoa', capital: 'Apia', population: 218764},\n  {country: 'Singapore', capital: 'Singapore', population: 5454000},\n  {country: 'Tanzania', capital: 'Dodoma', population: 63590000},\n  {country: 'United Kingdom', capital: 'London', population: 67330000},\n  {country: 'United States', capital: 'Washington, D.C.', population: 331900000},\n  {country: 'Zimbabwe', capital: 'Harare', population: 15990000},\n];\n\ntype SortOrder = 'ascending' | 'descending' | 'none';\n\ninterface HeaderRowState {\n  column1SortDirection: SortOrder;\n  column2SortDirection: SortOrder;\n  column3SortDirection: SortOrder;\n}\n\ninterface HeaderRowAction {\n  column: 'Country' | 'Capital' | 'Population';\n  payload: CountryData[];\n}\n\nconst initialHeaderRowState: HeaderRowState = {\n  column1SortDirection: 'none',\n  column2SortDirection: 'none',\n  column3SortDirection: 'none',\n};\n\n/**\n * Given the current sort order, return the next sort order\n */\nfunction getNextSortOrder(sortOrder: SortOrder) {\n  return sortOrder === 'ascending' ? 'descending' : 'ascending';\n}\n\nfunction headerRowReducer(state: HeaderRowState, action: HeaderRowAction): HeaderRowState {\n  switch (action.column) {\n    case 'Country':\n      if (state.column1SortDirection === 'ascending') {\n        action.payload.sort((a, b) => b.country.localeCompare(a.country));\n      } else {\n        action.payload.sort((a, b) => a.country.localeCompare(b.country));\n      }\n\n      return {\n        ...initialHeaderRowState,\n        column1SortDirection: getNextSortOrder(state.column1SortDirection),\n      };\n\n    case 'Capital':\n      if (state.column2SortDirection === 'ascending') {\n        action.payload.sort((a, b) => b.capital.localeCompare(a.capital));\n      } else {\n        action.payload.sort((a, b) => a.capital.localeCompare(b.capital));\n      }\n\n      return {\n        ...initialHeaderRowState,\n        column2SortDirection: getNextSortOrder(state.column2SortDirection),\n      };\n\n    case 'Population':\n      if (state.column3SortDirection === 'ascending') {\n        action.payload.sort((a, b) => b.population - a.population);\n      } else {\n        action.payload.sort();\n      }\n\n      return {\n        ...initialHeaderRowState,\n        column3SortDirection: getNextSortOrder(state.column3SortDirection),\n      };\n\n    default:\n      return initialHeaderRowState;\n  }\n}\n\ninterface SortableColumnHeaderProps {\n  label: string;\n  onSortAction: (label: string) => void;\n  children?: React.ReactNode;\n  sortOrder: SortOrder;\n}\n\nconst getSortIcon = (sortOrder?: SortOrder) => {\n  if (sortOrder === 'ascending') {\n    return sortUpIcon;\n  } else if (sortOrder === 'descending') {\n    return sortDownIcon;\n  } else {\n    return undefined;\n  }\n};\n\nexport const SortableColumnHeader = createComponent('th')({\n  displayName: 'SortableColumnHeader',\n  Component: (\n    {label, sortOrder, onSortAction, children, ...elemProps}: SortableColumnHeaderProps,\n    ref\n  ) => {\n    return (\n      <Table.Header ref={ref} scope=\"col\" aria-sort={sortOrder} {...elemProps}>\n        <Tooltip type=\"describe\" title={`Sort ${getNextSortOrder(sortOrder)}`}>\n          <TertiaryButton\n            icon={getSortIcon(sortOrder)}\n            iconPosition=\"end\"\n            onClick={() => onSortAction(label)}\n          >\n            {children}\n          </TertiaryButton>\n        </Tooltip>\n      </Table.Header>\n    );\n  },\n});\n\nconst textStyles = createStyles({\n  paddingInlineStart: system.space.x3,\n});\n\nexport const SortableColumnHeaders = () => {\n  const [headerRowState, headerRowDispatch] = React.useReducer(\n    headerRowReducer,\n    initialHeaderRowState\n  );\n\n  function sortColumnHandler(columnName) {\n    headerRowDispatch({\n      column: columnName,\n      payload: countryData,\n    });\n  }\n\n  return (\n    <Table maxHeight=\"40rem\">\n      <Table.Caption>Population Listed by Country (2021)</Table.Caption>\n      <Table.Head>\n        <Table.Row>\n          <SortableColumnHeader\n            label=\"Country\"\n            sortOrder={headerRowState.column1SortDirection as SortOrder}\n            onSortAction={sortColumnHandler}\n          >\n            Country\n          </SortableColumnHeader>\n          <SortableColumnHeader\n            label=\"Capital\"\n            sortOrder={headerRowState.column2SortDirection as SortOrder}\n            onSortAction={sortColumnHandler}\n          >\n            Capital\n          </SortableColumnHeader>\n          <SortableColumnHeader\n            label=\"Population\"\n            sortOrder={headerRowState.column3SortDirection as SortOrder}\n            onSortAction={sortColumnHandler}\n          >\n            Population\n          </SortableColumnHeader>\n        </Table.Row>\n      </Table.Head>\n      <Table.Body>\n        {countryData.map(item => {\n          return (\n            <Table.Row key={item.country}>\n              <Table.Header scope=\"row\">\n                <Text cs={textStyles}>{item.country}</Text>\n              </Table.Header>\n              <Table.Cell>\n                <Text cs={textStyles}>{item.capital}</Text>\n              </Table.Cell>\n              <Table.Cell>\n                <Text cs={textStyles}>{item.population.toLocaleString()}</Text>\n              </Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    </Table>\n  );\n};\n",SortableColumnHeaders.__RAW__="import React from 'react';\n\nimport {createComponent} from '@workday/canvas-kit-react/common';\nimport {Table} from '@workday/canvas-kit-react/table';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {Text} from '@workday/canvas-kit-react/text';\nimport {sortDownIcon, sortUpIcon} from '@workday/canvas-system-icons-web';\nimport {createStyles} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\ninterface CountryData {\n  country: string;\n  capital: string;\n  population: number;\n}\n\nconst countryData: CountryData[] = [\n  {country: 'Australia', capital: 'Canberra', population: 25690000},\n  {country: 'Bahamas', capital: 'Nassau', population: 407906},\n  {country: 'Canada', capital: 'Ottawa', population: 38250000},\n  {country: 'Fiji', capital: 'Suva', population: 924610},\n  {country: 'Ghana', capital: 'Accra', population: 32830000},\n  {country: 'Hong Kong', capital: 'City of Victoria', population: 7413000},\n  {country: 'India', capital: 'New Delhi', population: 1408000000},\n  {country: 'Ireland', capital: 'Dublin', population: 5033000},\n  {country: 'Jamaica', capital: 'Kingston', population: 2828000},\n  {country: 'Kenya', capital: 'Nairobi', population: 53010000},\n  {country: 'Micronesia', capital: 'Palikir', population: 113131},\n  {country: 'New Zealand', capital: 'Wellington', population: 5123000},\n  {country: 'Philippines', capital: 'Manila', population: 113900000},\n  {country: 'Puerto Rico', capital: 'San Juan', population: 3264000},\n  {country: 'Samoa', capital: 'Apia', population: 218764},\n  {country: 'Singapore', capital: 'Singapore', population: 5454000},\n  {country: 'Tanzania', capital: 'Dodoma', population: 63590000},\n  {country: 'United Kingdom', capital: 'London', population: 67330000},\n  {country: 'United States', capital: 'Washington, D.C.', population: 331900000},\n  {country: 'Zimbabwe', capital: 'Harare', population: 15990000},\n];\n\ntype SortOrder = 'ascending' | 'descending' | 'none';\n\ninterface HeaderRowState {\n  column1SortDirection: SortOrder;\n  column2SortDirection: SortOrder;\n  column3SortDirection: SortOrder;\n}\n\ninterface HeaderRowAction {\n  column: 'Country' | 'Capital' | 'Population';\n  payload: CountryData[];\n}\n\nconst initialHeaderRowState: HeaderRowState = {\n  column1SortDirection: 'none',\n  column2SortDirection: 'none',\n  column3SortDirection: 'none',\n};\n\n/**\n * Given the current sort order, return the next sort order\n */\nfunction getNextSortOrder(sortOrder: SortOrder) {\n  return sortOrder === 'ascending' ? 'descending' : 'ascending';\n}\n\nfunction headerRowReducer(state: HeaderRowState, action: HeaderRowAction): HeaderRowState {\n  switch (action.column) {\n    case 'Country':\n      if (state.column1SortDirection === 'ascending') {\n        action.payload.sort((a, b) => b.country.localeCompare(a.country));\n      } else {\n        action.payload.sort((a, b) => a.country.localeCompare(b.country));\n      }\n\n      return {\n        ...initialHeaderRowState,\n        column1SortDirection: getNextSortOrder(state.column1SortDirection),\n      };\n\n    case 'Capital':\n      if (state.column2SortDirection === 'ascending') {\n        action.payload.sort((a, b) => b.capital.localeCompare(a.capital));\n      } else {\n        action.payload.sort((a, b) => a.capital.localeCompare(b.capital));\n      }\n\n      return {\n        ...initialHeaderRowState,\n        column2SortDirection: getNextSortOrder(state.column2SortDirection),\n      };\n\n    case 'Population':\n      if (state.column3SortDirection === 'ascending') {\n        action.payload.sort((a, b) => b.population - a.population);\n      } else {\n        action.payload.sort();\n      }\n\n      return {\n        ...initialHeaderRowState,\n        column3SortDirection: getNextSortOrder(state.column3SortDirection),\n      };\n\n    default:\n      return initialHeaderRowState;\n  }\n}\n\ninterface SortableColumnHeaderProps {\n  label: string;\n  onSortAction: (label: string) => void;\n  children?: React.ReactNode;\n  sortOrder: SortOrder;\n}\n\nconst getSortIcon = (sortOrder?: SortOrder) => {\n  if (sortOrder === 'ascending') {\n    return sortUpIcon;\n  } else if (sortOrder === 'descending') {\n    return sortDownIcon;\n  } else {\n    return undefined;\n  }\n};\n\nexport const SortableColumnHeader = createComponent('th')({\n  displayName: 'SortableColumnHeader',\n  Component: (\n    {label, sortOrder, onSortAction, children, ...elemProps}: SortableColumnHeaderProps,\n    ref\n  ) => {\n    return (\n      <Table.Header ref={ref} scope=\"col\" aria-sort={sortOrder} {...elemProps}>\n        <Tooltip type=\"describe\" title={`Sort ${getNextSortOrder(sortOrder)}`}>\n          <TertiaryButton\n            icon={getSortIcon(sortOrder)}\n            iconPosition=\"end\"\n            onClick={() => onSortAction(label)}\n          >\n            {children}\n          </TertiaryButton>\n        </Tooltip>\n      </Table.Header>\n    );\n  },\n});\n\nconst textStyles = createStyles({\n  paddingInlineStart: system.space.x3,\n});\n\nexport const SortableColumnHeaders = () => {\n  const [headerRowState, headerRowDispatch] = React.useReducer(\n    headerRowReducer,\n    initialHeaderRowState\n  );\n\n  function sortColumnHandler(columnName) {\n    headerRowDispatch({\n      column: columnName,\n      payload: countryData,\n    });\n  }\n\n  return (\n    <Table maxHeight=\"40rem\">\n      <Table.Caption>Population Listed by Country (2021)</Table.Caption>\n      <Table.Head>\n        <Table.Row>\n          <SortableColumnHeader\n            label=\"Country\"\n            sortOrder={headerRowState.column1SortDirection as SortOrder}\n            onSortAction={sortColumnHandler}\n          >\n            Country\n          </SortableColumnHeader>\n          <SortableColumnHeader\n            label=\"Capital\"\n            sortOrder={headerRowState.column2SortDirection as SortOrder}\n            onSortAction={sortColumnHandler}\n          >\n            Capital\n          </SortableColumnHeader>\n          <SortableColumnHeader\n            label=\"Population\"\n            sortOrder={headerRowState.column3SortDirection as SortOrder}\n            onSortAction={sortColumnHandler}\n          >\n            Population\n          </SortableColumnHeader>\n        </Table.Row>\n      </Table.Head>\n      <Table.Body>\n        {countryData.map(item => {\n          return (\n            <Table.Row key={item.country}>\n              <Table.Header scope=\"row\">\n                <Text cs={textStyles}>{item.country}</Text>\n              </Table.Header>\n              <Table.Cell>\n                <Text cs={textStyles}>{item.capital}</Text>\n              </Table.Cell>\n              <Table.Cell>\n                <Text cs={textStyles}>{item.population.toLocaleString()}</Text>\n              </Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    </Table>\n  );\n};\n"}}]);