"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[2783],{"./modules/react/icon/stories/Icons.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GraphicStory=exports.SystemIconStory=exports.AppletIconStory=exports.AccentIconStory=exports.default=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_canvasAccentIconsWeb=__webpack_require__("./node_modules/@workday/canvas-accent-icons-web/dist/es6/index.js"),_canvasAppletIconsWeb=__webpack_require__("./node_modules/@workday/canvas-applet-icons-web/dist/es6/index.js"),_designAssetsTypes=__webpack_require__("./node_modules/@workday/design-assets-types/index.js"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_index=__webpack_require__("./modules/react/icon/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const graphicExample={name:"badgeAchievement",type:_designAssetsTypes.CanvasIconTypes.Graphic,svg:'<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" class="wd-graphic wd-graphic-badge-achievement" focusable="false" role="presentation" viewBox="0 0 50 50"><g fill="none" fill-rule="nonzero" class="wd-icon-container"><circle cx="25" cy="25" r="25" fill="#FFC943"/><path fill="#FF7A45" d="M17 12h23l-4.373 7.5L40 27H17z"/><path fill="#656464" d="M15 12h2v31h-2z"/><circle cx="16" cy="11.5" r="1.5" fill="#656464"/></g></svg>',filename:"wd-graphic-badge-achievement.svg",category:"",tags:[]};exports.default={parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import * as React from \'react\';\\nimport {shieldIcon} from \'@workday/canvas-accent-icons-web\';\\nimport {benefitsIcon} from \'@workday/canvas-applet-icons-web\';\\nimport {CanvasGraphic, CanvasIconTypes} from \'@workday/design-assets-types\';\\n\\nimport {colors} from \'@workday/canvas-kit-react/tokens\';\\nimport {AccentIcon, AppletIcon, SystemIcon, SystemIconCircle, Graphic} from \'../index\';\\nimport {activityStreamIcon} from \'@workday/canvas-system-icons-web\';\\n\\nimport {base} from \'@workday/canvas-tokens-web\';\\n\\nconst graphicExample: CanvasGraphic = {\\n  name: \'badgeAchievement\',\\n  type: CanvasIconTypes.Graphic,\\n  svg: \'<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"50\\" height=\\"50\\" class=\\"wd-graphic wd-graphic-badge-achievement\\" focusable=\\"false\\" role=\\"presentation\\" viewBox=\\"0 0 50 50\\"><g fill=\\"none\\" fill-rule=\\"nonzero\\" class=\\"wd-icon-container\\"><circle cx=\\"25\\" cy=\\"25\\" r=\\"25\\" fill=\\"#FFC943\\"/><path fill=\\"#FF7A45\\" d=\\"M17 12h23l-4.373 7.5L40 27H17z\\"/><path fill=\\"#656464\\" d=\\"M15 12h2v31h-2z\\"/><circle cx=\\"16\\" cy=\\"11.5\\" r=\\"1.5\\" fill=\\"#656464\\"/></g></svg>\',\\n  filename: \'wd-graphic-badge-achievement.svg\',\\n  category: \'\',\\n  tags: [],\\n};\\n\\nexport default {\\n  title: \'Tokens/Icon\',\\n};\\n\\nexport const AccentIconStory = {\\n  name: \'Accent Icon\',\\n  component: AccentIcon,\\n  parameters: {ReadmePath: \'react/icon\'},\\n  render: () => (\\n    <div className=\\"story\\">\\n      <AccentIcon icon={shieldIcon} />\\n      <AccentIcon icon={shieldIcon} color={colors.pomegranate500} />\\n      <span\\n        style={{\\n          backgroundColor: colors.blueberry500,\\n          display: \'inline-block\',\\n          verticalAlign: \'top\',\\n        }}\\n      >\\n        <AccentIcon icon={shieldIcon} color={colors.frenchVanilla100} transparent={true} />\\n      </span>\\n      <br />\\n      <AccentIcon icon={shieldIcon} size={80} />\\n      <AccentIcon icon={shieldIcon} size={80} shouldMirror={true} />\\n    </div>\\n  ),\\n};\\n\\nexport const AppletIconStory = {\\n  name: \'Applet Icon\',\\n  component: AppletIcon,\\n  render: () => (\\n    <div className=\\"story\\">\\n      <AppletIcon icon={benefitsIcon} />\\n      <AppletIcon icon={benefitsIcon} color={AppletIcon.Colors.Pomegranate} />\\n      <br />\\n      <AppletIcon icon={benefitsIcon} size={60} />\\n      <AppletIcon icon={benefitsIcon} size={60} shouldMirror={true} />\\n    </div>\\n  ),\\n};\\n\\nexport const SystemIconStory = {\\n  name: \'System Icon\',\\n  component: SystemIcon,\\n  render: () => (\\n    <div className=\\"story\\">\\n      <SystemIcon icon={activityStreamIcon} />\\n      <SystemIcon icon={activityStreamIcon} color={base.berrySmoothie400} />\\n      <SystemIcon\\n        icon={activityStreamIcon}\\n        color={base.berrySmoothie400}\\n        colorHover={base.berrySmoothie600}\\n      />\\n      <SystemIcon\\n        className=\\"custom-class\\"\\n        icon={activityStreamIcon}\\n        accent={base.frenchVanilla100}\\n        fill={base.blueberry500}\\n        background={base.blueberry500}\\n      />\\n      <br />\\n      <SystemIcon icon={activityStreamIcon} colorHover={base.cinnamon300} />\\n      <SystemIcon\\n        icon={activityStreamIcon}\\n        color={base.blueberry500}\\n        fillHover={base.chiliMango200}\\n        accentHover={base.chiliMango400}\\n      />\\n      <SystemIcon\\n        className=\\"custom-class\\"\\n        icon={activityStreamIcon}\\n        accent={base.frenchVanilla100}\\n        fill={base.blueberry500}\\n        background={base.blueberry500}\\n        fillHover={base.cantaloupe500}\\n        accentHover={base.frenchVanilla100}\\n        backgroundHover={base.cantaloupe500}\\n      />\\n      <br />\\n      <SystemIcon icon={activityStreamIcon} size={48} />\\n      <SystemIconCircle icon={activityStreamIcon} />\\n      <SystemIconCircle icon={activityStreamIcon} shouldMirror={true} />\\n      <SystemIconCircle icon={activityStreamIcon} size={120} shouldMirror={true} />\\n      <SystemIconCircle icon={activityStreamIcon} background={base.blueberry400} />\\n      <SystemIconCircle\\n        icon={activityStreamIcon}\\n        background={base.blueberry400}\\n        shouldMirror={true}\\n      />\\n    </div>\\n  ),\\n};\\n\\nexport const GraphicStory = {\\n  name: \'Graphic\',\\n  component: Graphic,\\n  render: () => (\\n    <div className=\\"story\\">\\n      <Graphic src={graphicExample} />\\n      <br />\\n      <Graphic src={graphicExample} width={120} />\\n      <div style={{width: 100}}>\\n        <Graphic src={graphicExample} grow={true} />\\n      </div>\\n      <div style={{width: 400}}>\\n        <Graphic src={graphicExample} grow={true} shouldMirror={true} />\\n      </div>\\n    </div>\\n  ),\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "AccentIconStory": {\n    "startLoc": {\n      "col": 31,\n      "line": 25\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 47\n    },\n    "startBody": {\n      "col": 31,\n      "line": 25\n    },\n    "endBody": {\n      "col": 1,\n      "line": 47\n    }\n  },\n  "AppletIconStory": {\n    "startLoc": {\n      "col": 31,\n      "line": 49\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 61\n    },\n    "startBody": {\n      "col": 31,\n      "line": 49\n    },\n    "endBody": {\n      "col": 1,\n      "line": 61\n    }\n  },\n  "SystemIconStory": {\n    "startLoc": {\n      "col": 31,\n      "line": 63\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 113\n    },\n    "startBody": {\n      "col": 31,\n      "line": 63\n    },\n    "endBody": {\n      "col": 1,\n      "line": 113\n    }\n  },\n  "GraphicStory": {\n    "startLoc": {\n      "col": 28,\n      "line": 115\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 131\n    },\n    "startBody": {\n      "col": 28,\n      "line": 115\n    },\n    "endBody": {\n      "col": 1,\n      "line": 131\n    }\n  }\n};\n    \nimport * as React from \'react\';\nimport {shieldIcon} from \'@workday/canvas-accent-icons-web\';\nimport {benefitsIcon} from \'@workday/canvas-applet-icons-web\';\nimport {CanvasGraphic, CanvasIconTypes} from \'@workday/design-assets-types\';\n\nimport {colors} from \'@workday/canvas-kit-react/tokens\';\nimport {AccentIcon, AppletIcon, SystemIcon, SystemIconCircle, Graphic} from \'../index\';\nimport {activityStreamIcon} from \'@workday/canvas-system-icons-web\';\n\nimport {base} from \'@workday/canvas-tokens-web\';\n\nconst graphicExample: CanvasGraphic = {\n  name: \'badgeAchievement\',\n  type: CanvasIconTypes.Graphic,\n  svg: \'<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" class="wd-graphic wd-graphic-badge-achievement" focusable="false" role="presentation" viewBox="0 0 50 50"><g fill="none" fill-rule="nonzero" class="wd-icon-container"><circle cx="25" cy="25" r="25" fill="#FFC943"/><path fill="#FF7A45" d="M17 12h23l-4.373 7.5L40 27H17z"/><path fill="#656464" d="M15 12h2v31h-2z"/><circle cx="16" cy="11.5" r="1.5" fill="#656464"/></g></svg>\',\n  filename: \'wd-graphic-badge-achievement.svg\',\n  category: \'\',\n  tags: [],\n};\n\nexport default {parameters: {\n  "storySource": {\n    "source": "import * as React from \'react\';\\nimport {shieldIcon} from \'@workday/canvas-accent-icons-web\';\\nimport {benefitsIcon} from \'@workday/canvas-applet-icons-web\';\\nimport {CanvasGraphic, CanvasIconTypes} from \'@workday/design-assets-types\';\\n\\nimport {colors} from \'@workday/canvas-kit-react/tokens\';\\nimport {AccentIcon, AppletIcon, SystemIcon, SystemIconCircle, Graphic} from \'../index\';\\nimport {activityStreamIcon} from \'@workday/canvas-system-icons-web\';\\n\\nimport {base} from \'@workday/canvas-tokens-web\';\\n\\nconst graphicExample: CanvasGraphic = {\\n  name: \'badgeAchievement\',\\n  type: CanvasIconTypes.Graphic,\\n  svg: \'<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"50\\" height=\\"50\\" class=\\"wd-graphic wd-graphic-badge-achievement\\" focusable=\\"false\\" role=\\"presentation\\" viewBox=\\"0 0 50 50\\"><g fill=\\"none\\" fill-rule=\\"nonzero\\" class=\\"wd-icon-container\\"><circle cx=\\"25\\" cy=\\"25\\" r=\\"25\\" fill=\\"#FFC943\\"/><path fill=\\"#FF7A45\\" d=\\"M17 12h23l-4.373 7.5L40 27H17z\\"/><path fill=\\"#656464\\" d=\\"M15 12h2v31h-2z\\"/><circle cx=\\"16\\" cy=\\"11.5\\" r=\\"1.5\\" fill=\\"#656464\\"/></g></svg>\',\\n  filename: \'wd-graphic-badge-achievement.svg\',\\n  category: \'\',\\n  tags: [],\\n};\\n\\nexport default {\\n  title: \'Tokens/Icon\',\\n};\\n\\nexport const AccentIconStory = {\\n  name: \'Accent Icon\',\\n  component: AccentIcon,\\n  parameters: {ReadmePath: \'react/icon\'},\\n  render: () => (\\n    <div className=\\"story\\">\\n      <AccentIcon icon={shieldIcon} />\\n      <AccentIcon icon={shieldIcon} color={colors.pomegranate500} />\\n      <span\\n        style={{\\n          backgroundColor: colors.blueberry500,\\n          display: \'inline-block\',\\n          verticalAlign: \'top\',\\n        }}\\n      >\\n        <AccentIcon icon={shieldIcon} color={colors.frenchVanilla100} transparent={true} />\\n      </span>\\n      <br />\\n      <AccentIcon icon={shieldIcon} size={80} />\\n      <AccentIcon icon={shieldIcon} size={80} shouldMirror={true} />\\n    </div>\\n  ),\\n};\\n\\nexport const AppletIconStory = {\\n  name: \'Applet Icon\',\\n  component: AppletIcon,\\n  render: () => (\\n    <div className=\\"story\\">\\n      <AppletIcon icon={benefitsIcon} />\\n      <AppletIcon icon={benefitsIcon} color={AppletIcon.Colors.Pomegranate} />\\n      <br />\\n      <AppletIcon icon={benefitsIcon} size={60} />\\n      <AppletIcon icon={benefitsIcon} size={60} shouldMirror={true} />\\n    </div>\\n  ),\\n};\\n\\nexport const SystemIconStory = {\\n  name: \'System Icon\',\\n  component: SystemIcon,\\n  render: () => (\\n    <div className=\\"story\\">\\n      <SystemIcon icon={activityStreamIcon} />\\n      <SystemIcon icon={activityStreamIcon} color={base.berrySmoothie400} />\\n      <SystemIcon\\n        icon={activityStreamIcon}\\n        color={base.berrySmoothie400}\\n        colorHover={base.berrySmoothie600}\\n      />\\n      <SystemIcon\\n        className=\\"custom-class\\"\\n        icon={activityStreamIcon}\\n        accent={base.frenchVanilla100}\\n        fill={base.blueberry500}\\n        background={base.blueberry500}\\n      />\\n      <br />\\n      <SystemIcon icon={activityStreamIcon} colorHover={base.cinnamon300} />\\n      <SystemIcon\\n        icon={activityStreamIcon}\\n        color={base.blueberry500}\\n        fillHover={base.chiliMango200}\\n        accentHover={base.chiliMango400}\\n      />\\n      <SystemIcon\\n        className=\\"custom-class\\"\\n        icon={activityStreamIcon}\\n        accent={base.frenchVanilla100}\\n        fill={base.blueberry500}\\n        background={base.blueberry500}\\n        fillHover={base.cantaloupe500}\\n        accentHover={base.frenchVanilla100}\\n        backgroundHover={base.cantaloupe500}\\n      />\\n      <br />\\n      <SystemIcon icon={activityStreamIcon} size={48} />\\n      <SystemIconCircle icon={activityStreamIcon} />\\n      <SystemIconCircle icon={activityStreamIcon} shouldMirror={true} />\\n      <SystemIconCircle icon={activityStreamIcon} size={120} shouldMirror={true} />\\n      <SystemIconCircle icon={activityStreamIcon} background={base.blueberry400} />\\n      <SystemIconCircle\\n        icon={activityStreamIcon}\\n        background={base.blueberry400}\\n        shouldMirror={true}\\n      />\\n    </div>\\n  ),\\n};\\n\\nexport const GraphicStory = {\\n  name: \'Graphic\',\\n  component: Graphic,\\n  render: () => (\\n    <div className=\\"story\\">\\n      <Graphic src={graphicExample} />\\n      <br />\\n      <Graphic src={graphicExample} width={120} />\\n      <div style={{width: 100}}>\\n        <Graphic src={graphicExample} grow={true} />\\n      </div>\\n      <div style={{width: 400}}>\\n        <Graphic src={graphicExample} grow={true} shouldMirror={true} />\\n      </div>\\n    </div>\\n  ),\\n};\\n",\n    "locationsMap": {\n      "accent-icon-story": {\n        "startLoc": {\n          "col": 31,\n          "line": 25\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 47\n        },\n        "startBody": {\n          "col": 31,\n          "line": 25\n        },\n        "endBody": {\n          "col": 1,\n          "line": 47\n        }\n      },\n      "applet-icon-story": {\n        "startLoc": {\n          "col": 31,\n          "line": 49\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 61\n        },\n        "startBody": {\n          "col": 31,\n          "line": 49\n        },\n        "endBody": {\n          "col": 1,\n          "line": 61\n        }\n      },\n      "system-icon-story": {\n        "startLoc": {\n          "col": 31,\n          "line": 63\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 113\n        },\n        "startBody": {\n          "col": 31,\n          "line": 63\n        },\n        "endBody": {\n          "col": 1,\n          "line": 113\n        }\n      },\n      "graphic-story": {\n        "startLoc": {\n          "col": 28,\n          "line": 115\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 131\n        },\n        "startBody": {\n          "col": 28,\n          "line": 115\n        },\n        "endBody": {\n          "col": 1,\n          "line": 131\n        }\n      }\n    }\n  }\n,},\n  title: \'Tokens/Icon\',\n};\n\nexport const AccentIconStory = {\n  name: \'Accent Icon\',\n  component: AccentIcon,\n  parameters: {ReadmePath: \'react/icon\'},\n  render: () => (\n    <div className="story">\n      <AccentIcon icon={shieldIcon} />\n      <AccentIcon icon={shieldIcon} color={colors.pomegranate500} />\n      <span\n        style={{\n          backgroundColor: colors.blueberry500,\n          display: \'inline-block\',\n          verticalAlign: \'top\',\n        }}\n      >\n        <AccentIcon icon={shieldIcon} color={colors.frenchVanilla100} transparent={true} />\n      </span>\n      <br />\n      <AccentIcon icon={shieldIcon} size={80} />\n      <AccentIcon icon={shieldIcon} size={80} shouldMirror={true} />\n    </div>\n  ),\n};;\n\nexport const AppletIconStory = {\n  name: \'Applet Icon\',\n  component: AppletIcon,\n  render: () => (\n    <div className="story">\n      <AppletIcon icon={benefitsIcon} />\n      <AppletIcon icon={benefitsIcon} color={AppletIcon.Colors.Pomegranate} />\n      <br />\n      <AppletIcon icon={benefitsIcon} size={60} />\n      <AppletIcon icon={benefitsIcon} size={60} shouldMirror={true} />\n    </div>\n  ),\n};;\n\nexport const SystemIconStory = {\n  name: \'System Icon\',\n  component: SystemIcon,\n  render: () => (\n    <div className="story">\n      <SystemIcon icon={activityStreamIcon} />\n      <SystemIcon icon={activityStreamIcon} color={base.berrySmoothie400} />\n      <SystemIcon\n        icon={activityStreamIcon}\n        color={base.berrySmoothie400}\n        colorHover={base.berrySmoothie600}\n      />\n      <SystemIcon\n        className="custom-class"\n        icon={activityStreamIcon}\n        accent={base.frenchVanilla100}\n        fill={base.blueberry500}\n        background={base.blueberry500}\n      />\n      <br />\n      <SystemIcon icon={activityStreamIcon} colorHover={base.cinnamon300} />\n      <SystemIcon\n        icon={activityStreamIcon}\n        color={base.blueberry500}\n        fillHover={base.chiliMango200}\n        accentHover={base.chiliMango400}\n      />\n      <SystemIcon\n        className="custom-class"\n        icon={activityStreamIcon}\n        accent={base.frenchVanilla100}\n        fill={base.blueberry500}\n        background={base.blueberry500}\n        fillHover={base.cantaloupe500}\n        accentHover={base.frenchVanilla100}\n        backgroundHover={base.cantaloupe500}\n      />\n      <br />\n      <SystemIcon icon={activityStreamIcon} size={48} />\n      <SystemIconCircle icon={activityStreamIcon} />\n      <SystemIconCircle icon={activityStreamIcon} shouldMirror={true} />\n      <SystemIconCircle icon={activityStreamIcon} size={120} shouldMirror={true} />\n      <SystemIconCircle icon={activityStreamIcon} background={base.blueberry400} />\n      <SystemIconCircle\n        icon={activityStreamIcon}\n        background={base.blueberry400}\n        shouldMirror={true}\n      />\n    </div>\n  ),\n};;\n\nexport const GraphicStory = {\n  name: \'Graphic\',\n  component: Graphic,\n  render: () => (\n    <div className="story">\n      <Graphic src={graphicExample} />\n      <br />\n      <Graphic src={graphicExample} width={120} />\n      <div style={{width: 100}}>\n        <Graphic src={graphicExample} grow={true} />\n      </div>\n      <div style={{width: 400}}>\n        <Graphic src={graphicExample} grow={true} shouldMirror={true} />\n      </div>\n    </div>\n  ),\n};\n',locationsMap:{"accent-icon-story":{startLoc:{col:31,line:184},endLoc:{col:1,line:206},startBody:{col:31,line:184},endBody:{col:1,line:206}},"applet-icon-story":{startLoc:{col:31,line:208},endLoc:{col:1,line:220},startBody:{col:31,line:208},endBody:{col:1,line:220}},"system-icon-story":{startLoc:{col:31,line:222},endLoc:{col:1,line:272},startBody:{col:31,line:222},endBody:{col:1,line:272}},"graphic-story":{startLoc:{col:28,line:274},endLoc:{col:1,line:290},startBody:{col:28,line:274},endBody:{col:1,line:290}}}},storySource:{source:'import * as React from \'react\';\nimport {shieldIcon} from \'@workday/canvas-accent-icons-web\';\nimport {benefitsIcon} from \'@workday/canvas-applet-icons-web\';\nimport {CanvasGraphic, CanvasIconTypes} from \'@workday/design-assets-types\';\n\nimport {colors} from \'@workday/canvas-kit-react/tokens\';\nimport {AccentIcon, AppletIcon, SystemIcon, SystemIconCircle, Graphic} from \'../index\';\nimport {activityStreamIcon} from \'@workday/canvas-system-icons-web\';\n\nimport {base} from \'@workday/canvas-tokens-web\';\n\nconst graphicExample: CanvasGraphic = {\n  name: \'badgeAchievement\',\n  type: CanvasIconTypes.Graphic,\n  svg: \'<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" class="wd-graphic wd-graphic-badge-achievement" focusable="false" role="presentation" viewBox="0 0 50 50"><g fill="none" fill-rule="nonzero" class="wd-icon-container"><circle cx="25" cy="25" r="25" fill="#FFC943"/><path fill="#FF7A45" d="M17 12h23l-4.373 7.5L40 27H17z"/><path fill="#656464" d="M15 12h2v31h-2z"/><circle cx="16" cy="11.5" r="1.5" fill="#656464"/></g></svg>\',\n  filename: \'wd-graphic-badge-achievement.svg\',\n  category: \'\',\n  tags: [],\n};\n\nexport default {\n  title: \'Tokens/Icon\',\n};\n\nexport const AccentIconStory = {\n  name: \'Accent Icon\',\n  component: AccentIcon,\n  parameters: {ReadmePath: \'react/icon\'},\n  render: () => (\n    <div className="story">\n      <AccentIcon icon={shieldIcon} />\n      <AccentIcon icon={shieldIcon} color={colors.pomegranate500} />\n      <span\n        style={{\n          backgroundColor: colors.blueberry500,\n          display: \'inline-block\',\n          verticalAlign: \'top\',\n        }}\n      >\n        <AccentIcon icon={shieldIcon} color={colors.frenchVanilla100} transparent={true} />\n      </span>\n      <br />\n      <AccentIcon icon={shieldIcon} size={80} />\n      <AccentIcon icon={shieldIcon} size={80} shouldMirror={true} />\n    </div>\n  ),\n};\n\nexport const AppletIconStory = {\n  name: \'Applet Icon\',\n  component: AppletIcon,\n  render: () => (\n    <div className="story">\n      <AppletIcon icon={benefitsIcon} />\n      <AppletIcon icon={benefitsIcon} color={AppletIcon.Colors.Pomegranate} />\n      <br />\n      <AppletIcon icon={benefitsIcon} size={60} />\n      <AppletIcon icon={benefitsIcon} size={60} shouldMirror={true} />\n    </div>\n  ),\n};\n\nexport const SystemIconStory = {\n  name: \'System Icon\',\n  component: SystemIcon,\n  render: () => (\n    <div className="story">\n      <SystemIcon icon={activityStreamIcon} />\n      <SystemIcon icon={activityStreamIcon} color={base.berrySmoothie400} />\n      <SystemIcon\n        icon={activityStreamIcon}\n        color={base.berrySmoothie400}\n        colorHover={base.berrySmoothie600}\n      />\n      <SystemIcon\n        className="custom-class"\n        icon={activityStreamIcon}\n        accent={base.frenchVanilla100}\n        fill={base.blueberry500}\n        background={base.blueberry500}\n      />\n      <br />\n      <SystemIcon icon={activityStreamIcon} colorHover={base.cinnamon300} />\n      <SystemIcon\n        icon={activityStreamIcon}\n        color={base.blueberry500}\n        fillHover={base.chiliMango200}\n        accentHover={base.chiliMango400}\n      />\n      <SystemIcon\n        className="custom-class"\n        icon={activityStreamIcon}\n        accent={base.frenchVanilla100}\n        fill={base.blueberry500}\n        background={base.blueberry500}\n        fillHover={base.cantaloupe500}\n        accentHover={base.frenchVanilla100}\n        backgroundHover={base.cantaloupe500}\n      />\n      <br />\n      <SystemIcon icon={activityStreamIcon} size={48} />\n      <SystemIconCircle icon={activityStreamIcon} />\n      <SystemIconCircle icon={activityStreamIcon} shouldMirror={true} />\n      <SystemIconCircle icon={activityStreamIcon} size={120} shouldMirror={true} />\n      <SystemIconCircle icon={activityStreamIcon} background={base.blueberry400} />\n      <SystemIconCircle\n        icon={activityStreamIcon}\n        background={base.blueberry400}\n        shouldMirror={true}\n      />\n    </div>\n  ),\n};\n\nexport const GraphicStory = {\n  name: \'Graphic\',\n  component: Graphic,\n  render: () => (\n    <div className="story">\n      <Graphic src={graphicExample} />\n      <br />\n      <Graphic src={graphicExample} width={120} />\n      <div style={{width: 100}}>\n        <Graphic src={graphicExample} grow={true} />\n      </div>\n      <div style={{width: 400}}>\n        <Graphic src={graphicExample} grow={true} shouldMirror={true} />\n      </div>\n    </div>\n  ),\n};\n',locationsMap:{"accent-icon-story":{startLoc:{col:31,line:25},endLoc:{col:1,line:47},startBody:{col:31,line:25},endBody:{col:1,line:47}},"applet-icon-story":{startLoc:{col:31,line:49},endLoc:{col:1,line:61},startBody:{col:31,line:49},endBody:{col:1,line:61}},"system-icon-story":{startLoc:{col:31,line:63},endLoc:{col:1,line:113},startBody:{col:31,line:63},endBody:{col:1,line:113}},"graphic-story":{startLoc:{col:28,line:115},endLoc:{col:1,line:131},startBody:{col:28,line:115},endBody:{col:1,line:131}}}}},title:"Tokens/Icon"};const AccentIconStory={name:"Accent Icon",component:_index.AccentIcon,parameters:{ReadmePath:"react/icon"},render:()=>React.createElement("div",{className:"story"},React.createElement(_index.AccentIcon,{icon:_canvasAccentIconsWeb.shieldIcon}),React.createElement(_index.AccentIcon,{icon:_canvasAccentIconsWeb.shieldIcon,color:_tokens.colors.pomegranate500}),React.createElement("span",{style:{backgroundColor:_tokens.colors.blueberry500,display:"inline-block",verticalAlign:"top"}},React.createElement(_index.AccentIcon,{icon:_canvasAccentIconsWeb.shieldIcon,color:_tokens.colors.frenchVanilla100,transparent:!0})),React.createElement("br",null),React.createElement(_index.AccentIcon,{icon:_canvasAccentIconsWeb.shieldIcon,size:80}),React.createElement(_index.AccentIcon,{icon:_canvasAccentIconsWeb.shieldIcon,size:80,shouldMirror:!0}))};exports.AccentIconStory=AccentIconStory;const AppletIconStory={name:"Applet Icon",component:_index.AppletIcon,render:()=>React.createElement("div",{className:"story"},React.createElement(_index.AppletIcon,{icon:_canvasAppletIconsWeb.benefitsIcon}),React.createElement(_index.AppletIcon,{icon:_canvasAppletIconsWeb.benefitsIcon,color:_index.AppletIcon.Colors.Pomegranate}),React.createElement("br",null),React.createElement(_index.AppletIcon,{icon:_canvasAppletIconsWeb.benefitsIcon,size:60}),React.createElement(_index.AppletIcon,{icon:_canvasAppletIconsWeb.benefitsIcon,size:60,shouldMirror:!0}))};exports.AppletIconStory=AppletIconStory;const SystemIconStory={name:"System Icon",component:_index.SystemIcon,render:()=>React.createElement("div",{className:"story"},React.createElement(_index.SystemIcon,{icon:_canvasSystemIconsWeb.activityStreamIcon}),React.createElement(_index.SystemIcon,{icon:_canvasSystemIconsWeb.activityStreamIcon,color:_canvasTokensWeb.base.berrySmoothie400}),React.createElement(_index.SystemIcon,{icon:_canvasSystemIconsWeb.activityStreamIcon,color:_canvasTokensWeb.base.berrySmoothie400,colorHover:_canvasTokensWeb.base.berrySmoothie600}),React.createElement(_index.SystemIcon,{className:"custom-class",icon:_canvasSystemIconsWeb.activityStreamIcon,accent:_canvasTokensWeb.base.frenchVanilla100,fill:_canvasTokensWeb.base.blueberry500,background:_canvasTokensWeb.base.blueberry500}),React.createElement("br",null),React.createElement(_index.SystemIcon,{icon:_canvasSystemIconsWeb.activityStreamIcon,colorHover:_canvasTokensWeb.base.cinnamon300}),React.createElement(_index.SystemIcon,{icon:_canvasSystemIconsWeb.activityStreamIcon,color:_canvasTokensWeb.base.blueberry500,fillHover:_canvasTokensWeb.base.chiliMango200,accentHover:_canvasTokensWeb.base.chiliMango400}),React.createElement(_index.SystemIcon,{className:"custom-class",icon:_canvasSystemIconsWeb.activityStreamIcon,accent:_canvasTokensWeb.base.frenchVanilla100,fill:_canvasTokensWeb.base.blueberry500,background:_canvasTokensWeb.base.blueberry500,fillHover:_canvasTokensWeb.base.cantaloupe500,accentHover:_canvasTokensWeb.base.frenchVanilla100,backgroundHover:_canvasTokensWeb.base.cantaloupe500}),React.createElement("br",null),React.createElement(_index.SystemIcon,{icon:_canvasSystemIconsWeb.activityStreamIcon,size:48}),React.createElement(_index.SystemIconCircle,{icon:_canvasSystemIconsWeb.activityStreamIcon}),React.createElement(_index.SystemIconCircle,{icon:_canvasSystemIconsWeb.activityStreamIcon,shouldMirror:!0}),React.createElement(_index.SystemIconCircle,{icon:_canvasSystemIconsWeb.activityStreamIcon,size:120,shouldMirror:!0}),React.createElement(_index.SystemIconCircle,{icon:_canvasSystemIconsWeb.activityStreamIcon,background:_canvasTokensWeb.base.blueberry400}),React.createElement(_index.SystemIconCircle,{icon:_canvasSystemIconsWeb.activityStreamIcon,background:_canvasTokensWeb.base.blueberry400,shouldMirror:!0}))};exports.SystemIconStory=SystemIconStory;const GraphicStory={name:"Graphic",component:_index.Graphic,render:()=>React.createElement("div",{className:"story"},React.createElement(_index.Graphic,{src:graphicExample}),React.createElement("br",null),React.createElement(_index.Graphic,{src:graphicExample,width:120}),React.createElement("div",{style:{width:100}},React.createElement(_index.Graphic,{src:graphicExample,grow:!0})),React.createElement("div",{style:{width:400}},React.createElement(_index.Graphic,{src:graphicExample,grow:!0,shouldMirror:!0})))};exports.GraphicStory=GraphicStory,module.exports.__namedExportsOrder=["GraphicStory","SystemIconStory","AppletIconStory","AccentIconStory"]}}]);