"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[5063],{"./modules/react/tooltip/stories/testingFallback.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TooltipWithFallbackPlacements=exports.default=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_layout=__webpack_require__("./modules/react/layout/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");var _default={parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\nimport {Grid} from '@workday/canvas-kit-react/layout';\\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\\nimport {SecondaryButton} from '@workday/canvas-kit-react/button';\\nimport {calc, createStyles} from '@workday/canvas-kit-styling';\\nimport {system} from '@workday/canvas-tokens-web';\\n\\nexport default {\\n  title: 'Testing/Popups/Tooltip',\\n  component: Tooltip,\\n};\\n\\nconst grid = createStyles({\\n  gridTemplateAreas: \\\"'topButton topButton''leftButton rightButton''bottomButton bottomButton'\\\",\\n  height: calc.subtract('100vh', system.space.x16),\\n  width: calc.subtract('100vw', system.space.x20),\\n});\\n\\nconst topButton = createStyles({\\n  gridArea: 'topButton',\\n  justifySelf: 'center',\\n});\\nconst rightButton = createStyles({\\n  gridArea: 'rightButton',\\n  justifySelf: 'right',\\n  alignSelf: 'center',\\n});\\nconst bottomButton = createStyles({\\n  gridArea: 'bottomButton',\\n  justifySelf: 'center',\\n  alignSelf: 'end',\\n  bottom: calc.subtract(system.space.x4, system.space.x10),\\n});\\nconst leftButton = createStyles({\\n  gridArea: 'leftButton',\\n  justifySelf: 'left',\\n  alignSelf: 'center',\\n});\\n\\nexport const TooltipWithFallbackPlacements = () => {\\n  return (\\n    <div data-testid=\\\"scroll-area-fallback-placement\\\">\\n      <Grid cs={grid}>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={topButton}>Placement Top</SecondaryButton>\\n        </Tooltip>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          placement=\\\"left\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={leftButton}>Placement Left</SecondaryButton>\\n        </Tooltip>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          placement=\\\"right\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={rightButton}>Placement Right</SecondaryButton>\\n        </Tooltip>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          placement=\\\"bottom\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={bottomButton}>Placement Bottom</SecondaryButton>\\n        </Tooltip>\\n      </Grid>\\n    </div>\\n  );\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"TooltipWithFallbackPlacements\": {\n    \"startLoc\": {\n      \"col\": 45,\n      \"line\": 40\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 90\n    },\n    \"startBody\": {\n      \"col\": 45,\n      \"line\": 40\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 90\n    }\n  }\n};\n    \nimport React from 'react';\nimport {Grid} from '@workday/canvas-kit-react/layout';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {SecondaryButton} from '@workday/canvas-kit-react/button';\nimport {calc, createStyles} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\nimport {Grid} from '@workday/canvas-kit-react/layout';\\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\\nimport {SecondaryButton} from '@workday/canvas-kit-react/button';\\nimport {calc, createStyles} from '@workday/canvas-kit-styling';\\nimport {system} from '@workday/canvas-tokens-web';\\n\\nexport default {\\n  title: 'Testing/Popups/Tooltip',\\n  component: Tooltip,\\n};\\n\\nconst grid = createStyles({\\n  gridTemplateAreas: \\\"'topButton topButton''leftButton rightButton''bottomButton bottomButton'\\\",\\n  height: calc.subtract('100vh', system.space.x16),\\n  width: calc.subtract('100vw', system.space.x20),\\n});\\n\\nconst topButton = createStyles({\\n  gridArea: 'topButton',\\n  justifySelf: 'center',\\n});\\nconst rightButton = createStyles({\\n  gridArea: 'rightButton',\\n  justifySelf: 'right',\\n  alignSelf: 'center',\\n});\\nconst bottomButton = createStyles({\\n  gridArea: 'bottomButton',\\n  justifySelf: 'center',\\n  alignSelf: 'end',\\n  bottom: calc.subtract(system.space.x4, system.space.x10),\\n});\\nconst leftButton = createStyles({\\n  gridArea: 'leftButton',\\n  justifySelf: 'left',\\n  alignSelf: 'center',\\n});\\n\\nexport const TooltipWithFallbackPlacements = () => {\\n  return (\\n    <div data-testid=\\\"scroll-area-fallback-placement\\\">\\n      <Grid cs={grid}>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={topButton}>Placement Top</SecondaryButton>\\n        </Tooltip>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          placement=\\\"left\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={leftButton}>Placement Left</SecondaryButton>\\n        </Tooltip>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          placement=\\\"right\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={rightButton}>Placement Right</SecondaryButton>\\n        </Tooltip>\\n        <Tooltip\\n          type=\\\"describe\\\"\\n          placement=\\\"bottom\\\"\\n          title={\\n            <div>\\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\\n            </div>\\n          }\\n        >\\n          <SecondaryButton cs={bottomButton}>Placement Bottom</SecondaryButton>\\n        </Tooltip>\\n      </Grid>\\n    </div>\\n  );\\n};\\n\",\n    \"locationsMap\": {\n      \"tooltip-with-fallback-placements\": {\n        \"startLoc\": {\n          \"col\": 45,\n          \"line\": 40\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 90\n        },\n        \"startBody\": {\n          \"col\": 45,\n          \"line\": 40\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 90\n        }\n      }\n    }\n  }\n,},\n  title: 'Testing/Popups/Tooltip',\n  component: Tooltip,\n};\n\nconst grid = createStyles({\n  gridTemplateAreas: \"'topButton topButton''leftButton rightButton''bottomButton bottomButton'\",\n  height: calc.subtract('100vh', system.space.x16),\n  width: calc.subtract('100vw', system.space.x20),\n});\n\nconst topButton = createStyles({\n  gridArea: 'topButton',\n  justifySelf: 'center',\n});\nconst rightButton = createStyles({\n  gridArea: 'rightButton',\n  justifySelf: 'right',\n  alignSelf: 'center',\n});\nconst bottomButton = createStyles({\n  gridArea: 'bottomButton',\n  justifySelf: 'center',\n  alignSelf: 'end',\n  bottom: calc.subtract(system.space.x4, system.space.x10),\n});\nconst leftButton = createStyles({\n  gridArea: 'leftButton',\n  justifySelf: 'left',\n  alignSelf: 'center',\n});\n\nexport const TooltipWithFallbackPlacements = () => {\n  return (\n    <div data-testid=\"scroll-area-fallback-placement\">\n      <Grid cs={grid}>\n        <Tooltip\n          type=\"describe\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={topButton}>Placement Top</SecondaryButton>\n        </Tooltip>\n        <Tooltip\n          type=\"describe\"\n          placement=\"left\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={leftButton}>Placement Left</SecondaryButton>\n        </Tooltip>\n        <Tooltip\n          type=\"describe\"\n          placement=\"right\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={rightButton}>Placement Right</SecondaryButton>\n        </Tooltip>\n        <Tooltip\n          type=\"describe\"\n          placement=\"bottom\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={bottomButton}>Placement Bottom</SecondaryButton>\n        </Tooltip>\n      </Grid>\n    </div>\n  );\n};\n",locationsMap:{"tooltip-with-fallback-placements":{startLoc:{col:45,line:91},endLoc:{col:1,line:141},startBody:{col:45,line:91},endBody:{col:1,line:141}}}},storySource:{source:"import React from 'react';\nimport {Grid} from '@workday/canvas-kit-react/layout';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {SecondaryButton} from '@workday/canvas-kit-react/button';\nimport {calc, createStyles} from '@workday/canvas-kit-styling';\nimport {system} from '@workday/canvas-tokens-web';\n\nexport default {\n  title: 'Testing/Popups/Tooltip',\n  component: Tooltip,\n};\n\nconst grid = createStyles({\n  gridTemplateAreas: \"'topButton topButton''leftButton rightButton''bottomButton bottomButton'\",\n  height: calc.subtract('100vh', system.space.x16),\n  width: calc.subtract('100vw', system.space.x20),\n});\n\nconst topButton = createStyles({\n  gridArea: 'topButton',\n  justifySelf: 'center',\n});\nconst rightButton = createStyles({\n  gridArea: 'rightButton',\n  justifySelf: 'right',\n  alignSelf: 'center',\n});\nconst bottomButton = createStyles({\n  gridArea: 'bottomButton',\n  justifySelf: 'center',\n  alignSelf: 'end',\n  bottom: calc.subtract(system.space.x4, system.space.x10),\n});\nconst leftButton = createStyles({\n  gridArea: 'leftButton',\n  justifySelf: 'left',\n  alignSelf: 'center',\n});\n\nexport const TooltipWithFallbackPlacements = () => {\n  return (\n    <div data-testid=\"scroll-area-fallback-placement\">\n      <Grid cs={grid}>\n        <Tooltip\n          type=\"describe\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={topButton}>Placement Top</SecondaryButton>\n        </Tooltip>\n        <Tooltip\n          type=\"describe\"\n          placement=\"left\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={leftButton}>Placement Left</SecondaryButton>\n        </Tooltip>\n        <Tooltip\n          type=\"describe\"\n          placement=\"right\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={rightButton}>Placement Right</SecondaryButton>\n        </Tooltip>\n        <Tooltip\n          type=\"describe\"\n          placement=\"bottom\"\n          title={\n            <div>\n              This is a <em>custom</em> tooltip with <strong>custom HTML</strong>\n            </div>\n          }\n        >\n          <SecondaryButton cs={bottomButton}>Placement Bottom</SecondaryButton>\n        </Tooltip>\n      </Grid>\n    </div>\n  );\n};\n",locationsMap:{"tooltip-with-fallback-placements":{startLoc:{col:45,line:40},endLoc:{col:1,line:90},startBody:{col:45,line:40},endBody:{col:1,line:90}}}}},title:"Testing/Popups/Tooltip",component:_tooltip.Tooltip};exports.default=_default;const grid=(0,_canvasKitStyling.createStyles)({gridTemplateAreas:"'topButton topButton''leftButton rightButton''bottomButton bottomButton'",height:_canvasKitStyling.calc.subtract("100vh",_canvasTokensWeb.system.space.x16),width:_canvasKitStyling.calc.subtract("100vw",_canvasTokensWeb.system.space.x20)}),topButton=(0,_canvasKitStyling.createStyles)({gridArea:"topButton",justifySelf:"center"}),rightButton=(0,_canvasKitStyling.createStyles)({gridArea:"rightButton",justifySelf:"right",alignSelf:"center"}),bottomButton=(0,_canvasKitStyling.createStyles)({gridArea:"bottomButton",justifySelf:"center",alignSelf:"end",bottom:_canvasKitStyling.calc.subtract(_canvasTokensWeb.system.space.x4,_canvasTokensWeb.system.space.x10)}),leftButton=(0,_canvasKitStyling.createStyles)({gridArea:"leftButton",justifySelf:"left",alignSelf:"center"}),TooltipWithFallbackPlacements=()=>_react.default.createElement("div",{"data-testid":"scroll-area-fallback-placement"},_react.default.createElement(_layout.Grid,{cs:grid},_react.default.createElement(_tooltip.Tooltip,{type:"describe",title:_react.default.createElement("div",null,"This is a ",_react.default.createElement("em",null,"custom")," tooltip with ",_react.default.createElement("strong",null,"custom HTML"))},_react.default.createElement(_button.SecondaryButton,{cs:topButton},"Placement Top")),_react.default.createElement(_tooltip.Tooltip,{type:"describe",placement:"left",title:_react.default.createElement("div",null,"This is a ",_react.default.createElement("em",null,"custom")," tooltip with ",_react.default.createElement("strong",null,"custom HTML"))},_react.default.createElement(_button.SecondaryButton,{cs:leftButton},"Placement Left")),_react.default.createElement(_tooltip.Tooltip,{type:"describe",placement:"right",title:_react.default.createElement("div",null,"This is a ",_react.default.createElement("em",null,"custom")," tooltip with ",_react.default.createElement("strong",null,"custom HTML"))},_react.default.createElement(_button.SecondaryButton,{cs:rightButton},"Placement Right")),_react.default.createElement(_tooltip.Tooltip,{type:"describe",placement:"bottom",title:_react.default.createElement("div",null,"This is a ",_react.default.createElement("em",null,"custom")," tooltip with ",_react.default.createElement("strong",null,"custom HTML"))},_react.default.createElement(_button.SecondaryButton,{cs:bottomButton},"Placement Bottom"))));exports.TooltipWithFallbackPlacements=TooltipWithFallbackPlacements,TooltipWithFallbackPlacements.displayName="TooltipWithFallbackPlacements",module.exports.__namedExportsOrder=["TooltipWithFallbackPlacements"]},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText}}]);