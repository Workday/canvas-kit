"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[124],{"./modules/preview-react/side-panel/stories/testingCypress.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FirstFocusable=exports.AsAside=exports.AsDiv=exports.Default=exports.default=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_sidePanel=__webpack_require__("./modules/preview-react/side-panel/index.ts"),_avatar=__webpack_require__("./modules/react/avatar/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var _default={parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import * as React from \'react\';\\nimport {SidePanel, useSidePanel} from \'@workday/canvas-kit-preview-react/side-panel\';\\nimport {Avatar} from \'@workday/canvas-kit-react/avatar\';\\nimport {PrimaryButton} from \'@workday/canvas-kit-react/button\';\\n\\nexport default {\\n  title: \'Testing/Preview/Side Panel/Cypress\',\\n  component: SidePanel,\\n};\\n\\nconst Container = props => {\\n  return <div style={{display: \'flex\', height: \'calc(100vh - 80px)\', width: \'100%\'}} {...props} />;\\n};\\n\\nconst label = `Accessible Label Name`;\\n\\nexport const Default = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  return (\\n    <Container>\\n      <SidePanel {...panelProps}>\\n        <span hidden {...labelProps}>\\n          {label}\\n        </span>\\n        <SidePanel.ToggleButton {...controlProps} />\\n      </SidePanel>\\n    </Container>\\n  );\\n};\\nexport const AsDiv = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  return (\\n    <Container>\\n      <SidePanel as=\\"div\\" role=\\"region\\" {...panelProps}>\\n        <span hidden {...labelProps}>\\n          {label}\\n        </span>\\n        <SidePanel.ToggleButton {...controlProps} />\\n      </SidePanel>\\n    </Container>\\n  );\\n};\\nexport const AsAside = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  return (\\n    <Container>\\n      <SidePanel as=\\"aside\\" {...panelProps}>\\n        <span hidden {...labelProps}>\\n          {label}\\n        </span>\\n        <SidePanel.ToggleButton {...controlProps} />\\n      </SidePanel>\\n      <div>Main Content</div>\\n    </Container>\\n  );\\n};\\n\\nexport const FirstFocusable = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  const Header = props => {\\n    return (\\n      <div\\n        style={{\\n          width: \'100%\',\\n          height: 60,\\n          display: \'flex\',\\n          alignItems: \'center\',\\n          justifyContent: \'flex-end\',\\n          padding: \'8px 16px\',\\n          boxSizing: \'border-box\',\\n          border: \'1px solid #777\',\\n          position: \'relative\',\\n          zIndex: 1,\\n        }}\\n        {...props}\\n      />\\n    );\\n  };\\n\\n  // eslint-disable-next-line no-empty-function\\n  const noop = () => {};\\n\\n  return (\\n    <React.Fragment>\\n      <Header>\\n        <Avatar onClick={noop} />\\n      </Header>\\n      <Container>\\n        <SidePanel {...panelProps}>\\n          <span hidden {...labelProps}>\\n            {label}\\n          </span>\\n          <h1>Panel Name</h1>\\n          <SidePanel.ToggleButton {...controlProps} />\\n          <PrimaryButton>Another Button</PrimaryButton>\\n        </SidePanel>\\n      </Container>\\n    </React.Fragment>\\n  );\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "Default": {\n    "startLoc": {\n      "col": 23,\n      "line": 17\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 30\n    },\n    "startBody": {\n      "col": 23,\n      "line": 17\n    },\n    "endBody": {\n      "col": 1,\n      "line": 30\n    }\n  },\n  "AsDiv": {\n    "startLoc": {\n      "col": 21,\n      "line": 31\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 44\n    },\n    "startBody": {\n      "col": 21,\n      "line": 31\n    },\n    "endBody": {\n      "col": 1,\n      "line": 44\n    }\n  },\n  "AsAside": {\n    "startLoc": {\n      "col": 23,\n      "line": 45\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 59\n    },\n    "startBody": {\n      "col": 23,\n      "line": 45\n    },\n    "endBody": {\n      "col": 1,\n      "line": 59\n    }\n  },\n  "FirstFocusable": {\n    "startLoc": {\n      "col": 30,\n      "line": 61\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 104\n    },\n    "startBody": {\n      "col": 30,\n      "line": 61\n    },\n    "endBody": {\n      "col": 1,\n      "line": 104\n    }\n  }\n};\n    \nimport * as React from \'react\';\nimport {SidePanel, useSidePanel} from \'@workday/canvas-kit-preview-react/side-panel\';\nimport {Avatar} from \'@workday/canvas-kit-react/avatar\';\nimport {PrimaryButton} from \'@workday/canvas-kit-react/button\';\n\nexport default {parameters: {\n  "storySource": {\n    "source": "import * as React from \'react\';\\nimport {SidePanel, useSidePanel} from \'@workday/canvas-kit-preview-react/side-panel\';\\nimport {Avatar} from \'@workday/canvas-kit-react/avatar\';\\nimport {PrimaryButton} from \'@workday/canvas-kit-react/button\';\\n\\nexport default {\\n  title: \'Testing/Preview/Side Panel/Cypress\',\\n  component: SidePanel,\\n};\\n\\nconst Container = props => {\\n  return <div style={{display: \'flex\', height: \'calc(100vh - 80px)\', width: \'100%\'}} {...props} />;\\n};\\n\\nconst label = `Accessible Label Name`;\\n\\nexport const Default = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  return (\\n    <Container>\\n      <SidePanel {...panelProps}>\\n        <span hidden {...labelProps}>\\n          {label}\\n        </span>\\n        <SidePanel.ToggleButton {...controlProps} />\\n      </SidePanel>\\n    </Container>\\n  );\\n};\\nexport const AsDiv = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  return (\\n    <Container>\\n      <SidePanel as=\\"div\\" role=\\"region\\" {...panelProps}>\\n        <span hidden {...labelProps}>\\n          {label}\\n        </span>\\n        <SidePanel.ToggleButton {...controlProps} />\\n      </SidePanel>\\n    </Container>\\n  );\\n};\\nexport const AsAside = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  return (\\n    <Container>\\n      <SidePanel as=\\"aside\\" {...panelProps}>\\n        <span hidden {...labelProps}>\\n          {label}\\n        </span>\\n        <SidePanel.ToggleButton {...controlProps} />\\n      </SidePanel>\\n      <div>Main Content</div>\\n    </Container>\\n  );\\n};\\n\\nexport const FirstFocusable = () => {\\n  const {labelProps, panelProps, controlProps} = useSidePanel();\\n\\n  const Header = props => {\\n    return (\\n      <div\\n        style={{\\n          width: \'100%\',\\n          height: 60,\\n          display: \'flex\',\\n          alignItems: \'center\',\\n          justifyContent: \'flex-end\',\\n          padding: \'8px 16px\',\\n          boxSizing: \'border-box\',\\n          border: \'1px solid #777\',\\n          position: \'relative\',\\n          zIndex: 1,\\n        }}\\n        {...props}\\n      />\\n    );\\n  };\\n\\n  \\n  const noop = () => {};\\n\\n  return (\\n    <React.Fragment>\\n      <Header>\\n        <Avatar onClick={noop} />\\n      </Header>\\n      <Container>\\n        <SidePanel {...panelProps}>\\n          <span hidden {...labelProps}>\\n            {label}\\n          </span>\\n          <h1>Panel Name</h1>\\n          <SidePanel.ToggleButton {...controlProps} />\\n          <PrimaryButton>Another Button</PrimaryButton>\\n        </SidePanel>\\n      </Container>\\n    </React.Fragment>\\n  );\\n};\\n",\n    "locationsMap": {\n      "default": {\n        "startLoc": {\n          "col": 23,\n          "line": 17\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 30\n        },\n        "startBody": {\n          "col": 23,\n          "line": 17\n        },\n        "endBody": {\n          "col": 1,\n          "line": 30\n        }\n      },\n      "as-div": {\n        "startLoc": {\n          "col": 21,\n          "line": 31\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 44\n        },\n        "startBody": {\n          "col": 21,\n          "line": 31\n        },\n        "endBody": {\n          "col": 1,\n          "line": 44\n        }\n      },\n      "as-aside": {\n        "startLoc": {\n          "col": 23,\n          "line": 45\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 59\n        },\n        "startBody": {\n          "col": 23,\n          "line": 45\n        },\n        "endBody": {\n          "col": 1,\n          "line": 59\n        }\n      },\n      "first-focusable": {\n        "startLoc": {\n          "col": 30,\n          "line": 61\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 104\n        },\n        "startBody": {\n          "col": 30,\n          "line": 61\n        },\n        "endBody": {\n          "col": 1,\n          "line": 104\n        }\n      }\n    }\n  }\n,},\n  title: \'Testing/Preview/Side Panel/Cypress\',\n  component: SidePanel,\n};\n\nconst Container = props => {\n  return <div style={{display: \'flex\', height: \'calc(100vh - 80px)\', width: \'100%\'}} {...props} />;\n};\n\nconst label = `Accessible Label Name`;\n\nexport const Default = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  return (\n    <Container>\n      <SidePanel {...panelProps}>\n        <span hidden {...labelProps}>\n          {label}\n        </span>\n        <SidePanel.ToggleButton {...controlProps} />\n      </SidePanel>\n    </Container>\n  );\n};;\nexport const AsDiv = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  return (\n    <Container>\n      <SidePanel as="div" role="region" {...panelProps}>\n        <span hidden {...labelProps}>\n          {label}\n        </span>\n        <SidePanel.ToggleButton {...controlProps} />\n      </SidePanel>\n    </Container>\n  );\n};;\nexport const AsAside = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  return (\n    <Container>\n      <SidePanel as="aside" {...panelProps}>\n        <span hidden {...labelProps}>\n          {label}\n        </span>\n        <SidePanel.ToggleButton {...controlProps} />\n      </SidePanel>\n      <div>Main Content</div>\n    </Container>\n  );\n};;\n\nexport const FirstFocusable = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  const Header = props => {\n    return (\n      <div\n        style={{\n          width: \'100%\',\n          height: 60,\n          display: \'flex\',\n          alignItems: \'center\',\n          justifyContent: \'flex-end\',\n          padding: \'8px 16px\',\n          boxSizing: \'border-box\',\n          border: \'1px solid #777\',\n          position: \'relative\',\n          zIndex: 1,\n        }}\n        {...props}\n      />\n    );\n  };\n\n  \n  const noop = () => {};\n\n  return (\n    <React.Fragment>\n      <Header>\n        <Avatar onClick={noop} />\n      </Header>\n      <Container>\n        <SidePanel {...panelProps}>\n          <span hidden {...labelProps}>\n            {label}\n          </span>\n          <h1>Panel Name</h1>\n          <SidePanel.ToggleButton {...controlProps} />\n          <PrimaryButton>Another Button</PrimaryButton>\n        </SidePanel>\n      </Container>\n    </React.Fragment>\n  );\n};\n',locationsMap:{default:{startLoc:{col:23,line:176},endLoc:{col:1,line:189},startBody:{col:23,line:176},endBody:{col:1,line:189}},"as-div":{startLoc:{col:21,line:190},endLoc:{col:1,line:203},startBody:{col:21,line:190},endBody:{col:1,line:203}},"as-aside":{startLoc:{col:23,line:204},endLoc:{col:1,line:218},startBody:{col:23,line:204},endBody:{col:1,line:218}},"first-focusable":{startLoc:{col:30,line:220},endLoc:{col:1,line:263},startBody:{col:30,line:220},endBody:{col:1,line:263}}}},storySource:{source:"import * as React from 'react';\nimport {SidePanel, useSidePanel} from '@workday/canvas-kit-preview-react/side-panel';\nimport {Avatar} from '@workday/canvas-kit-react/avatar';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\n\nexport default {\n  title: 'Testing/Preview/Side Panel/Cypress',\n  component: SidePanel,\n};\n\nconst Container = props => {\n  return <div style={{display: 'flex', height: 'calc(100vh - 80px)', width: '100%'}} {...props} />;\n};\n\nconst label = `Accessible Label Name`;\n\nexport const Default = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  return (\n    <Container>\n      <SidePanel {...panelProps}>\n        <span hidden {...labelProps}>\n          {label}\n        </span>\n        <SidePanel.ToggleButton {...controlProps} />\n      </SidePanel>\n    </Container>\n  );\n};\nexport const AsDiv = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  return (\n    <Container>\n      <SidePanel as=\"div\" role=\"region\" {...panelProps}>\n        <span hidden {...labelProps}>\n          {label}\n        </span>\n        <SidePanel.ToggleButton {...controlProps} />\n      </SidePanel>\n    </Container>\n  );\n};\nexport const AsAside = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  return (\n    <Container>\n      <SidePanel as=\"aside\" {...panelProps}>\n        <span hidden {...labelProps}>\n          {label}\n        </span>\n        <SidePanel.ToggleButton {...controlProps} />\n      </SidePanel>\n      <div>Main Content</div>\n    </Container>\n  );\n};\n\nexport const FirstFocusable = () => {\n  const {labelProps, panelProps, controlProps} = useSidePanel();\n\n  const Header = props => {\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: 60,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          padding: '8px 16px',\n          boxSizing: 'border-box',\n          border: '1px solid #777',\n          position: 'relative',\n          zIndex: 1,\n        }}\n        {...props}\n      />\n    );\n  };\n\n  \n  const noop = () => {};\n\n  return (\n    <React.Fragment>\n      <Header>\n        <Avatar onClick={noop} />\n      </Header>\n      <Container>\n        <SidePanel {...panelProps}>\n          <span hidden {...labelProps}>\n            {label}\n          </span>\n          <h1>Panel Name</h1>\n          <SidePanel.ToggleButton {...controlProps} />\n          <PrimaryButton>Another Button</PrimaryButton>\n        </SidePanel>\n      </Container>\n    </React.Fragment>\n  );\n};\n",locationsMap:{default:{startLoc:{col:23,line:17},endLoc:{col:1,line:30},startBody:{col:23,line:17},endBody:{col:1,line:30}},"as-div":{startLoc:{col:21,line:31},endLoc:{col:1,line:44},startBody:{col:21,line:31},endBody:{col:1,line:44}},"as-aside":{startLoc:{col:23,line:45},endLoc:{col:1,line:59},startBody:{col:23,line:45},endBody:{col:1,line:59}},"first-focusable":{startLoc:{col:30,line:61},endLoc:{col:1,line:104},startBody:{col:30,line:61},endBody:{col:1,line:104}}}}},title:"Testing/Preview/Side Panel/Cypress",component:_sidePanel.SidePanel};exports.default=_default;const Container=props=>React.createElement("div",_extends({style:{display:"flex",height:"calc(100vh - 80px)",width:"100%"}},props));Container.displayName="Container";const label="Accessible Label Name",Default=()=>{const{labelProps,panelProps,controlProps}=(0,_sidePanel.useSidePanel)();return React.createElement(Container,null,React.createElement(_sidePanel.SidePanel,panelProps,React.createElement("span",_extends({hidden:!0},labelProps),label),React.createElement(_sidePanel.SidePanel.ToggleButton,controlProps)))};exports.Default=Default,Default.displayName="Default";const AsDiv=()=>{const{labelProps,panelProps,controlProps}=(0,_sidePanel.useSidePanel)();return React.createElement(Container,null,React.createElement(_sidePanel.SidePanel,_extends({as:"div",role:"region"},panelProps),React.createElement("span",_extends({hidden:!0},labelProps),label),React.createElement(_sidePanel.SidePanel.ToggleButton,controlProps)))};exports.AsDiv=AsDiv,AsDiv.displayName="AsDiv";const AsAside=()=>{const{labelProps,panelProps,controlProps}=(0,_sidePanel.useSidePanel)();return React.createElement(Container,null,React.createElement(_sidePanel.SidePanel,_extends({as:"aside"},panelProps),React.createElement("span",_extends({hidden:!0},labelProps),label),React.createElement(_sidePanel.SidePanel.ToggleButton,controlProps)),React.createElement("div",null,"Main Content"))};exports.AsAside=AsAside,AsAside.displayName="AsAside";const FirstFocusable=()=>{const{labelProps,panelProps,controlProps}=(0,_sidePanel.useSidePanel)(),Header=props=>React.createElement("div",_extends({style:{width:"100%",height:60,display:"flex",alignItems:"center",justifyContent:"flex-end",padding:"8px 16px",boxSizing:"border-box",border:"1px solid #777",position:"relative",zIndex:1}},props));return React.createElement(React.Fragment,null,React.createElement(Header,null,React.createElement(_avatar.Avatar,{onClick:()=>{}})),React.createElement(Container,null,React.createElement(_sidePanel.SidePanel,panelProps,React.createElement("span",_extends({hidden:!0},labelProps),label),React.createElement("h1",null,"Panel Name"),React.createElement(_sidePanel.SidePanel.ToggleButton,controlProps),React.createElement(_button.PrimaryButton,null,"Another Button"))))};exports.FirstFocusable=FirstFocusable,FirstFocusable.displayName="FirstFocusable",module.exports.__namedExportsOrder=["FirstFocusable","AsAside","AsDiv","Default"]},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText}}]);