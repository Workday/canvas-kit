"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[7119],{"./modules/react/modal/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithTooltips=exports.WithRadioButtons=exports.StackedModals=exports.ModalWithPopup=exports.ModalSmallWidth=exports.ModalRTL=exports.IframeTest=exports.CustomThemeModal=exports.AccessibilityTest=void 0;(function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n})(__webpack_require__("./node_modules/react/index.js"));var _reactDom=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react-dom/index.js")),_storybook=__webpack_require__("./utils/storybook/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_modal=__webpack_require__("./modules/react/modal/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_WithRadioButtons=__webpack_require__("./modules/react/modal/stories/examples/WithRadioButtons.tsx"),_StackedModals=__webpack_require__("./modules/react/modal/stories/examples/StackedModals.tsx"),_WithTooltips=__webpack_require__("./modules/react/modal/stories/examples/WithTooltips.tsx"),_ModalWithPopup=__webpack_require__("./modules/react/modal/stories/examples/ModalWithPopup.tsx"),_IframeTest=__webpack_require__("./modules/react/modal/stories/examples/IframeTest.tsx"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}exports.default={title:"Testing/Popups/Modal",component:_modal.Modal,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import * as React from \'react\';\\nimport ReactDOM from \'react-dom\';\\nimport {customColorTheme} from \'../../../../utils/storybook\';\\nimport {ContentDirection, CanvasProvider, useTheme} from \'@workday/canvas-kit-react/common\';\\nimport {Modal, useModalModel} from \'@workday/canvas-kit-react/modal\';\\nimport {DeleteButton, PrimaryButton} from \'@workday/canvas-kit-react/button\';\\nimport {\\n  Popup,\\n  useCloseOnOutsideClick,\\n  useCloseOnEscape,\\n  usePopupModel,\\n} from \'@workday/canvas-kit-react/popup\';\\nimport {Flex, Box} from \'@workday/canvas-kit-react/layout\';\\n\\nimport {WithRadioButtons as WithRadioButtonsExample} from \'./examples/WithRadioButtons\';\\nimport {StackedModals as StackedModalsExample} from \'./examples/StackedModals\';\\nimport {WithTooltips as WithTooltipsExample} from \'./examples/WithTooltips\';\\nimport {ModalWithPopup as ModalWithPopupExample} from \'./examples/ModalWithPopup\';\\nimport {IframeTest as IframeTestExample} from \'./examples/IframeTest\';\\n\\nexport default {\\n  title: \'Testing/Popups/Modal\',\\n  component: Modal,\\n  parameters: {\\n    chromatic: {\\n      pauseAnimationAtEnd: true,\\n    },\\n  },\\n};\\n\\nexport const AccessibilityTest = {\\n  render: () => {\\n    return (\\n      <>\\n        <Modal>\\n          <Modal.Target as={DeleteButton}>Delete Item</Modal.Target>\\n          <Modal.Overlay>\\n            <Modal.Card>\\n              <Modal.CloseIcon aria-label=\\"Close\\" />\\n              <Modal.Heading>Delete Item</Modal.Heading>\\n              <Modal.Body>\\n                <p>Are you sure you want to delete the item?</p>\\n                <Flex gap=\\"s\\">\\n                  <Modal.CloseButton as={DeleteButton}>Delete</Modal.CloseButton>\\n                  <Modal.CloseButton>Cancel</Modal.CloseButton>\\n                </Flex>\\n              </Modal.Body>\\n            </Modal.Card>\\n          </Modal.Overlay>\\n        </Modal>\\n        <p>The content below should be hidden from assistive technology while the modal is open.</p>\\n        <p>\\n          <a href=\\"#\\">Link</a>\\n        </p>\\n\\n        <button type=\\"button\\">Button</button>\\n        <p tabIndex={0}>Focusable div</p>\\n\\n        <div>\\n          <label htmlFor=\\"text\\">Text input</label>\\n          <input type=\\"text\\" id=\\"text\\" />\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"radio\\">Radio</label> <input type=\\"radio\\" id=\\"radio\\" />\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"check\\">Checkbox</label>\\n          <input type=\\"checkbox\\" />\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"textarea\\">Text area</label>\\n          <textarea id=\\"textarea\\"></textarea>\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"pet-select\\">Choose a pet:</label>\\n          <select name=\\"pets\\" id=\\"pet-select\\">\\n            <option value=\\"\\">Please choose an option</option>\\n            <option value=\\"dog\\">Dog</option>\\n            <option value=\\"cat\\">Cat</option>\\n            <option value=\\"hamster\\">Hamster</option>\\n            <option value=\\"parrot\\">Parrot</option>\\n            <option value=\\"spider\\">Spider</option>\\n            <option value=\\"goldfish\\">Goldfish</option>\\n          </select>\\n        </div>\\n\\n        <div>\\n          <iframe title=\\"iframe test\\" src=\\"/\\" width=\\"300\\" height=\\"300\\"></iframe>\\n        </div>\\n      </>\\n    );\\n  },\\n};\\n\\nexport const WithRadioButtons = {\\n  render: WithRadioButtonsExample,\\n};\\n\\nexport const StackedModals = {\\n  render: StackedModalsExample,\\n};\\n\\nexport const ModalWithPopup = {\\n  render: ModalWithPopupExample,\\n};\\n\\nexport const WithTooltips = {\\n  render: WithTooltipsExample,\\n};\\n\\nexport const IframeTest = {\\n  render: IframeTestExample,\\n};\\n\\nconst TestContent = () => {\\n  const content = (\\n    <div\\n      style={{\\n        color: \'white\',\\n        zIndex: 1,\\n        position: \'relative\',\\n      }}\\n    >\\n      This text should be invisible if the Modal is rendering correctly. It is white text on a white\\n      background. The Popup Stack should set up the zIndex of the Modal\'s overlay. If rendered\\n      incorrectly, the text will be visible on top of the overlay.\\n    </div>\\n  );\\n\\n  return ReactDOM.createPortal(content, document.body);\\n};\\n\\nconst TestModal = () => {\\n  const model = useModalModel({\\n    initialVisibility: \'visible\',\\n  });\\n  return (\\n    <>\\n      <TestContent />\\n      <Modal model={model}>\\n        <Modal.Overlay style={{animation: \'none\'}}>\\n          <Modal.Card style={{animation: \'none\'}}>\\n            <Modal.CloseIcon aria-label=\\"Close\\" />\\n            <Modal.Heading>Small Width Modal</Modal.Heading>\\n            <Modal.Body>\\n              <Box as=\\"p\\" marginY=\\"zero\\">\\n                This modal should appear on the bottom of the screen for mobile devices. Chromatic\\n                uses a version of Chrome that makes it appear on the top and is a known issue.\\n              </Box>\\n            </Modal.Body>\\n            <Flex gap=\\"s\\" padding=\\"xxs\\" marginTop=\\"xxs\\">\\n              <Modal.CloseButton as={PrimaryButton}>Delete</Modal.CloseButton>\\n              <Modal.CloseButton>Cancel</Modal.CloseButton>\\n            </Flex>\\n          </Modal.Card>\\n        </Modal.Overlay>\\n      </Modal>\\n    </>\\n  );\\n};\\n\\nexport const ModalSmallWidth = {\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n      viewports: [320, 1200],\\n    },\\n  },\\n  render: () => <TestModal />,\\n};\\n\\nexport const ModalRTL = {\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n  render: () => {\\n    const theme = useTheme({canvas: {direction: ContentDirection.RTL}});\\n    const model = useModalModel({\\n      initialVisibility: \'visible\',\\n    });\\n    return (\\n      <CanvasProvider theme={theme}>\\n        <Modal model={model}>\\n          <Modal.Overlay style={{animation: \'none\'}}>\\n            <Modal.Card style={{animation: \'none\'}} width={300}>\\n              <Modal.CloseIcon aria-label=\\"\\" />\\n              <Modal.Heading>למחוק פריט</Modal.Heading>\\n              <Modal.Body>האם ברצונך למחוק פריט זה</Modal.Body>\\n            </Modal.Card>\\n          </Modal.Overlay>\\n        </Modal>\\n      </CanvasProvider>\\n    );\\n  },\\n};\\n\\nexport const CustomThemeModal = {\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n  render: () => {\\n    const model = useModalModel({\\n      initialVisibility: \'visible\',\\n    });\\n    return (\\n      <CanvasProvider theme={{canvas: customColorTheme}}>\\n        <Modal model={model}>\\n          <Modal.Overlay style={{animation: \'none\'}}>\\n            <Modal.Card style={{animation: \'none\'}}>\\n              <Modal.CloseIcon aria-label=\\"Close\\" />\\n              <Modal.Heading>MIT License</Modal.Heading>\\n              <Modal.Body>\\n                <Box as=\\"p\\" marginY=\\"zero\\">\\n                  Permission is hereby granted, free of charge, to any person obtaining a copy of\\n                  this software and associated documentation files (the \\"Software\\").\\n                </Box>\\n              </Modal.Body>\\n              <Flex gap=\\"s\\" padding=\\"xxs\\" marginTop=\\"xxs\\">\\n                <Modal.CloseButton as={PrimaryButton}>Acknowledge</Modal.CloseButton>\\n                <Modal.CloseButton>Cancel</Modal.CloseButton>\\n              </Flex>\\n            </Modal.Card>\\n          </Modal.Overlay>\\n        </Modal>\\n      </CanvasProvider>\\n    );\\n  },\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "AccessibilityTest": {\n    "startLoc": {\n      "col": 33,\n      "line": 31\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 97\n    },\n    "startBody": {\n      "col": 33,\n      "line": 31\n    },\n    "endBody": {\n      "col": 1,\n      "line": 97\n    }\n  },\n  "WithRadioButtons": {\n    "startLoc": {\n      "col": 32,\n      "line": 99\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 101\n    },\n    "startBody": {\n      "col": 32,\n      "line": 99\n    },\n    "endBody": {\n      "col": 1,\n      "line": 101\n    }\n  },\n  "StackedModals": {\n    "startLoc": {\n      "col": 29,\n      "line": 103\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 105\n    },\n    "startBody": {\n      "col": 29,\n      "line": 103\n    },\n    "endBody": {\n      "col": 1,\n      "line": 105\n    }\n  },\n  "ModalWithPopup": {\n    "startLoc": {\n      "col": 30,\n      "line": 107\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 109\n    },\n    "startBody": {\n      "col": 30,\n      "line": 107\n    },\n    "endBody": {\n      "col": 1,\n      "line": 109\n    }\n  },\n  "WithTooltips": {\n    "startLoc": {\n      "col": 28,\n      "line": 111\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 113\n    },\n    "startBody": {\n      "col": 28,\n      "line": 111\n    },\n    "endBody": {\n      "col": 1,\n      "line": 113\n    }\n  },\n  "IframeTest": {\n    "startLoc": {\n      "col": 26,\n      "line": 115\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 117\n    },\n    "startBody": {\n      "col": 26,\n      "line": 115\n    },\n    "endBody": {\n      "col": 1,\n      "line": 117\n    }\n  },\n  "ModalSmallWidth": {\n    "startLoc": {\n      "col": 31,\n      "line": 166\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 174\n    },\n    "startBody": {\n      "col": 31,\n      "line": 166\n    },\n    "endBody": {\n      "col": 1,\n      "line": 174\n    }\n  },\n  "ModalRTL": {\n    "startLoc": {\n      "col": 24,\n      "line": 176\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 201\n    },\n    "startBody": {\n      "col": 24,\n      "line": 176\n    },\n    "endBody": {\n      "col": 1,\n      "line": 201\n    }\n  },\n  "CustomThemeModal": {\n    "startLoc": {\n      "col": 32,\n      "line": 203\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 236\n    },\n    "startBody": {\n      "col": 32,\n      "line": 203\n    },\n    "endBody": {\n      "col": 1,\n      "line": 236\n    }\n  }\n};\n    \nimport * as React from \'react\';\nimport ReactDOM from \'react-dom\';\nimport {customColorTheme} from \'../../../../utils/storybook\';\nimport {ContentDirection, CanvasProvider, useTheme} from \'@workday/canvas-kit-react/common\';\nimport {Modal, useModalModel} from \'@workday/canvas-kit-react/modal\';\nimport {DeleteButton, PrimaryButton} from \'@workday/canvas-kit-react/button\';\nimport {\n  Popup,\n  useCloseOnOutsideClick,\n  useCloseOnEscape,\n  usePopupModel,\n} from \'@workday/canvas-kit-react/popup\';\nimport {Flex, Box} from \'@workday/canvas-kit-react/layout\';\n\nimport {WithRadioButtons as WithRadioButtonsExample} from \'./examples/WithRadioButtons\';\nimport {StackedModals as StackedModalsExample} from \'./examples/StackedModals\';\nimport {WithTooltips as WithTooltipsExample} from \'./examples/WithTooltips\';\nimport {ModalWithPopup as ModalWithPopupExample} from \'./examples/ModalWithPopup\';\nimport {IframeTest as IframeTestExample} from \'./examples/IframeTest\';\n\nexport default {\n  title: \'Testing/Popups/Modal\',\n  component: Modal,\n  parameters: {\n  "storySource": {\n    "source": "import * as React from \'react\';\\nimport ReactDOM from \'react-dom\';\\nimport {customColorTheme} from \'../../../../utils/storybook\';\\nimport {ContentDirection, CanvasProvider, useTheme} from \'@workday/canvas-kit-react/common\';\\nimport {Modal, useModalModel} from \'@workday/canvas-kit-react/modal\';\\nimport {DeleteButton, PrimaryButton} from \'@workday/canvas-kit-react/button\';\\nimport {\\n  Popup,\\n  useCloseOnOutsideClick,\\n  useCloseOnEscape,\\n  usePopupModel,\\n} from \'@workday/canvas-kit-react/popup\';\\nimport {Flex, Box} from \'@workday/canvas-kit-react/layout\';\\n\\nimport {WithRadioButtons as WithRadioButtonsExample} from \'./examples/WithRadioButtons\';\\nimport {StackedModals as StackedModalsExample} from \'./examples/StackedModals\';\\nimport {WithTooltips as WithTooltipsExample} from \'./examples/WithTooltips\';\\nimport {ModalWithPopup as ModalWithPopupExample} from \'./examples/ModalWithPopup\';\\nimport {IframeTest as IframeTestExample} from \'./examples/IframeTest\';\\n\\nexport default {\\n  title: \'Testing/Popups/Modal\',\\n  component: Modal,\\n  parameters: {\\n    chromatic: {\\n      pauseAnimationAtEnd: true,\\n    },\\n  },\\n};\\n\\nexport const AccessibilityTest = {\\n  render: () => {\\n    return (\\n      <>\\n        <Modal>\\n          <Modal.Target as={DeleteButton}>Delete Item</Modal.Target>\\n          <Modal.Overlay>\\n            <Modal.Card>\\n              <Modal.CloseIcon aria-label=\\"Close\\" />\\n              <Modal.Heading>Delete Item</Modal.Heading>\\n              <Modal.Body>\\n                <p>Are you sure you want to delete the item?</p>\\n                <Flex gap=\\"s\\">\\n                  <Modal.CloseButton as={DeleteButton}>Delete</Modal.CloseButton>\\n                  <Modal.CloseButton>Cancel</Modal.CloseButton>\\n                </Flex>\\n              </Modal.Body>\\n            </Modal.Card>\\n          </Modal.Overlay>\\n        </Modal>\\n        <p>The content below should be hidden from assistive technology while the modal is open.</p>\\n        <p>\\n          <a href=\\"#\\">Link</a>\\n        </p>\\n\\n        <button type=\\"button\\">Button</button>\\n        <p tabIndex={0}>Focusable div</p>\\n\\n        <div>\\n          <label htmlFor=\\"text\\">Text input</label>\\n          <input type=\\"text\\" id=\\"text\\" />\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"radio\\">Radio</label> <input type=\\"radio\\" id=\\"radio\\" />\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"check\\">Checkbox</label>\\n          <input type=\\"checkbox\\" />\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"textarea\\">Text area</label>\\n          <textarea id=\\"textarea\\"></textarea>\\n        </div>\\n\\n        <div>\\n          <label htmlFor=\\"pet-select\\">Choose a pet:</label>\\n          <select name=\\"pets\\" id=\\"pet-select\\">\\n            <option value=\\"\\">Please choose an option</option>\\n            <option value=\\"dog\\">Dog</option>\\n            <option value=\\"cat\\">Cat</option>\\n            <option value=\\"hamster\\">Hamster</option>\\n            <option value=\\"parrot\\">Parrot</option>\\n            <option value=\\"spider\\">Spider</option>\\n            <option value=\\"goldfish\\">Goldfish</option>\\n          </select>\\n        </div>\\n\\n        <div>\\n          <iframe title=\\"iframe test\\" src=\\"/\\" width=\\"300\\" height=\\"300\\"></iframe>\\n        </div>\\n      </>\\n    );\\n  },\\n};\\n\\nexport const WithRadioButtons = {\\n  render: WithRadioButtonsExample,\\n};\\n\\nexport const StackedModals = {\\n  render: StackedModalsExample,\\n};\\n\\nexport const ModalWithPopup = {\\n  render: ModalWithPopupExample,\\n};\\n\\nexport const WithTooltips = {\\n  render: WithTooltipsExample,\\n};\\n\\nexport const IframeTest = {\\n  render: IframeTestExample,\\n};\\n\\nconst TestContent = () => {\\n  const content = (\\n    <div\\n      style={{\\n        color: \'white\',\\n        zIndex: 1,\\n        position: \'relative\',\\n      }}\\n    >\\n      This text should be invisible if the Modal is rendering correctly. It is white text on a white\\n      background. The Popup Stack should set up the zIndex of the Modal\'s overlay. If rendered\\n      incorrectly, the text will be visible on top of the overlay.\\n    </div>\\n  );\\n\\n  return ReactDOM.createPortal(content, document.body);\\n};\\n\\nconst TestModal = () => {\\n  const model = useModalModel({\\n    initialVisibility: \'visible\',\\n  });\\n  return (\\n    <>\\n      <TestContent />\\n      <Modal model={model}>\\n        <Modal.Overlay style={{animation: \'none\'}}>\\n          <Modal.Card style={{animation: \'none\'}}>\\n            <Modal.CloseIcon aria-label=\\"Close\\" />\\n            <Modal.Heading>Small Width Modal</Modal.Heading>\\n            <Modal.Body>\\n              <Box as=\\"p\\" marginY=\\"zero\\">\\n                This modal should appear on the bottom of the screen for mobile devices. Chromatic\\n                uses a version of Chrome that makes it appear on the top and is a known issue.\\n              </Box>\\n            </Modal.Body>\\n            <Flex gap=\\"s\\" padding=\\"xxs\\" marginTop=\\"xxs\\">\\n              <Modal.CloseButton as={PrimaryButton}>Delete</Modal.CloseButton>\\n              <Modal.CloseButton>Cancel</Modal.CloseButton>\\n            </Flex>\\n          </Modal.Card>\\n        </Modal.Overlay>\\n      </Modal>\\n    </>\\n  );\\n};\\n\\nexport const ModalSmallWidth = {\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n      viewports: [320, 1200],\\n    },\\n  },\\n  render: () => <TestModal />,\\n};\\n\\nexport const ModalRTL = {\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n  render: () => {\\n    const theme = useTheme({canvas: {direction: ContentDirection.RTL}});\\n    const model = useModalModel({\\n      initialVisibility: \'visible\',\\n    });\\n    return (\\n      <CanvasProvider theme={theme}>\\n        <Modal model={model}>\\n          <Modal.Overlay style={{animation: \'none\'}}>\\n            <Modal.Card style={{animation: \'none\'}} width={300}>\\n              <Modal.CloseIcon aria-label=\\"\\" />\\n              <Modal.Heading>למחוק פריט</Modal.Heading>\\n              <Modal.Body>האם ברצונך למחוק פריט זה</Modal.Body>\\n            </Modal.Card>\\n          </Modal.Overlay>\\n        </Modal>\\n      </CanvasProvider>\\n    );\\n  },\\n};\\n\\nexport const CustomThemeModal = {\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n  render: () => {\\n    const model = useModalModel({\\n      initialVisibility: \'visible\',\\n    });\\n    return (\\n      <CanvasProvider theme={{canvas: customColorTheme}}>\\n        <Modal model={model}>\\n          <Modal.Overlay style={{animation: \'none\'}}>\\n            <Modal.Card style={{animation: \'none\'}}>\\n              <Modal.CloseIcon aria-label=\\"Close\\" />\\n              <Modal.Heading>MIT License</Modal.Heading>\\n              <Modal.Body>\\n                <Box as=\\"p\\" marginY=\\"zero\\">\\n                  Permission is hereby granted, free of charge, to any person obtaining a copy of\\n                  this software and associated documentation files (the \\"Software\\").\\n                </Box>\\n              </Modal.Body>\\n              <Flex gap=\\"s\\" padding=\\"xxs\\" marginTop=\\"xxs\\">\\n                <Modal.CloseButton as={PrimaryButton}>Acknowledge</Modal.CloseButton>\\n                <Modal.CloseButton>Cancel</Modal.CloseButton>\\n              </Flex>\\n            </Modal.Card>\\n          </Modal.Overlay>\\n        </Modal>\\n      </CanvasProvider>\\n    );\\n  },\\n};\\n",\n    "locationsMap": {\n      "accessibility-test": {\n        "startLoc": {\n          "col": 33,\n          "line": 31\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 97\n        },\n        "startBody": {\n          "col": 33,\n          "line": 31\n        },\n        "endBody": {\n          "col": 1,\n          "line": 97\n        }\n      },\n      "with-radio-buttons": {\n        "startLoc": {\n          "col": 32,\n          "line": 99\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 101\n        },\n        "startBody": {\n          "col": 32,\n          "line": 99\n        },\n        "endBody": {\n          "col": 1,\n          "line": 101\n        }\n      },\n      "stacked-modals": {\n        "startLoc": {\n          "col": 29,\n          "line": 103\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 105\n        },\n        "startBody": {\n          "col": 29,\n          "line": 103\n        },\n        "endBody": {\n          "col": 1,\n          "line": 105\n        }\n      },\n      "modal-with-popup": {\n        "startLoc": {\n          "col": 30,\n          "line": 107\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 109\n        },\n        "startBody": {\n          "col": 30,\n          "line": 107\n        },\n        "endBody": {\n          "col": 1,\n          "line": 109\n        }\n      },\n      "with-tooltips": {\n        "startLoc": {\n          "col": 28,\n          "line": 111\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 113\n        },\n        "startBody": {\n          "col": 28,\n          "line": 111\n        },\n        "endBody": {\n          "col": 1,\n          "line": 113\n        }\n      },\n      "iframe-test": {\n        "startLoc": {\n          "col": 26,\n          "line": 115\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 117\n        },\n        "startBody": {\n          "col": 26,\n          "line": 115\n        },\n        "endBody": {\n          "col": 1,\n          "line": 117\n        }\n      },\n      "modal-small-width": {\n        "startLoc": {\n          "col": 31,\n          "line": 166\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 174\n        },\n        "startBody": {\n          "col": 31,\n          "line": 166\n        },\n        "endBody": {\n          "col": 1,\n          "line": 174\n        }\n      },\n      "modal-rtl": {\n        "startLoc": {\n          "col": 24,\n          "line": 176\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 201\n        },\n        "startBody": {\n          "col": 24,\n          "line": 176\n        },\n        "endBody": {\n          "col": 1,\n          "line": 201\n        }\n      },\n      "custom-theme-modal": {\n        "startLoc": {\n          "col": 32,\n          "line": 203\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 236\n        },\n        "startBody": {\n          "col": 32,\n          "line": 203\n        },\n        "endBody": {\n          "col": 1,\n          "line": 236\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      pauseAnimationAtEnd: true,\n    },\n  },\n};\n\nexport const AccessibilityTest = {\n  render: () => {\n    return (\n      <>\n        <Modal>\n          <Modal.Target as={DeleteButton}>Delete Item</Modal.Target>\n          <Modal.Overlay>\n            <Modal.Card>\n              <Modal.CloseIcon aria-label="Close" />\n              <Modal.Heading>Delete Item</Modal.Heading>\n              <Modal.Body>\n                <p>Are you sure you want to delete the item?</p>\n                <Flex gap="s">\n                  <Modal.CloseButton as={DeleteButton}>Delete</Modal.CloseButton>\n                  <Modal.CloseButton>Cancel</Modal.CloseButton>\n                </Flex>\n              </Modal.Body>\n            </Modal.Card>\n          </Modal.Overlay>\n        </Modal>\n        <p>The content below should be hidden from assistive technology while the modal is open.</p>\n        <p>\n          <a href="#">Link</a>\n        </p>\n\n        <button type="button">Button</button>\n        <p tabIndex={0}>Focusable div</p>\n\n        <div>\n          <label htmlFor="text">Text input</label>\n          <input type="text" id="text" />\n        </div>\n\n        <div>\n          <label htmlFor="radio">Radio</label> <input type="radio" id="radio" />\n        </div>\n\n        <div>\n          <label htmlFor="check">Checkbox</label>\n          <input type="checkbox" />\n        </div>\n\n        <div>\n          <label htmlFor="textarea">Text area</label>\n          <textarea id="textarea"></textarea>\n        </div>\n\n        <div>\n          <label htmlFor="pet-select">Choose a pet:</label>\n          <select name="pets" id="pet-select">\n            <option value="">Please choose an option</option>\n            <option value="dog">Dog</option>\n            <option value="cat">Cat</option>\n            <option value="hamster">Hamster</option>\n            <option value="parrot">Parrot</option>\n            <option value="spider">Spider</option>\n            <option value="goldfish">Goldfish</option>\n          </select>\n        </div>\n\n        <div>\n          <iframe title="iframe test" src="/" width="300" height="300"></iframe>\n        </div>\n      </>\n    );\n  },\n};;\n\nexport const WithRadioButtons = {\n  render: WithRadioButtonsExample,\n};;\n\nexport const StackedModals = {\n  render: StackedModalsExample,\n};;\n\nexport const ModalWithPopup = {\n  render: ModalWithPopupExample,\n};;\n\nexport const WithTooltips = {\n  render: WithTooltipsExample,\n};;\n\nexport const IframeTest = {\n  render: IframeTestExample,\n};;\n\nconst TestContent = () => {\n  const content = (\n    <div\n      style={{\n        color: \'white\',\n        zIndex: 1,\n        position: \'relative\',\n      }}\n    >\n      This text should be invisible if the Modal is rendering correctly. It is white text on a white\n      background. The Popup Stack should set up the zIndex of the Modal\'s overlay. If rendered\n      incorrectly, the text will be visible on top of the overlay.\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.body);\n};\n\nconst TestModal = () => {\n  const model = useModalModel({\n    initialVisibility: \'visible\',\n  });\n  return (\n    <>\n      <TestContent />\n      <Modal model={model}>\n        <Modal.Overlay style={{animation: \'none\'}}>\n          <Modal.Card style={{animation: \'none\'}}>\n            <Modal.CloseIcon aria-label="Close" />\n            <Modal.Heading>Small Width Modal</Modal.Heading>\n            <Modal.Body>\n              <Box as="p" marginY="zero">\n                This modal should appear on the bottom of the screen for mobile devices. Chromatic\n                uses a version of Chrome that makes it appear on the top and is a known issue.\n              </Box>\n            </Modal.Body>\n            <Flex gap="s" padding="xxs" marginTop="xxs">\n              <Modal.CloseButton as={PrimaryButton}>Delete</Modal.CloseButton>\n              <Modal.CloseButton>Cancel</Modal.CloseButton>\n            </Flex>\n          </Modal.Card>\n        </Modal.Overlay>\n      </Modal>\n    </>\n  );\n};\n\nexport const ModalSmallWidth = {\n  parameters: {\n    chromatic: {\n      disable: false,\n      viewports: [320, 1200],\n    },\n  },\n  render: () => <TestModal />,\n};;\n\nexport const ModalRTL = {\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n  render: () => {\n    const theme = useTheme({canvas: {direction: ContentDirection.RTL}});\n    const model = useModalModel({\n      initialVisibility: \'visible\',\n    });\n    return (\n      <CanvasProvider theme={theme}>\n        <Modal model={model}>\n          <Modal.Overlay style={{animation: \'none\'}}>\n            <Modal.Card style={{animation: \'none\'}} width={300}>\n              <Modal.CloseIcon aria-label="" />\n              <Modal.Heading>למחוק פריט</Modal.Heading>\n              <Modal.Body>האם ברצונך למחוק פריט זה</Modal.Body>\n            </Modal.Card>\n          </Modal.Overlay>\n        </Modal>\n      </CanvasProvider>\n    );\n  },\n};;\n\nexport const CustomThemeModal = {\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n  render: () => {\n    const model = useModalModel({\n      initialVisibility: \'visible\',\n    });\n    return (\n      <CanvasProvider theme={{canvas: customColorTheme}}>\n        <Modal model={model}>\n          <Modal.Overlay style={{animation: \'none\'}}>\n            <Modal.Card style={{animation: \'none\'}}>\n              <Modal.CloseIcon aria-label="Close" />\n              <Modal.Heading>MIT License</Modal.Heading>\n              <Modal.Body>\n                <Box as="p" marginY="zero">\n                  Permission is hereby granted, free of charge, to any person obtaining a copy of\n                  this software and associated documentation files (the "Software").\n                </Box>\n              </Modal.Body>\n              <Flex gap="s" padding="xxs" marginTop="xxs">\n                <Modal.CloseButton as={PrimaryButton}>Acknowledge</Modal.CloseButton>\n                <Modal.CloseButton>Cancel</Modal.CloseButton>\n              </Flex>\n            </Modal.Card>\n          </Modal.Overlay>\n        </Modal>\n      </CanvasProvider>\n    );\n  },\n};\n',locationsMap:{"accessibility-test":{startLoc:{col:33,line:370},endLoc:{col:1,line:436},startBody:{col:33,line:370},endBody:{col:1,line:436}},"with-radio-buttons":{startLoc:{col:32,line:438},endLoc:{col:1,line:440},startBody:{col:32,line:438},endBody:{col:1,line:440}},"stacked-modals":{startLoc:{col:29,line:442},endLoc:{col:1,line:444},startBody:{col:29,line:442},endBody:{col:1,line:444}},"modal-with-popup":{startLoc:{col:30,line:446},endLoc:{col:1,line:448},startBody:{col:30,line:446},endBody:{col:1,line:448}},"with-tooltips":{startLoc:{col:28,line:450},endLoc:{col:1,line:452},startBody:{col:28,line:450},endBody:{col:1,line:452}},"iframe-test":{startLoc:{col:26,line:454},endLoc:{col:1,line:456},startBody:{col:26,line:454},endBody:{col:1,line:456}},"modal-small-width":{startLoc:{col:31,line:505},endLoc:{col:1,line:513},startBody:{col:31,line:505},endBody:{col:1,line:513}},"modal-rtl":{startLoc:{col:24,line:515},endLoc:{col:1,line:540},startBody:{col:24,line:515},endBody:{col:1,line:540}},"custom-theme-modal":{startLoc:{col:32,line:542},endLoc:{col:1,line:575},startBody:{col:32,line:542},endBody:{col:1,line:575}}}},storySource:{source:'import * as React from \'react\';\nimport ReactDOM from \'react-dom\';\nimport {customColorTheme} from \'../../../../utils/storybook\';\nimport {ContentDirection, CanvasProvider, useTheme} from \'@workday/canvas-kit-react/common\';\nimport {Modal, useModalModel} from \'@workday/canvas-kit-react/modal\';\nimport {DeleteButton, PrimaryButton} from \'@workday/canvas-kit-react/button\';\nimport {\n  Popup,\n  useCloseOnOutsideClick,\n  useCloseOnEscape,\n  usePopupModel,\n} from \'@workday/canvas-kit-react/popup\';\nimport {Flex, Box} from \'@workday/canvas-kit-react/layout\';\n\nimport {WithRadioButtons as WithRadioButtonsExample} from \'./examples/WithRadioButtons\';\nimport {StackedModals as StackedModalsExample} from \'./examples/StackedModals\';\nimport {WithTooltips as WithTooltipsExample} from \'./examples/WithTooltips\';\nimport {ModalWithPopup as ModalWithPopupExample} from \'./examples/ModalWithPopup\';\nimport {IframeTest as IframeTestExample} from \'./examples/IframeTest\';\n\nexport default {\n  title: \'Testing/Popups/Modal\',\n  component: Modal,\n  parameters: {\n    chromatic: {\n      pauseAnimationAtEnd: true,\n    },\n  },\n};\n\nexport const AccessibilityTest = {\n  render: () => {\n    return (\n      <>\n        <Modal>\n          <Modal.Target as={DeleteButton}>Delete Item</Modal.Target>\n          <Modal.Overlay>\n            <Modal.Card>\n              <Modal.CloseIcon aria-label="Close" />\n              <Modal.Heading>Delete Item</Modal.Heading>\n              <Modal.Body>\n                <p>Are you sure you want to delete the item?</p>\n                <Flex gap="s">\n                  <Modal.CloseButton as={DeleteButton}>Delete</Modal.CloseButton>\n                  <Modal.CloseButton>Cancel</Modal.CloseButton>\n                </Flex>\n              </Modal.Body>\n            </Modal.Card>\n          </Modal.Overlay>\n        </Modal>\n        <p>The content below should be hidden from assistive technology while the modal is open.</p>\n        <p>\n          <a href="#">Link</a>\n        </p>\n\n        <button type="button">Button</button>\n        <p tabIndex={0}>Focusable div</p>\n\n        <div>\n          <label htmlFor="text">Text input</label>\n          <input type="text" id="text" />\n        </div>\n\n        <div>\n          <label htmlFor="radio">Radio</label> <input type="radio" id="radio" />\n        </div>\n\n        <div>\n          <label htmlFor="check">Checkbox</label>\n          <input type="checkbox" />\n        </div>\n\n        <div>\n          <label htmlFor="textarea">Text area</label>\n          <textarea id="textarea"></textarea>\n        </div>\n\n        <div>\n          <label htmlFor="pet-select">Choose a pet:</label>\n          <select name="pets" id="pet-select">\n            <option value="">Please choose an option</option>\n            <option value="dog">Dog</option>\n            <option value="cat">Cat</option>\n            <option value="hamster">Hamster</option>\n            <option value="parrot">Parrot</option>\n            <option value="spider">Spider</option>\n            <option value="goldfish">Goldfish</option>\n          </select>\n        </div>\n\n        <div>\n          <iframe title="iframe test" src="/" width="300" height="300"></iframe>\n        </div>\n      </>\n    );\n  },\n};\n\nexport const WithRadioButtons = {\n  render: WithRadioButtonsExample,\n};\n\nexport const StackedModals = {\n  render: StackedModalsExample,\n};\n\nexport const ModalWithPopup = {\n  render: ModalWithPopupExample,\n};\n\nexport const WithTooltips = {\n  render: WithTooltipsExample,\n};\n\nexport const IframeTest = {\n  render: IframeTestExample,\n};\n\nconst TestContent = () => {\n  const content = (\n    <div\n      style={{\n        color: \'white\',\n        zIndex: 1,\n        position: \'relative\',\n      }}\n    >\n      This text should be invisible if the Modal is rendering correctly. It is white text on a white\n      background. The Popup Stack should set up the zIndex of the Modal\'s overlay. If rendered\n      incorrectly, the text will be visible on top of the overlay.\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.body);\n};\n\nconst TestModal = () => {\n  const model = useModalModel({\n    initialVisibility: \'visible\',\n  });\n  return (\n    <>\n      <TestContent />\n      <Modal model={model}>\n        <Modal.Overlay style={{animation: \'none\'}}>\n          <Modal.Card style={{animation: \'none\'}}>\n            <Modal.CloseIcon aria-label="Close" />\n            <Modal.Heading>Small Width Modal</Modal.Heading>\n            <Modal.Body>\n              <Box as="p" marginY="zero">\n                This modal should appear on the bottom of the screen for mobile devices. Chromatic\n                uses a version of Chrome that makes it appear on the top and is a known issue.\n              </Box>\n            </Modal.Body>\n            <Flex gap="s" padding="xxs" marginTop="xxs">\n              <Modal.CloseButton as={PrimaryButton}>Delete</Modal.CloseButton>\n              <Modal.CloseButton>Cancel</Modal.CloseButton>\n            </Flex>\n          </Modal.Card>\n        </Modal.Overlay>\n      </Modal>\n    </>\n  );\n};\n\nexport const ModalSmallWidth = {\n  parameters: {\n    chromatic: {\n      disable: false,\n      viewports: [320, 1200],\n    },\n  },\n  render: () => <TestModal />,\n};\n\nexport const ModalRTL = {\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n  render: () => {\n    const theme = useTheme({canvas: {direction: ContentDirection.RTL}});\n    const model = useModalModel({\n      initialVisibility: \'visible\',\n    });\n    return (\n      <CanvasProvider theme={theme}>\n        <Modal model={model}>\n          <Modal.Overlay style={{animation: \'none\'}}>\n            <Modal.Card style={{animation: \'none\'}} width={300}>\n              <Modal.CloseIcon aria-label="" />\n              <Modal.Heading>למחוק פריט</Modal.Heading>\n              <Modal.Body>האם ברצונך למחוק פריט זה</Modal.Body>\n            </Modal.Card>\n          </Modal.Overlay>\n        </Modal>\n      </CanvasProvider>\n    );\n  },\n};\n\nexport const CustomThemeModal = {\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n  render: () => {\n    const model = useModalModel({\n      initialVisibility: \'visible\',\n    });\n    return (\n      <CanvasProvider theme={{canvas: customColorTheme}}>\n        <Modal model={model}>\n          <Modal.Overlay style={{animation: \'none\'}}>\n            <Modal.Card style={{animation: \'none\'}}>\n              <Modal.CloseIcon aria-label="Close" />\n              <Modal.Heading>MIT License</Modal.Heading>\n              <Modal.Body>\n                <Box as="p" marginY="zero">\n                  Permission is hereby granted, free of charge, to any person obtaining a copy of\n                  this software and associated documentation files (the "Software").\n                </Box>\n              </Modal.Body>\n              <Flex gap="s" padding="xxs" marginTop="xxs">\n                <Modal.CloseButton as={PrimaryButton}>Acknowledge</Modal.CloseButton>\n                <Modal.CloseButton>Cancel</Modal.CloseButton>\n              </Flex>\n            </Modal.Card>\n          </Modal.Overlay>\n        </Modal>\n      </CanvasProvider>\n    );\n  },\n};\n',locationsMap:{"accessibility-test":{startLoc:{col:33,line:31},endLoc:{col:1,line:97},startBody:{col:33,line:31},endBody:{col:1,line:97}},"with-radio-buttons":{startLoc:{col:32,line:99},endLoc:{col:1,line:101},startBody:{col:32,line:99},endBody:{col:1,line:101}},"stacked-modals":{startLoc:{col:29,line:103},endLoc:{col:1,line:105},startBody:{col:29,line:103},endBody:{col:1,line:105}},"modal-with-popup":{startLoc:{col:30,line:107},endLoc:{col:1,line:109},startBody:{col:30,line:107},endBody:{col:1,line:109}},"with-tooltips":{startLoc:{col:28,line:111},endLoc:{col:1,line:113},startBody:{col:28,line:111},endBody:{col:1,line:113}},"iframe-test":{startLoc:{col:26,line:115},endLoc:{col:1,line:117},startBody:{col:26,line:115},endBody:{col:1,line:117}},"modal-small-width":{startLoc:{col:31,line:166},endLoc:{col:1,line:174},startBody:{col:31,line:166},endBody:{col:1,line:174}},"modal-rtl":{startLoc:{col:24,line:176},endLoc:{col:1,line:201},startBody:{col:24,line:176},endBody:{col:1,line:201}},"custom-theme-modal":{startLoc:{col:32,line:203},endLoc:{col:1,line:236},startBody:{col:32,line:203},endBody:{col:1,line:236}}}},chromatic:{pauseAnimationAtEnd:!0}}};exports.AccessibilityTest={render:()=>(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)(_modal.Modal,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.Target,{as:_button.DeleteButton,children:"Delete Item"}),(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Delete Item"}),(0,_jsxRuntime.jsxs)(_modal.Modal.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Are you sure you want to delete the item?"}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{as:_button.DeleteButton,children:"Delete"}),(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{children:"Cancel"})]})]})]})})]}),(0,_jsxRuntime.jsx)("p",{children:"The content below should be hidden from assistive technology while the modal is open."}),(0,_jsxRuntime.jsx)("p",{children:(0,_jsxRuntime.jsx)("a",{href:"#",children:"Link"})}),(0,_jsxRuntime.jsx)("button",{type:"button",children:"Button"}),(0,_jsxRuntime.jsx)("p",{tabIndex:0,children:"Focusable div"}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)("label",{htmlFor:"text",children:"Text input"}),(0,_jsxRuntime.jsx)("input",{type:"text",id:"text"})]}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)("label",{htmlFor:"radio",children:"Radio"})," ",(0,_jsxRuntime.jsx)("input",{type:"radio",id:"radio"})]}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)("label",{htmlFor:"check",children:"Checkbox"}),(0,_jsxRuntime.jsx)("input",{type:"checkbox"})]}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)("label",{htmlFor:"textarea",children:"Text area"}),(0,_jsxRuntime.jsx)("textarea",{id:"textarea"})]}),(0,_jsxRuntime.jsxs)("div",{children:[(0,_jsxRuntime.jsx)("label",{htmlFor:"pet-select",children:"Choose a pet:"}),(0,_jsxRuntime.jsxs)("select",{name:"pets",id:"pet-select",children:[(0,_jsxRuntime.jsx)("option",{value:"",children:"Please choose an option"}),(0,_jsxRuntime.jsx)("option",{value:"dog",children:"Dog"}),(0,_jsxRuntime.jsx)("option",{value:"cat",children:"Cat"}),(0,_jsxRuntime.jsx)("option",{value:"hamster",children:"Hamster"}),(0,_jsxRuntime.jsx)("option",{value:"parrot",children:"Parrot"}),(0,_jsxRuntime.jsx)("option",{value:"spider",children:"Spider"}),(0,_jsxRuntime.jsx)("option",{value:"goldfish",children:"Goldfish"})]})]}),(0,_jsxRuntime.jsx)("div",{children:(0,_jsxRuntime.jsx)("iframe",{title:"iframe test",src:"/",width:"300",height:"300"})})]})},exports.WithRadioButtons={render:_WithRadioButtons.WithRadioButtons},exports.StackedModals={render:_StackedModals.StackedModals},exports.ModalWithPopup={render:_ModalWithPopup.ModalWithPopup},exports.WithTooltips={render:_WithTooltips.WithTooltips},exports.IframeTest={render:_IframeTest.IframeTest};const TestContent=()=>{const content=(0,_jsxRuntime.jsx)("div",{style:{color:"white",zIndex:1,position:"relative"},children:"This text should be invisible if the Modal is rendering correctly. It is white text on a white background. The Popup Stack should set up the zIndex of the Modal's overlay. If rendered incorrectly, the text will be visible on top of the overlay."});return _reactDom.default.createPortal(content,document.body)},TestModal=()=>{const model=(0,_modal.useModalModel)({initialVisibility:"visible"});return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(TestContent,{}),(0,_jsxRuntime.jsx)(_modal.Modal,{model,children:(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{style:{animation:"none"},children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{style:{animation:"none"},children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Small Width Modal"}),(0,_jsxRuntime.jsx)(_modal.Modal.Body,{children:(0,_jsxRuntime.jsx)(_layout.Box,{as:"p",marginY:"zero",children:"This modal should appear on the bottom of the screen for mobile devices. Chromatic uses a version of Chrome that makes it appear on the top and is a known issue."})}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",padding:"xxs",marginTop:"xxs",children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{as:_button.PrimaryButton,children:"Delete"}),(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{children:"Cancel"})]})]})})})]})};exports.ModalSmallWidth={parameters:{chromatic:{disable:!1,viewports:[320,1200]}},render:()=>(0,_jsxRuntime.jsx)(TestModal,{})},exports.ModalRTL={parameters:{chromatic:{disable:!1}},render:()=>{const theme=(0,_common.useTheme)({canvas:{direction:_common.ContentDirection.RTL}}),model=(0,_modal.useModalModel)({initialVisibility:"visible"});return(0,_jsxRuntime.jsx)(_common.CanvasProvider,{theme,children:(0,_jsxRuntime.jsx)(_modal.Modal,{model,children:(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{style:{animation:"none"},children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{style:{animation:"none"},width:300,children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":""}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"למחוק פריט"}),(0,_jsxRuntime.jsx)(_modal.Modal.Body,{children:"האם ברצונך למחוק פריט זה"})]})})})})}},exports.CustomThemeModal={parameters:{chromatic:{disable:!1}},render:()=>{const model=(0,_modal.useModalModel)({initialVisibility:"visible"});return(0,_jsxRuntime.jsx)(_common.CanvasProvider,{theme:{canvas:_storybook.customColorTheme},children:(0,_jsxRuntime.jsx)(_modal.Modal,{model,children:(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{style:{animation:"none"},children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{style:{animation:"none"},children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"MIT License"}),(0,_jsxRuntime.jsx)(_modal.Modal.Body,{children:(0,_jsxRuntime.jsx)(_layout.Box,{as:"p",marginY:"zero",children:'Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software").'})}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",padding:"xxs",marginTop:"xxs",children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{as:_button.PrimaryButton,children:"Acknowledge"}),(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{children:"Cancel"})]})]})})})})}};module.exports.__namedExportsOrder=["WithTooltips","WithRadioButtons","StackedModals","ModalWithPopup","ModalSmallWidth","ModalRTL","IframeTest","CustomThemeModal","AccessibilityTest"]},"./modules/react/modal/stories/examples/IframeTest.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.IframeTest=void 0;var _modal=__webpack_require__("./modules/react/modal/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const IframeTest=()=>(0,_jsxRuntime.jsxs)(_modal.Modal,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.Target,{as:_button.DeleteButton,children:"Delete Item"}),(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Delete Item"}),(0,_jsxRuntime.jsxs)(_modal.Modal.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Are you sure you want to delete the item?"}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{as:_button.DeleteButton,children:"Delete"}),(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{children:"Cancel"})]}),(0,_jsxRuntime.jsx)("iframe",{role:"iframe",srcDoc:"<html><body>Hello, <b>world</b>.<button>iframe button 1</button><button data-testid='button2'>iframe button 2</button></body></html>"})]})]})})]});exports.IframeTest=IframeTest,IframeTest.displayName="IframeTest",IframeTest.__RAW__="import {Modal} from '@workday/canvas-kit-react/modal';\nimport {DeleteButton} from '@workday/canvas-kit-react/button';\nimport {Flex} from '@workday/canvas-kit-react/layout';\n\nexport const IframeTest = () => {\n  return (\n    <Modal>\n      <Modal.Target as={DeleteButton}>Delete Item</Modal.Target>\n      <Modal.Overlay>\n        <Modal.Card>\n          <Modal.CloseIcon aria-label=\"Close\" />\n          <Modal.Heading>Delete Item</Modal.Heading>\n          <Modal.Body>\n            <p>Are you sure you want to delete the item?</p>\n            <Flex gap=\"s\">\n              <Modal.CloseButton as={DeleteButton}>Delete</Modal.CloseButton>\n              <Modal.CloseButton>Cancel</Modal.CloseButton>\n            </Flex>\n            <iframe\n              role=\"iframe\"\n              srcDoc=\"<html><body>Hello, <b>world</b>.<button>iframe button 1</button><button data-testid='button2'>iframe button 2</button></body></html>\"\n            />\n          </Modal.Body>\n        </Modal.Card>\n      </Modal.Overlay>\n    </Modal>\n  );\n};\n"},"./modules/react/modal/stories/examples/ModalWithPopup.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ModalWithPopup=void 0;var _modal=__webpack_require__("./modules/react/modal/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_popup=__webpack_require__("./modules/react/popup/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ModalWithPopup=()=>{const modal=(0,_modal.useModalModel)(),popup=(0,_popup.usePopupModel)();return(0,_popup.useCloseOnOutsideClick)(popup),(0,_popup.useCloseOnEscape)(popup),(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{children:(0,_jsxRuntime.jsxs)(_modal.Modal,{model:modal,children:[(0,_jsxRuntime.jsx)(_modal.Modal.Target,{as:_button.DeleteButton,children:"Delete Item"}),(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Delete Item"}),(0,_jsxRuntime.jsxs)(_modal.Modal.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Are you sure you want to delete the item?"}),(0,_jsxRuntime.jsxs)(_popup.Popup,{model:popup,children:[(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",children:[(0,_jsxRuntime.jsx)(_popup.Popup.Target,{as:_button.DeleteButton,children:"Yes, Delete"}),(0,_jsxRuntime.jsx)(_popup.Popup.CloseButton,{children:"Cancel"})]}),(0,_jsxRuntime.jsx)(_popup.Popup.Popper,{children:(0,_jsxRuntime.jsxs)(_popup.Popup.Card,{children:[(0,_jsxRuntime.jsx)(_popup.Popup.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_popup.Popup.Heading,{children:"Really Delete Item"}),(0,_jsxRuntime.jsxs)(_popup.Popup.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Are you sure you'd like to delete the item titled 'My Item'?"}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",children:[(0,_jsxRuntime.jsx)(_popup.Popup.CloseButton,{as:_button.DeleteButton,onClick:event=>{modal.events.hide(event),console.log("Delete Item")},children:"Yes, Really Delete"}),(0,_jsxRuntime.jsx)(_popup.Popup.CloseButton,{children:"Cancel"})]})]})]})})]})]})]})})]})})};exports.ModalWithPopup=ModalWithPopup,ModalWithPopup.__RAW__="import {Modal, useModalModel} from '@workday/canvas-kit-react/modal';\nimport {DeleteButton} from '@workday/canvas-kit-react/button';\nimport {\n  Popup,\n  useCloseOnOutsideClick,\n  useCloseOnEscape,\n  usePopupModel,\n} from '@workday/canvas-kit-react/popup';\nimport {Flex} from '@workday/canvas-kit-react/layout';\n\nexport const ModalWithPopup = () => {\n  const modal = useModalModel();\n  const popup = usePopupModel();\n\n  const handleDelete = () => {\n    console.log('Delete Item');\n  };\n\n  useCloseOnOutsideClick(popup);\n  useCloseOnEscape(popup);\n\n  return (\n    <>\n      <Modal model={modal}>\n        <Modal.Target as={DeleteButton}>Delete Item</Modal.Target>\n        <Modal.Overlay>\n          <Modal.Card>\n            <Modal.CloseIcon aria-label=\"Close\" />\n            <Modal.Heading>Delete Item</Modal.Heading>\n            <Modal.Body>\n              <p>Are you sure you want to delete the item?</p>\n              <Popup model={popup}>\n                <Flex gap=\"s\">\n                  <Popup.Target as={DeleteButton}>Yes, Delete</Popup.Target>\n                  <Popup.CloseButton>Cancel</Popup.CloseButton>\n                </Flex>\n                <Popup.Popper>\n                  <Popup.Card>\n                    <Popup.CloseIcon aria-label=\"Close\" />\n                    <Popup.Heading>Really Delete Item</Popup.Heading>\n                    <Popup.Body>\n                      <p>Are you sure you'd like to delete the item titled 'My Item'?</p>\n                      <Flex gap=\"s\">\n                        <Popup.CloseButton\n                          as={DeleteButton}\n                          onClick={event => {\n                            modal.events.hide(event);\n                            handleDelete();\n                          }}\n                        >\n                          Yes, Really Delete\n                        </Popup.CloseButton>\n                        <Popup.CloseButton>Cancel</Popup.CloseButton>\n                      </Flex>\n                    </Popup.Body>\n                  </Popup.Card>\n                </Popup.Popper>\n              </Popup>\n            </Modal.Body>\n          </Modal.Card>\n        </Modal.Overlay>\n      </Modal>\n    </>\n  );\n};\n"},"./modules/react/modal/stories/examples/StackedModals.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StackedModals=void 0;var _modal=__webpack_require__("./modules/react/modal/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const StackedModals=()=>{const model=(0,_modal.useModalModel)();return(0,_jsxRuntime.jsxs)(_modal.Modal,{model,children:[(0,_jsxRuntime.jsx)(_modal.Modal.Target,{as:_button.DeleteButton,children:"Delete Item"}),(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Delete Item"}),(0,_jsxRuntime.jsxs)(_modal.Modal.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Are you sure you want to delete the item?"}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",children:[(0,_jsxRuntime.jsxs)(_modal.Modal,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.Target,{as:_button.DeleteButton,children:"Yes, Delete"}),(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Really Delete Item"}),(0,_jsxRuntime.jsxs)(_modal.Modal.Body,{children:[(0,_jsxRuntime.jsxs)("p",{children:["Are you ",(0,_jsxRuntime.jsx)("em",{children:"really"})," sure you want to delete the item?"]}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{as:_button.DeleteButton,onClick:event=>{model.events.hide(event),console.log("Delete Item")},children:"Yes, Really Delete"}),(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{children:"Cancel"})]})]})]})})]}),(0,_jsxRuntime.jsx)(_modal.Modal.CloseButton,{children:"Cancel"})]})]})]})})]})};exports.StackedModals=StackedModals,StackedModals.displayName="StackedModals",StackedModals.__RAW__="import {Modal, useModalModel} from '@workday/canvas-kit-react/modal';\nimport {DeleteButton} from '@workday/canvas-kit-react/button';\nimport {Flex} from '@workday/canvas-kit-react/layout';\n\nexport const StackedModals = () => {\n  const model = useModalModel();\n\n  const handleDelete = () => {\n    console.log('Delete Item');\n  };\n\n  return (\n    <Modal model={model}>\n      <Modal.Target as={DeleteButton}>Delete Item</Modal.Target>\n      <Modal.Overlay>\n        <Modal.Card>\n          <Modal.CloseIcon aria-label=\"Close\" />\n          <Modal.Heading>Delete Item</Modal.Heading>\n          <Modal.Body>\n            <p>Are you sure you want to delete the item?</p>\n            <Flex gap=\"s\">\n              <Modal>\n                <Modal.Target as={DeleteButton}>Yes, Delete</Modal.Target>\n                <Modal.Overlay>\n                  <Modal.Card>\n                    <Modal.CloseIcon aria-label=\"Close\" />\n                    <Modal.Heading>Really Delete Item</Modal.Heading>\n                    <Modal.Body>\n                      <p>\n                        Are you <em>really</em> sure you want to delete the item?\n                      </p>\n                      <Flex gap=\"s\">\n                        <Modal.CloseButton\n                          as={DeleteButton}\n                          onClick={event => {\n                            model.events.hide(event);\n                            handleDelete();\n                          }}\n                        >\n                          Yes, Really Delete\n                        </Modal.CloseButton>\n                        <Modal.CloseButton>Cancel</Modal.CloseButton>\n                      </Flex>\n                    </Modal.Body>\n                  </Modal.Card>\n                </Modal.Overlay>\n              </Modal>\n              <Modal.CloseButton>Cancel</Modal.CloseButton>\n            </Flex>\n          </Modal.Body>\n        </Modal.Card>\n      </Modal.Overlay>\n    </Modal>\n  );\n};\n"},"./modules/react/modal/stories/examples/WithRadioButtons.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WithRadioButtons=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_modal=__webpack_require__("./modules/react/modal/index.ts"),_radio=__webpack_require__("./modules/react/radio/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const WithRadioButtons=()=>{const[value,setValue]=React.useState("");return(0,_jsxRuntime.jsxs)(_modal.Modal,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.Target,{children:"With Radio Buttons"}),(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Select Item"}),(0,_jsxRuntime.jsx)(_modal.Modal.Body,{children:(0,_jsxRuntime.jsxs)(_radio.RadioGroup,{name:"contact","data-testid":"radiogroup",value,onChange:value=>setValue(String(value)),children:[(0,_jsxRuntime.jsx)(_radio.Radio,{id:"1",value:"email",label:"E-mail"}),(0,_jsxRuntime.jsx)(_radio.Radio,{id:"2",value:"phone",label:"Phone"})]})})]})})]})};exports.WithRadioButtons=WithRadioButtons,WithRadioButtons.displayName="WithRadioButtons",WithRadioButtons.__RAW__='import * as React from \'react\';\nimport {Modal} from \'@workday/canvas-kit-react/modal\';\nimport {Radio, RadioGroup} from \'@workday/canvas-kit-react/radio\';\n\nexport const WithRadioButtons = () => {\n  const [value, setValue] = React.useState(\'\');\n\n  return (\n    <Modal>\n      <Modal.Target>With Radio Buttons</Modal.Target>\n      <Modal.Overlay>\n        <Modal.Card>\n          <Modal.CloseIcon aria-label="Close" />\n          <Modal.Heading>Select Item</Modal.Heading>\n          <Modal.Body>\n            <RadioGroup\n              name="contact"\n              data-testid="radiogroup"\n              value={value}\n              onChange={value => setValue(String(value))}\n            >\n              <Radio id="1" value="email" label="E-mail" />\n              <Radio id="2" value="phone" label="Phone" />\n            </RadioGroup>\n          </Modal.Body>\n        </Modal.Card>\n      </Modal.Overlay>\n    </Modal>\n  );\n};\n'},"./modules/react/modal/stories/examples/WithTooltips.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WithTooltips=void 0;(function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n})(__webpack_require__("./node_modules/react/index.js"));var _modal=__webpack_require__("./modules/react/modal/index.ts"),_popup=__webpack_require__("./modules/react/popup/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const WithTooltips=()=>{const modal=(0,_modal.useModalModel)(),popup1=(0,_popup.usePopupModel)(),popup2=(0,_popup.usePopupModel)(),closeModal=event=>modal.events.hide(event);return(0,_popup.useCloseOnOutsideClick)(popup1),(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)(_modal.Modal,{model:modal,children:[(0,_jsxRuntime.jsx)(_modal.Modal.Target,{children:"Open Modal"}),(0,_jsxRuntime.jsx)(_modal.Modal.Overlay,{children:(0,_jsxRuntime.jsxs)(_modal.Modal.Card,{width:"auto",children:[(0,_jsxRuntime.jsx)(_modal.Modal.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_modal.Modal.Heading,{children:"Open Modal"}),(0,_jsxRuntime.jsxs)(_modal.Modal.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Open a hidable and non-hidable popups"}),(0,_jsxRuntime.jsxs)(_layout.Flex,{gap:"s",children:[(0,_jsxRuntime.jsx)(_popup.Popup.Target,{model:popup1,children:"Hidable Popup"}),(0,_jsxRuntime.jsx)(_popup.Popup.Target,{model:popup2,children:"Non-hidable Popup"}),(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{title:"Not so sure",type:"muted",children:(0,_jsxRuntime.jsx)(_popup.Popup.CloseButton,{onClick:closeModal,children:"Cancel"})})]})]})]})})]}),(0,_jsxRuntime.jsx)(_popup.Popup,{model:popup1,children:(0,_jsxRuntime.jsx)(_popup.Popup.Popper,{children:(0,_jsxRuntime.jsxs)(_popup.Popup.Card,{children:[(0,_jsxRuntime.jsx)(_popup.Popup.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_popup.Popup.Heading,{children:"Hidable Popup"}),(0,_jsxRuntime.jsxs)(_popup.Popup.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Pressing 'OK' will close the modal"}),(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{placement:"left",title:"Really, Really, Really, Really, Really sure",type:"muted",children:(0,_jsxRuntime.jsx)(_popup.Popup.CloseButton,{onClick:closeModal,children:"OK"})})]})]})})}),(0,_jsxRuntime.jsx)(_popup.Popup,{model:popup2,children:(0,_jsxRuntime.jsx)(_popup.Popup.Popper,{children:(0,_jsxRuntime.jsxs)(_popup.Popup.Card,{children:[(0,_jsxRuntime.jsx)(_popup.Popup.CloseIcon,{"aria-label":"Close"}),(0,_jsxRuntime.jsx)(_popup.Popup.Heading,{children:"Non-hidable Popup"}),(0,_jsxRuntime.jsxs)(_popup.Popup.Body,{children:[(0,_jsxRuntime.jsx)("p",{children:"Pressing 'OK' will close the modal"}),(0,_jsxRuntime.jsx)(_tooltip.Tooltip,{placement:"left",title:"Really, Really, Really, Really, Really sure",type:"muted",children:(0,_jsxRuntime.jsx)(_popup.Popup.CloseButton,{onClick:closeModal,children:"OK"})})]})]})})})]})};exports.WithTooltips=WithTooltips,WithTooltips.__RAW__='import * as React from \'react\';\nimport {Modal, useModalModel} from \'@workday/canvas-kit-react/modal\';\nimport {Popup, useCloseOnOutsideClick, usePopupModel} from \'@workday/canvas-kit-react/popup\';\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\nimport {Tooltip} from \'@workday/canvas-kit-react/tooltip\';\n\nexport const WithTooltips = () => {\n  const modal = useModalModel();\n  const popup1 = usePopupModel();\n  const popup2 = usePopupModel();\n  const closeModal = (event: React.MouseEvent) => modal.events.hide(event);\n\n  useCloseOnOutsideClick(popup1);\n\n  return (\n    <>\n      <Modal model={modal}>\n        <Modal.Target>Open Modal</Modal.Target>\n        <Modal.Overlay>\n          <Modal.Card width={\'auto\'}>\n            <Modal.CloseIcon aria-label="Close" />\n            <Modal.Heading>Open Modal</Modal.Heading>\n            <Modal.Body>\n              <p>Open a hidable and non-hidable popups</p>\n              <Flex gap="s">\n                <Popup.Target model={popup1}>Hidable Popup</Popup.Target>\n                <Popup.Target model={popup2}>Non-hidable Popup</Popup.Target>\n                <Tooltip title="Not so sure" type="muted">\n                  <Popup.CloseButton onClick={closeModal}>Cancel</Popup.CloseButton>\n                </Tooltip>\n              </Flex>\n            </Modal.Body>\n          </Modal.Card>\n        </Modal.Overlay>\n      </Modal>\n      <Popup model={popup1}>\n        <Popup.Popper>\n          <Popup.Card>\n            <Popup.CloseIcon aria-label="Close" />\n            <Popup.Heading>Hidable Popup</Popup.Heading>\n            <Popup.Body>\n              <p>Pressing \'OK\' will close the modal</p>\n              <Tooltip\n                placement="left"\n                title="Really, Really, Really, Really, Really sure"\n                type="muted"\n              >\n                <Popup.CloseButton onClick={closeModal}>OK</Popup.CloseButton>\n              </Tooltip>\n            </Popup.Body>\n          </Popup.Card>\n        </Popup.Popper>\n      </Popup>\n      <Popup model={popup2}>\n        <Popup.Popper>\n          <Popup.Card>\n            <Popup.CloseIcon aria-label="Close" />\n            <Popup.Heading>Non-hidable Popup</Popup.Heading>\n            <Popup.Body>\n              <p>Pressing \'OK\' will close the modal</p>\n              <Tooltip\n                placement="left"\n                title="Really, Really, Really, Really, Really sure"\n                type="muted"\n              >\n                <Popup.CloseButton onClick={closeModal}>OK</Popup.CloseButton>\n              </Tooltip>\n            </Popup.Body>\n          </Popup.Card>\n        </Popup.Popper>\n      </Popup>\n    </>\n  );\n};\n'},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText}}]);