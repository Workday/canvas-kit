"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[3818],{"./modules/react/breadcrumbs/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithOverflowMenuHavingTwoItems=exports.WithOverflowMenu=exports.RTLStates=exports.DefaultStates=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_testing=__webpack_require__("./modules/react/testing/index.ts"),_breadcrumbs=__webpack_require__("./modules/react/breadcrumbs/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Navigation/Breadcrumbs",component:_breadcrumbs.Breadcrumbs,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\n\\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\\n\\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\\n\\nexport default {\\n  title: 'Testing/Navigation/Breadcrumbs',\\n  component: Breadcrumbs,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const DefaultStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\">Home</Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                      Breakfast Menus\\n                    </Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                    House Specialty Pies\\n                  </Breadcrumbs.CurrentItem>\\n                </Breadcrumbs.List>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenu = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [items] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Third Link', link: '#'},\\n      {id: '4', text: 'Fourth Link', link: '#'},\\n      {id: '5', text: 'Fifth Link', link: '#'},\\n      {id: '6', text: 'Sixth Link', link: '#'},\\n      {id: '7', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Lowest level', props: {maxWidth: 150}},\\n            {label: '2 items displayed', props: {maxWidth: 250}},\\n            {label: '3 items displayed', props: {maxWidth: 350}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenuHavingTwoItems = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [twoItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Current'},\\n    ]);\\n\\n    const [threeItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={props.items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const RTLStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\\n                <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                  <Breadcrumbs.List>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\">תנ״ך</Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                        משלי\\n                      </Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\\n                    </Breadcrumbs.CurrentItem>\\n                  </Breadcrumbs.List>\\n                </Breadcrumbs>\\n              </CanvasProvider>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"DefaultStates\": {\n    \"startLoc\": {\n      \"col\": 29,\n      \"line\": 18\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 52\n    },\n    \"startBody\": {\n      \"col\": 29,\n      \"line\": 18\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 52\n    }\n  },\n  \"WithOverflowMenu\": {\n    \"startLoc\": {\n      \"col\": 32,\n      \"line\": 54\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 115\n    },\n    \"startBody\": {\n      \"col\": 32,\n      \"line\": 54\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 115\n    }\n  },\n  \"WithOverflowMenuHavingTwoItems\": {\n    \"startLoc\": {\n      \"col\": 46,\n      \"line\": 117\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 178\n    },\n    \"startBody\": {\n      \"col\": 46,\n      \"line\": 117\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 178\n    }\n  },\n  \"RTLStates\": {\n    \"startLoc\": {\n      \"col\": 25,\n      \"line\": 180\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 216\n    },\n    \"startBody\": {\n      \"col\": 25,\n      \"line\": 180\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 216\n    }\n  }\n};\n    \nimport React from 'react';\n\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\n\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\n\nexport default {\n  title: 'Testing/Navigation/Breadcrumbs',\n  component: Breadcrumbs,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\n\\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\\n\\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\\n\\nexport default {\\n  title: 'Testing/Navigation/Breadcrumbs',\\n  component: Breadcrumbs,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const DefaultStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\">Home</Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                      Breakfast Menus\\n                    </Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                    House Specialty Pies\\n                  </Breadcrumbs.CurrentItem>\\n                </Breadcrumbs.List>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenu = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [items] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Third Link', link: '#'},\\n      {id: '4', text: 'Fourth Link', link: '#'},\\n      {id: '5', text: 'Fifth Link', link: '#'},\\n      {id: '6', text: 'Sixth Link', link: '#'},\\n      {id: '7', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Lowest level', props: {maxWidth: 150}},\\n            {label: '2 items displayed', props: {maxWidth: 250}},\\n            {label: '3 items displayed', props: {maxWidth: 350}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenuHavingTwoItems = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [twoItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Current'},\\n    ]);\\n\\n    const [threeItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={props.items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const RTLStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\\n                <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                  <Breadcrumbs.List>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\">תנ״ך</Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                        משלי\\n                      </Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\\n                    </Breadcrumbs.CurrentItem>\\n                  </Breadcrumbs.List>\\n                </Breadcrumbs>\\n              </CanvasProvider>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\",\n    \"locationsMap\": {\n      \"default-states\": {\n        \"startLoc\": {\n          \"col\": 29,\n          \"line\": 18\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 52\n        },\n        \"startBody\": {\n          \"col\": 29,\n          \"line\": 18\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 52\n        }\n      },\n      \"with-overflow-menu\": {\n        \"startLoc\": {\n          \"col\": 32,\n          \"line\": 54\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 115\n        },\n        \"startBody\": {\n          \"col\": 32,\n          \"line\": 54\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 115\n        }\n      },\n      \"with-overflow-menu-having-two-items\": {\n        \"startLoc\": {\n          \"col\": 46,\n          \"line\": 117\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 178\n        },\n        \"startBody\": {\n          \"col\": 46,\n          \"line\": 117\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 178\n        }\n      },\n      \"rtl-states\": {\n        \"startLoc\": {\n          \"col\": 25,\n          \"line\": 180\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 216\n        },\n        \"startBody\": {\n          \"col\": 25,\n          \"line\": 180\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 216\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const DefaultStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\">Home</Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                      Breakfast Menus\n                    </Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                    House Specialty Pies\n                  </Breadcrumbs.CurrentItem>\n                </Breadcrumbs.List>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};;\n\nexport const WithOverflowMenu = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [items] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Third Link', link: '#'},\n      {id: '4', text: 'Fourth Link', link: '#'},\n      {id: '5', text: 'Fifth Link', link: '#'},\n      {id: '6', text: 'Sixth Link', link: '#'},\n      {id: '7', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Lowest level', props: {maxWidth: 150}},\n            {label: '2 items displayed', props: {maxWidth: 250}},\n            {label: '3 items displayed', props: {maxWidth: 350}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};;\n\nexport const WithOverflowMenuHavingTwoItems = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [twoItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Current'},\n    ]);\n\n    const [threeItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={props.items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};;\n\nexport const RTLStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n                <Breadcrumbs aria-label=\"Breadcrumbs\">\n                  <Breadcrumbs.List>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\">תנ״ך</Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                        משלי\n                      </Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\n                    </Breadcrumbs.CurrentItem>\n                  </Breadcrumbs.List>\n                </Breadcrumbs>\n              </CanvasProvider>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"default-states":{startLoc:{col:29,line:177},endLoc:{col:1,line:211},startBody:{col:29,line:177},endBody:{col:1,line:211}},"with-overflow-menu":{startLoc:{col:32,line:213},endLoc:{col:1,line:274},startBody:{col:32,line:213},endBody:{col:1,line:274}},"with-overflow-menu-having-two-items":{startLoc:{col:46,line:276},endLoc:{col:1,line:337},startBody:{col:46,line:276},endBody:{col:1,line:337}},"rtl-states":{startLoc:{col:25,line:339},endLoc:{col:1,line:375},startBody:{col:25,line:339},endBody:{col:1,line:375}}}},storySource:{source:"import React from 'react';\n\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\n\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\n\nexport default {\n  title: 'Testing/Navigation/Breadcrumbs',\n  component: Breadcrumbs,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const DefaultStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\">Home</Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                      Breakfast Menus\n                    </Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                    House Specialty Pies\n                  </Breadcrumbs.CurrentItem>\n                </Breadcrumbs.List>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n\nexport const WithOverflowMenu = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [items] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Third Link', link: '#'},\n      {id: '4', text: 'Fourth Link', link: '#'},\n      {id: '5', text: 'Fifth Link', link: '#'},\n      {id: '6', text: 'Sixth Link', link: '#'},\n      {id: '7', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Lowest level', props: {maxWidth: 150}},\n            {label: '2 items displayed', props: {maxWidth: 250}},\n            {label: '3 items displayed', props: {maxWidth: 350}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n\nexport const WithOverflowMenuHavingTwoItems = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [twoItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Current'},\n    ]);\n\n    const [threeItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={props.items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n\nexport const RTLStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n                <Breadcrumbs aria-label=\"Breadcrumbs\">\n                  <Breadcrumbs.List>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\">תנ״ך</Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                        משלי\n                      </Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\n                    </Breadcrumbs.CurrentItem>\n                  </Breadcrumbs.List>\n                </Breadcrumbs>\n              </CanvasProvider>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"default-states":{startLoc:{col:29,line:18},endLoc:{col:1,line:52},startBody:{col:29,line:18},endBody:{col:1,line:52}},"with-overflow-menu":{startLoc:{col:32,line:54},endLoc:{col:1,line:115},startBody:{col:32,line:54},endBody:{col:1,line:115}},"with-overflow-menu-having-two-items":{startLoc:{col:46,line:117},endLoc:{col:1,line:178},startBody:{col:46,line:117},endBody:{col:1,line:178}},"rtl-states":{startLoc:{col:25,line:180},endLoc:{col:1,line:216},startBody:{col:25,line:180},endBody:{col:1,line:216}}}},chromatic:{disable:!1}}};exports.DefaultStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Without truncation",props:{}},{label:"With Truncated items",props:{isTruncated:!0}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs,{"aria-label":"Breadcrumbs",children:(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs.List,{children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",children:"Home"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",maxWidth:props.isTruncated?100:void 0,children:"Breakfast Menus"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{maxWidth:props.isTruncated?100:void 0,children:"House Specialty Pies"})]})})})})},exports.WithOverflowMenu={render:()=>{const[items]=_react.default.useState([{id:"1",text:"Home",link:"/"},{id:"2",text:"Second Link",link:"#"},{id:"3",text:"Third Link",link:"#"},{id:"4",text:"Fourth Link",link:"#"},{id:"5",text:"Fifth Link",link:"#"},{id:"6",text:"Sixth Link",link:"#"},{id:"7",text:"Current"}]);return(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Lowest level",props:{maxWidth:150}},{label:"2 items displayed",props:{maxWidth:250}},{label:"3 items displayed",props:{maxWidth:350}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs,{items,"aria-label":"Breadcrumbs",children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.List,{maxWidth:props.maxWidth,overflowButton:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.OverflowButton,{"aria-label":"More links"}),children:item=>item.link?(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:item.link,children:item.text})}):(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{children:item.text})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Popper,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Card,{maxWidth:300,maxHeight:200,children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.List,{children:item=>(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Item,{children:item.text})})})})]})})})}},exports.WithOverflowMenuHavingTwoItems={render:()=>{const[twoItems]=_react.default.useState([{id:"1",text:"Home",link:"/"},{id:"2",text:"Current"}]),[threeItems]=_react.default.useState([{id:"1",text:"Home",link:"/"},{id:"2",text:"Second Link",link:"#"},{id:"3",text:"Current"}]);return(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Overflow with only 2 items total",props:{maxWidth:150,items:twoItems}},{label:"Overflow with only 3 items total",props:{maxWidth:250,items:threeItems}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs,{items:props.items,"aria-label":"Breadcrumbs",children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.List,{maxWidth:props.maxWidth,overflowButton:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.OverflowButton,{"aria-label":"More links"}),children:item=>item.link?(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:item.link,children:item.text})}):(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{children:item.text})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Popper,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Card,{maxWidth:300,maxHeight:200,children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.List,{children:item=>(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Item,{children:item.text})})})})]})})})}},exports.RTLStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Without truncation",props:{}},{label:"With Truncated items",props:{isTruncated:!0}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsx)(_common.CanvasProvider,{theme:{canvas:{direction:_common.ContentDirection.RTL}},children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs,{"aria-label":"Breadcrumbs",children:(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs.List,{children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",children:"תנ״ך"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",maxWidth:props.isTruncated?100:void 0,children:"משלי"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{maxWidth:props.isTruncated?100:void 0,children:"בני תורתי אל־תשכח ומצותי יצר לבך׃"})]})})})})})};module.exports.__namedExportsOrder=["WithOverflowMenuHavingTwoItems","WithOverflowMenu","RTLStates","DefaultStates"]},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText},"./node_modules/react-virtual/dist/react-virtual.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{defaultRangeExtractor:()=>defaultRangeExtractor,useVirtual:()=>useVirtual});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var rafId,props=["bottom","height","left","right","top","width"],observedNodes=new Map,run=function run(){var changedStates=[];observedNodes.forEach((function(state,node){var newRect=node.getBoundingClientRect();(function rectChanged(a,b){return void 0===a&&(a={}),void 0===b&&(b={}),props.some((function(prop){return a[prop]!==b[prop]}))})(newRect,state.rect)&&(state.rect=newRect,changedStates.push(state))})),changedStates.forEach((function(state){state.callbacks.forEach((function(cb){return cb(state.rect)}))})),rafId=window.requestAnimationFrame(run)};var useIsomorphicLayoutEffect="undefined"!=typeof window?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect;function useRect(nodeRef,initialRect){void 0===initialRect&&(initialRect={width:0,height:0});var _React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(nodeRef.current),element=_React$useState[0],setElement=_React$useState[1],_React$useReducer=react__WEBPACK_IMPORTED_MODULE_0__.useReducer(rectReducer,initialRect),rect=_React$useReducer[0],dispatch=_React$useReducer[1],initialRectSet=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);return useIsomorphicLayoutEffect((function(){nodeRef.current!==element&&setElement(nodeRef.current)})),useIsomorphicLayoutEffect((function(){if(element&&!initialRectSet.current){initialRectSet.current=!0;var _rect=element.getBoundingClientRect();dispatch({rect:_rect})}}),[element]),react__WEBPACK_IMPORTED_MODULE_0__.useEffect((function(){if(element){var observer=function observeRect(node,cb){return{observe:function observe(){var wasEmpty=0===observedNodes.size;observedNodes.has(node)?observedNodes.get(node).callbacks.push(cb):observedNodes.set(node,{rect:void 0,hasRectChanged:!1,callbacks:[cb]}),wasEmpty&&run()},unobserve:function unobserve(){var state=observedNodes.get(node);if(state){var index=state.callbacks.indexOf(cb);index>=0&&state.callbacks.splice(index,1),state.callbacks.length||observedNodes.delete(node),observedNodes.size||cancelAnimationFrame(rafId)}}}}(element,(function(rect){dispatch({rect})}));return observer.observe(),function(){observer.unobserve()}}}),[element]),rect}function rectReducer(state,action){var rect=action.rect;return state.height!==rect.height||state.width!==rect.width?rect:state}var defaultEstimateSize=function defaultEstimateSize(){return 50},defaultKeyExtractor=function defaultKeyExtractor(index){return index},defaultMeasureSize=function defaultMeasureSize(el,horizontal){return el[horizontal?"offsetWidth":"offsetHeight"]},defaultRangeExtractor=function defaultRangeExtractor(range){for(var start=Math.max(range.start-range.overscan,0),end=Math.min(range.end+range.overscan,range.size-1),arr=[],i=start;i<=end;i++)arr.push(i);return arr};function useVirtual(_ref){var _measurements,_ref$size=_ref.size,size=void 0===_ref$size?0:_ref$size,_ref$estimateSize=_ref.estimateSize,estimateSize=void 0===_ref$estimateSize?defaultEstimateSize:_ref$estimateSize,_ref$overscan=_ref.overscan,overscan=void 0===_ref$overscan?1:_ref$overscan,_ref$paddingStart=_ref.paddingStart,paddingStart=void 0===_ref$paddingStart?0:_ref$paddingStart,_ref$paddingEnd=_ref.paddingEnd,paddingEnd=void 0===_ref$paddingEnd?0:_ref$paddingEnd,parentRef=_ref.parentRef,horizontal=_ref.horizontal,scrollToFn=_ref.scrollToFn,useObserver=_ref.useObserver,initialRect=_ref.initialRect,onScrollElement=_ref.onScrollElement,scrollOffsetFn=_ref.scrollOffsetFn,_ref$keyExtractor=_ref.keyExtractor,keyExtractor=void 0===_ref$keyExtractor?defaultKeyExtractor:_ref$keyExtractor,_ref$measureSize=_ref.measureSize,measureSize=void 0===_ref$measureSize?defaultMeasureSize:_ref$measureSize,_ref$rangeExtractor=_ref.rangeExtractor,rangeExtractor=void 0===_ref$rangeExtractor?defaultRangeExtractor:_ref$rangeExtractor,sizeKey=horizontal?"width":"height",scrollKey=horizontal?"scrollLeft":"scrollTop",latestRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef({scrollOffset:0,measurements:[]}),_React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),scrollOffset=_React$useState[0],setScrollOffset=_React$useState[1];latestRef.current.scrollOffset=scrollOffset;var outerSize=(useObserver||useRect)(parentRef,initialRect)[sizeKey];latestRef.current.outerSize=outerSize;var defaultScrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){parentRef.current&&(parentRef.current[scrollKey]=offset)}),[parentRef,scrollKey]),resolvedScrollToFn=scrollToFn||defaultScrollToFn;scrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){resolvedScrollToFn(offset,defaultScrollToFn)}),[defaultScrollToFn,resolvedScrollToFn]);var _React$useState2=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),measuredCache=_React$useState2[0],setMeasuredCache=_React$useState2[1],measure=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){return setMeasuredCache({})}),[]),pendingMeasuredCacheIndexesRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef([]),measurements=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){var min=pendingMeasuredCacheIndexesRef.current.length>0?Math.min.apply(Math,pendingMeasuredCacheIndexesRef.current):0;pendingMeasuredCacheIndexesRef.current=[];for(var measurements=latestRef.current.measurements.slice(0,min),i=min;i<size;i++){var key=keyExtractor(i),measuredSize=measuredCache[key],_start=measurements[i-1]?measurements[i-1].end:paddingStart,_size="number"==typeof measuredSize?measuredSize:estimateSize(i),_end=_start+_size;measurements[i]={index:i,start:_start,size:_size,end:_end,key}}return measurements}),[estimateSize,measuredCache,paddingStart,size,keyExtractor]),totalSize=((null==(_measurements=measurements[size-1])?void 0:_measurements.end)||paddingStart)+paddingEnd;latestRef.current.measurements=measurements,latestRef.current.totalSize=totalSize;var element=onScrollElement?onScrollElement.current:parentRef.current,scrollOffsetFnRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(scrollOffsetFn);scrollOffsetFnRef.current=scrollOffsetFn,useIsomorphicLayoutEffect((function(){if(element){var onScroll=function onScroll(event){var offset=scrollOffsetFnRef.current?scrollOffsetFnRef.current(event):element[scrollKey];setScrollOffset(offset)};return onScroll(),element.addEventListener("scroll",onScroll,{capture:!1,passive:!0}),function(){element.removeEventListener("scroll",onScroll)}}setScrollOffset(0)}),[element,scrollKey]);var _calculateRange=function calculateRange(_ref4){var measurements=_ref4.measurements,outerSize=_ref4.outerSize,scrollOffset=_ref4.scrollOffset,size=measurements.length-1,getOffset=function getOffset(index){return measurements[index].start},start=findNearestBinarySearch(0,size,getOffset,scrollOffset),end=start;for(;end<size&&measurements[end].end<scrollOffset+outerSize;)end++;return{start,end}}(latestRef.current),start=_calculateRange.start,end=_calculateRange.end,indexes=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return rangeExtractor({start,end,overscan,size:measurements.length})}),[start,end,overscan,measurements.length,rangeExtractor]),measureSizeRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(measureSize);measureSizeRef.current=measureSize;var virtualItems=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){for(var virtualItems=[],_loop=function _loop(k,len){var i=indexes[k],item=_extends(_extends({},measurements[i]),{},{measureRef:function measureRef(el){if(el){var measuredSize=measureSizeRef.current(el,horizontal);if(measuredSize!==item.size){var _scrollOffset=latestRef.current.scrollOffset;item.start<_scrollOffset&&defaultScrollToFn(_scrollOffset+(measuredSize-item.size)),pendingMeasuredCacheIndexesRef.current.push(i),setMeasuredCache((function(old){var _extends2;return _extends(_extends({},old),{},((_extends2={})[item.key]=measuredSize,_extends2))}))}}}});virtualItems.push(item)},k=0,len=indexes.length;k<len;k++)_loop(k);return virtualItems}),[indexes,defaultScrollToFn,horizontal,measurements]),mountedRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);useIsomorphicLayoutEffect((function(){mountedRef.current&&setMeasuredCache({}),mountedRef.current=!0}),[estimateSize]);var scrollToOffset=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(toOffset,_temp){var _ref2$align=(void 0===_temp?{}:_temp).align,align=void 0===_ref2$align?"start":_ref2$align,_latestRef$current=latestRef.current,scrollOffset=_latestRef$current.scrollOffset,outerSize=_latestRef$current.outerSize;"auto"===align&&(align=toOffset<=scrollOffset?"start":toOffset>=scrollOffset+outerSize?"end":"start"),"start"===align?scrollToFn(toOffset):"end"===align?scrollToFn(toOffset-outerSize):"center"===align&&scrollToFn(toOffset-outerSize/2)}),[scrollToFn]),tryScrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(index,_temp2){var _ref3=void 0===_temp2?{}:_temp2,_ref3$align=_ref3.align,align=void 0===_ref3$align?"auto":_ref3$align,rest=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_ref3,["align"]),_latestRef$current2=latestRef.current,measurements=_latestRef$current2.measurements,scrollOffset=_latestRef$current2.scrollOffset,outerSize=_latestRef$current2.outerSize,measurement=measurements[Math.max(0,Math.min(index,size-1))];if(measurement){if("auto"===align)if(measurement.end>=scrollOffset+outerSize)align="end";else{if(!(measurement.start<=scrollOffset))return;align="start"}var toOffset="center"===align?measurement.start+measurement.size/2:"end"===align?measurement.end:measurement.start;scrollToOffset(toOffset,_extends({align},rest))}}),[scrollToOffset,size]),scrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];tryScrollToIndex.apply(void 0,args),requestAnimationFrame((function(){tryScrollToIndex.apply(void 0,args)}))}),[tryScrollToIndex]);return{virtualItems,totalSize,scrollToOffset,scrollToIndex,measure}}var findNearestBinarySearch=function findNearestBinarySearch(low,high,getCurrentValue,value){for(;low<=high;){var middle=(low+high)/2|0,currentValue=getCurrentValue(middle);if(currentValue<value)low=middle+1;else{if(!(currentValue>value))return middle;high=middle-1}}return low>0?low-1:0}}}]);