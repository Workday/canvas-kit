{"version":3,"file":"7855.2fd65a09.iframe.bundle.js","mappings":";;;AAUA;;;;;;AAMA","sources":["webpack://canvas-kit/./modules/react/tooltip/lib/TooltipContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { borderRadius, colors, space, type } from '@workday/canvas-kit-react/tokens';\nimport { TransformOrigin, getTranslateFromOrigin } from '@workday/canvas-kit-react/common';\nconst tooltipAnimation = (transformOrigin: TransformOrigin) => {\n    const translate = getTranslateFromOrigin(transformOrigin, space.xxxs);\n    return keyframes `\n    0% {\n      opacity: 0;\n      transform: translate(${translate.x}px, ${translate.y}px);\n    }\n    100% {\n      opacity: 1;\n      transform: translate(0);\n    }\n  `;\n};\nexport interface TooltipContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n    /**\n     * The origin from which the Tooltip will animate. Pass in `null` for no animation\n     * @default {horizontal: 'center', vertical: 'top'}\n     */\n    transformOrigin?: TransformOrigin | null;\n    /**\n     * HTML id of the tooltip container - useful for accessibility.\n     * Should link the tooltip container to a `aria-describedby` on the target\n     */\n    id?: string;\n    /**\n     * optional popper properties if `placement` is set\n     */\n    popperProps?: {\n        open: boolean;\n        anchorElement: HTMLElement | null;\n    };\n}\nconst defaultTransformOrigin = {\n    vertical: 'bottom',\n    horizontal: 'center',\n} as const;\nexport const TooltipContainer = styled('div')<TooltipContainerProps>({\n    ...type.levels.subtext.medium,\n    display: 'inline-flex',\n    position: 'relative',\n    padding: space.xs,\n    color: colors.frenchVanilla100,\n    a: {\n        color: colors.frenchVanilla100,\n        textDecoration: 'underline',\n    },\n    // use :before vs margin to increase the tooltip hit-box\n    ':before': {\n        content: '\"\"',\n        borderRadius: borderRadius.m,\n        zIndex: -1,\n        margin: space.xxxs,\n        backgroundColor: 'rgba(0,0,0,.85)',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    // offset tooltips by 2 pixels when a keyboard focus ring is detected\n    '[data-whatinput=keyboard] &': {\n        padding: `calc(${space.s} - 0.125rem)`,\n        ':before': {\n            margin: `calc(${space.xxxs} + 0.125rem)`,\n        },\n    },\n    // Hide tooltip when the reference element is either clipped or fully hidden\n    '[data-popper-reference-hidden] &': {\n        visibility: 'hidden',\n        pointerEvents: 'none',\n    },\n    // Fix offsets based on placement\n    '[data-popper-placement=\"top-start\"] &, [data-popper-placement=\"bottom-start\"] &': {\n        left: `-${space.xxxs}`,\n    },\n    '[data-popper-placement=\"top-end\"] &, [data-popper-placement=\"bottom-end\"] &': {\n        right: `-${space.xxxs}`,\n    },\n    '[data-popper-placement=\"left-start\"] &, [data-popper-placement=\"right-start\"] &': {\n        top: `-${space.xxxs}`,\n    },\n    '[data-popper-placement=\"left-end\"] &, [data-popper-placement=\"right-end\"] &': {\n        bottom: `-${space.xxxs}`,\n    },\n}, ({ transformOrigin = defaultTransformOrigin }) => {\n    if (transformOrigin === null) {\n        return {};\n    }\n    return {\n        animation: tooltipAnimation(transformOrigin),\n        animationDuration: '150ms',\n        animationTimingFunction: 'ease-out',\n        transformOrigin: transformOrigin\n            ? `${transformOrigin.vertical} ${transformOrigin.horizontal}`\n            : 'top center',\n    };\n});\n\n  const __docs = [\n  {\n    \"name\": \"TooltipContainerProps\",\n    \"fileName\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\",\n    \"description\": \"\",\n    \"declarations\": [\n      {\n        \"name\": \"TooltipContainerProps\",\n        \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\"\n      }\n    ],\n    \"tags\": {},\n    \"type\": {\n      \"kind\": \"object\",\n      \"properties\": [\n        {\n          \"kind\": \"property\",\n          \"name\": \"transformOrigin\",\n          \"required\": false,\n          \"type\": {\n            \"kind\": \"union\",\n            \"value\": [\n              {\n                \"kind\": \"symbol\",\n                \"name\": \"TransformOrigin\",\n                \"value\": \"TransformOrigin\"\n              },\n              {\n                \"kind\": \"primitive\",\n                \"value\": \"null\"\n              }\n            ]\n          },\n          \"description\": \"The origin from which the Tooltip will animate. Pass in `null` for no animation\",\n          \"declarations\": [\n            {\n              \"name\": \"transformOrigin\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\"\n            }\n          ],\n          \"tags\": {\n            \"default\": \"{horizontal: 'center', vertical: 'top'}\"\n          }\n        },\n        {\n          \"kind\": \"property\",\n          \"name\": \"id\",\n          \"required\": false,\n          \"type\": {\n            \"kind\": \"primitive\",\n            \"value\": \"string\"\n          },\n          \"description\": \"HTML id of the tooltip container - useful for accessibility.\\nShould link the tooltip container to a `aria-describedby` on the target\",\n          \"declarations\": [\n            {\n              \"name\": \"id\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\"\n            }\n          ],\n          \"tags\": {}\n        },\n        {\n          \"kind\": \"property\",\n          \"name\": \"popperProps\",\n          \"required\": false,\n          \"type\": {\n            \"kind\": \"object\",\n            \"properties\": [\n              {\n                \"kind\": \"property\",\n                \"name\": \"open\",\n                \"required\": true,\n                \"type\": {\n                  \"kind\": \"primitive\",\n                  \"value\": \"boolean\"\n                },\n                \"description\": \"\",\n                \"declarations\": [\n                  {\n                    \"name\": \"open\",\n                    \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\"\n                  }\n                ],\n                \"tags\": {}\n              },\n              {\n                \"kind\": \"property\",\n                \"name\": \"anchorElement\",\n                \"required\": true,\n                \"type\": {\n                  \"kind\": \"union\",\n                  \"value\": [\n                    {\n                      \"kind\": \"symbol\",\n                      \"name\": \"HTMLElement\",\n                      \"value\": \"HTMLElement\"\n                    },\n                    {\n                      \"kind\": \"primitive\",\n                      \"value\": \"null\"\n                    }\n                  ]\n                },\n                \"description\": \"\",\n                \"declarations\": [\n                  {\n                    \"name\": \"anchorElement\",\n                    \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\"\n                  }\n                ],\n                \"tags\": {}\n              }\n            ]\n          },\n          \"description\": \"optional popper properties if `placement` is set\",\n          \"declarations\": [\n            {\n              \"name\": \"popperProps\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\"\n            }\n          ],\n          \"tags\": {}\n        }\n      ]\n    }\n  },\n  {\n    \"name\": \"TooltipContainer\",\n    \"fileName\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\",\n    \"description\": \"\",\n    \"declarations\": [\n      {\n        \"name\": \"TooltipContainer\",\n        \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/modules/react/tooltip/lib/TooltipContainer.tsx\"\n      }\n    ],\n    \"tags\": {},\n    \"type\": {\n      \"kind\": \"function\",\n      \"parameters\": [\n        {\n          \"kind\": \"parameter\",\n          \"name\": \"props\",\n          \"type\": {\n            \"kind\": \"symbol\",\n            \"name\": \"P\",\n            \"value\": \"P\"\n          },\n          \"required\": true,\n          \"rest\": false,\n          \"description\": \"\",\n          \"declarations\": [\n            {\n              \"name\": \"props\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@types/react/ts5.0/index.d.ts\"\n            }\n          ],\n          \"tags\": {}\n        },\n        {\n          \"kind\": \"parameter\",\n          \"name\": \"deprecatedLegacyContext\",\n          \"type\": {\n            \"kind\": \"primitive\",\n            \"value\": \"any\"\n          },\n          \"required\": false,\n          \"rest\": false,\n          \"description\": \"\",\n          \"declarations\": [\n            {\n              \"name\": \"deprecatedLegacyContext\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@types/react/ts5.0/index.d.ts\"\n            }\n          ],\n          \"tags\": {\n            \"deprecated\": \"\",\n            \"see\": \"{@link \\nhttps://legacy.reactjs.org/docs/legacy-context.html#referencing-context-in-lifecycle-methods React Docs\\n}\"\n          }\n        }\n      ],\n      \"members\": [\n        {\n          \"kind\": \"property\",\n          \"name\": \"withComponent\",\n          \"type\": {\n            \"kind\": \"function\",\n            \"typeParameters\": [],\n            \"parameters\": [\n              {\n                \"kind\": \"parameter\",\n                \"name\": \"component\",\n                \"type\": {\n                  \"kind\": \"symbol\",\n                  \"name\": \"C\",\n                  \"value\": \"C\"\n                },\n                \"required\": true,\n                \"rest\": false,\n                \"description\": \"\",\n                \"declarations\": [\n                  {\n                    \"name\": \"component\",\n                    \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@emotion/styled/types/base.d.ts\"\n                  }\n                ],\n                \"tags\": {}\n              }\n            ],\n            \"members\": [],\n            \"returnType\": {\n              \"kind\": \"symbol\",\n              \"name\": \"StyledComponent\",\n              \"typeParameters\": [\n                {\n                  \"kind\": \"intersection\",\n                  \"value\": [\n                    {\n                      \"kind\": \"symbol\",\n                      \"name\": \"ComponentProps\",\n                      \"value\": \"ComponentProps\"\n                    },\n                    {\n                      \"kind\": \"symbol\",\n                      \"name\": \"PropsOf\",\n                      \"typeParameters\": [\n                        {\n                          \"kind\": \"symbol\",\n                          \"name\": \"C\",\n                          \"value\": \"C\"\n                        }\n                      ],\n                      \"value\": \"PropsOf<C>\"\n                    }\n                  ]\n                },\n                {\n                  \"kind\": \"object\",\n                  \"properties\": []\n                },\n                {\n                  \"kind\": \"object\",\n                  \"properties\": [\n                    {\n                      \"kind\": \"property\",\n                      \"name\": \"ref\",\n                      \"required\": false,\n                      \"type\": {\n                        \"kind\": \"external\",\n                        \"name\": \"Ref\",\n                        \"url\": \"https://reactjs.org/docs/refs-and-the-dom.html\",\n                        \"typeParameters\": [\n                          {\n                            \"kind\": \"symbol\",\n                            \"name\": \"InstanceType\",\n                            \"typeParameters\": [\n                              {\n                                \"kind\": \"symbol\",\n                                \"name\": \"C\",\n                                \"value\": \"C\"\n                              }\n                            ],\n                            \"value\": \"InstanceType<T>\"\n                          }\n                        ]\n                      },\n                      \"description\": \"\",\n                      \"declarations\": [\n                        {\n                          \"name\": \"ref\",\n                          \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@emotion/styled/types/base.d.ts\"\n                        }\n                      ],\n                      \"tags\": {}\n                    }\n                  ]\n                }\n              ],\n              \"value\": \"StyledComponent<ComponentProps, SpecificComponentProps, JSXProps>\"\n            }\n          },\n          \"description\": \"\",\n          \"declarations\": [\n            {\n              \"name\": \"withComponent\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@emotion/styled/types/base.d.ts\"\n            },\n            {\n              \"name\": \"withComponent\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@emotion/styled/types/base.d.ts\"\n            },\n            {\n              \"name\": \"withComponent\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@emotion/styled/types/base.d.ts\"\n            }\n          ],\n          \"tags\": {}\n        },\n        {\n          \"kind\": \"property\",\n          \"name\": \"__emotion_styles\",\n          \"required\": true,\n          \"type\": {\n            \"kind\": \"primitive\",\n            \"value\": \"any\"\n          },\n          \"description\": \"\",\n          \"declarations\": [\n            {\n              \"name\": \"__emotion_styles\",\n              \"filePath\": \"/home/runner/work/canvas-kit/canvas-kit/node_modules/@emotion/serialize/types/index.d.ts\"\n            }\n          ],\n          \"tags\": {}\n        }\n      ],\n      \"returnType\": {\n        \"kind\": \"union\",\n        \"value\": [\n          {\n            \"kind\": \"external\",\n            \"name\": \"ReactElement\",\n            \"url\": \"https://reactjs.org/docs/rendering-elements.html\",\n            \"typeParameters\": [\n              {\n                \"kind\": \"primitive\",\n                \"value\": \"any\"\n              },\n              {\n                \"kind\": \"primitive\",\n                \"value\": \"any\"\n              }\n            ]\n          },\n          {\n            \"kind\": \"primitive\",\n            \"value\": \"null\"\n          }\n        ]\n      }\n    }\n  }\n]\n  if (window.__updateDocs) {\n    window.__updateDocs?.(__docs)\n  } else {\n    window.__docs = (window.__docs || []).concat(__docs)\n  }\n  "],"names":[],"sourceRoot":""}