{"version":3,"file":"main.118c7dc190530f78765b.bundle.js","sources":["webpack:///./modules/canvas-kit-react-avatar/README.md"],"sourcesContent":["module.exports = \"# Canvas Kit Avatar\\n\\nA component showing a user's photo with a circular crop.\\n\\n## Installation\\n\\n```sh\\nyarn add @workday/canvas-kit-react\\n```\\n\\nor\\n\\n```sh\\nyarn add @workday/canvas-kit-react-avatar\\n```\\n\\n## Usage\\n\\n```tsx\\nimport * as React from 'react';\\nimport {Avatar, AvatarTheme, AvatarSize} from '@workday/canvas-kit-react-avatar';\\n\\n// Basic\\n<Avatar />\\n\\n// Using static properties on Avatar\\n<Avatar\\n  size={Avatar.Size.xs}\\n  themeColor={Avatar.ThemeColor.Dark}\\n  onClick={() => { window.alert('Avatar Clicked') }}\\n/>\\n\\n// Using AvatarTheme and AvatarSize imports directly\\n<Avatar size={AvatarSize.xs} themeColor={AvatarTheme.Dark} />\\n```\\n\\n## Static Properties\\n\\n#### `ThemeColor: AvatarTheme`\\n\\n```tsx\\n<Avatar themeColor={Avatar.ThemeColor.Dark} />\\n```\\n\\n---\\n\\n#### `Size: AvatarSize | number`\\n\\n```tsx\\n<Avatar size={Avatar.Size.xs} />\\n\\n// Custom Size.\\n// Note: Please use the predefined sizes as it works nicely with the Canvas Design System\\n<Avatar size={48} />\\n```\\n\\n## Component Props\\n\\n### Required\\n\\n> None\\n\\n### Optional\\n\\n#### `themeColor: AvatarTheme`\\n\\n> The theme of the avatar if using a default image.\\n\\nDefault: `AvatarTheme.Light`\\n\\n| Theme   | Description                      |\\n| ------- | -------------------------------- |\\n| `Light` | Light grey background, dark icon |\\n| `Dark`  | Dark blue background, white icon |\\n\\n---\\n\\n#### `size: AvatarSize`\\n\\n> The diameter of the avatar in pixels\\n\\nDefault: `AvatarSize.m`\\n\\n| Name  | Size (px) |\\n| ----- | --------- |\\n| `xs`  | 16        |\\n| `s`   | 24        |\\n| `m`   | 32        |\\n| `l`   | 40        |\\n| `xl`  | 64        |\\n| `xxl` | 120       |\\n\\n---\\n\\n#### `url: string`\\n\\n> The URL of the user's photo. Expects a square (1:1) photo.\\n\\n---\\n\\n#### `buttonRef: React.Ref<HTMLButtonElement>`\\n\\n> A ref to the underlying `<button>` element.\\n\\n---\\n\\n#### `onClick: (React.SyntheticEvent) => void`\\n\\n> A `click` event handler for this component.\\n\""],"mappings":"AAAA","sourceRoot":""}