"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[5253],{"./modules/labs-react/combobox/stories/Combobox.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.RTL=exports.NoClearButton=exports.Grow=exports.GroupOfResult=exports.DisabledItem=exports.Basic=void 0;var _Combobox=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./modules/labs-react/combobox/stories/Combobox.mdx")),_combobox=__webpack_require__("./modules/labs-react/combobox/index.ts"),_Basic=__webpack_require__("./modules/labs-react/combobox/stories/examples/Basic.tsx"),_DisabledItem=__webpack_require__("./modules/labs-react/combobox/stories/examples/DisabledItem.tsx"),_GroupOfResult=__webpack_require__("./modules/labs-react/combobox/stories/examples/GroupOfResult.tsx"),_Grow=__webpack_require__("./modules/labs-react/combobox/stories/examples/Grow.tsx"),_NoClearButton=__webpack_require__("./modules/labs-react/combobox/stories/examples/NoClearButton.tsx"),_RTL=__webpack_require__("./modules/labs-react/combobox/stories/examples/RTL.tsx");const meta={title:"Labs/Combobox",component:_combobox.Combobox,tags:["autodocs"],parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import {Meta, StoryObj} from \'@storybook/react\';\\nimport mdxDoc from \'./Combobox.mdx\';\\n\\nimport {Combobox} from \'@workday/canvas-kit-labs-react/combobox\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {DisabledItem as DisabledItemExample} from \'./examples/DisabledItem\';\\nimport {GroupOfResult as GroupOfResultExample} from \'./examples/GroupOfResult\';\\nimport {Grow as GrowExample} from \'./examples/Grow\';\\nimport {NoClearButton as NoClearButtonExample} from \'./examples/NoClearButton\';\\nimport {RTL as RTLExample} from \'./examples/RTL\';\\n\\nconst meta: Meta<typeof Combobox> = {\\n  title: \'Labs/Combobox\',\\n  component: Combobox,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    ReadmePath: \'labs-react/combobox\',\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n};\\n\\nexport default meta;\\n\\nexport const Basic: StoryObj = {\\n  name: \'Autocomplete\',\\n  render: BasicExample,\\n};\\n\\nexport const Grow: StoryObj = {\\n  render: GrowExample,\\n};\\n\\nexport const NoClearButton: StoryObj = {\\n  render: NoClearButtonExample,\\n};\\n\\nexport const GroupOfResult: StoryObj = {\\n  render: GroupOfResultExample,\\n};\\n\\nexport const DisabledItem: StoryObj = {\\n  render: DisabledItemExample,\\n};\\n\\nexport const RTL: StoryObj = {\\n  render: RTLExample,\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "Basic": {\n    "startLoc": {\n      "col": 31,\n      "line": 27\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 30\n    },\n    "startBody": {\n      "col": 31,\n      "line": 27\n    },\n    "endBody": {\n      "col": 1,\n      "line": 30\n    }\n  },\n  "Grow": {\n    "startLoc": {\n      "col": 30,\n      "line": 32\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 34\n    },\n    "startBody": {\n      "col": 30,\n      "line": 32\n    },\n    "endBody": {\n      "col": 1,\n      "line": 34\n    }\n  },\n  "NoClearButton": {\n    "startLoc": {\n      "col": 39,\n      "line": 36\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 38\n    },\n    "startBody": {\n      "col": 39,\n      "line": 36\n    },\n    "endBody": {\n      "col": 1,\n      "line": 38\n    }\n  },\n  "GroupOfResult": {\n    "startLoc": {\n      "col": 39,\n      "line": 40\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 42\n    },\n    "startBody": {\n      "col": 39,\n      "line": 40\n    },\n    "endBody": {\n      "col": 1,\n      "line": 42\n    }\n  },\n  "DisabledItem": {\n    "startLoc": {\n      "col": 38,\n      "line": 44\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 46\n    },\n    "startBody": {\n      "col": 38,\n      "line": 44\n    },\n    "endBody": {\n      "col": 1,\n      "line": 46\n    }\n  },\n  "RTL": {\n    "startLoc": {\n      "col": 29,\n      "line": 48\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 50\n    },\n    "startBody": {\n      "col": 29,\n      "line": 48\n    },\n    "endBody": {\n      "col": 1,\n      "line": 50\n    }\n  }\n};\n    \nimport {Meta, StoryObj} from \'@storybook/react\';\nimport mdxDoc from \'./Combobox.mdx\';\n\nimport {Combobox} from \'@workday/canvas-kit-labs-react/combobox\';\n\nimport {Basic as BasicExample} from \'./examples/Basic\';\nimport {DisabledItem as DisabledItemExample} from \'./examples/DisabledItem\';\nimport {GroupOfResult as GroupOfResultExample} from \'./examples/GroupOfResult\';\nimport {Grow as GrowExample} from \'./examples/Grow\';\nimport {NoClearButton as NoClearButtonExample} from \'./examples/NoClearButton\';\nimport {RTL as RTLExample} from \'./examples/RTL\';\n\nconst meta: Meta<typeof Combobox> = {\n  title: \'Labs/Combobox\',\n  component: Combobox,\n  tags: [\'autodocs\'],\n  parameters: {\n  "storySource": {\n    "source": "import {Meta, StoryObj} from \'@storybook/react\';\\nimport mdxDoc from \'./Combobox.mdx\';\\n\\nimport {Combobox} from \'@workday/canvas-kit-labs-react/combobox\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {DisabledItem as DisabledItemExample} from \'./examples/DisabledItem\';\\nimport {GroupOfResult as GroupOfResultExample} from \'./examples/GroupOfResult\';\\nimport {Grow as GrowExample} from \'./examples/Grow\';\\nimport {NoClearButton as NoClearButtonExample} from \'./examples/NoClearButton\';\\nimport {RTL as RTLExample} from \'./examples/RTL\';\\n\\nconst meta: Meta<typeof Combobox> = {\\n  title: \'Labs/Combobox\',\\n  component: Combobox,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    ReadmePath: \'labs-react/combobox\',\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n};\\n\\nexport default meta;\\n\\nexport const Basic: StoryObj = {\\n  name: \'Autocomplete\',\\n  render: BasicExample,\\n};\\n\\nexport const Grow: StoryObj = {\\n  render: GrowExample,\\n};\\n\\nexport const NoClearButton: StoryObj = {\\n  render: NoClearButtonExample,\\n};\\n\\nexport const GroupOfResult: StoryObj = {\\n  render: GroupOfResultExample,\\n};\\n\\nexport const DisabledItem: StoryObj = {\\n  render: DisabledItemExample,\\n};\\n\\nexport const RTL: StoryObj = {\\n  render: RTLExample,\\n};\\n",\n    "locationsMap": {\n      "basic": {\n        "startLoc": {\n          "col": 31,\n          "line": 27\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 30\n        },\n        "startBody": {\n          "col": 31,\n          "line": 27\n        },\n        "endBody": {\n          "col": 1,\n          "line": 30\n        }\n      },\n      "grow": {\n        "startLoc": {\n          "col": 30,\n          "line": 32\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 34\n        },\n        "startBody": {\n          "col": 30,\n          "line": 32\n        },\n        "endBody": {\n          "col": 1,\n          "line": 34\n        }\n      },\n      "no-clear-button": {\n        "startLoc": {\n          "col": 39,\n          "line": 36\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 38\n        },\n        "startBody": {\n          "col": 39,\n          "line": 36\n        },\n        "endBody": {\n          "col": 1,\n          "line": 38\n        }\n      },\n      "group-of-result": {\n        "startLoc": {\n          "col": 39,\n          "line": 40\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 42\n        },\n        "startBody": {\n          "col": 39,\n          "line": 40\n        },\n        "endBody": {\n          "col": 1,\n          "line": 42\n        }\n      },\n      "disabled-item": {\n        "startLoc": {\n          "col": 38,\n          "line": 44\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 46\n        },\n        "startBody": {\n          "col": 38,\n          "line": 44\n        },\n        "endBody": {\n          "col": 1,\n          "line": 46\n        }\n      },\n      "rtl": {\n        "startLoc": {\n          "col": 29,\n          "line": 48\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 50\n        },\n        "startBody": {\n          "col": 29,\n          "line": 48\n        },\n        "endBody": {\n          "col": 1,\n          "line": 50\n        }\n      }\n    }\n  }\n,\n    ReadmePath: \'labs-react/combobox\',\n    docs: {\n      page: mdxDoc,\n    },\n  },\n};\n\nexport default meta;\n\nexport const Basic: StoryObj = {\n  name: \'Autocomplete\',\n  render: BasicExample,\n};;\n\nexport const Grow: StoryObj = {\n  render: GrowExample,\n};;\n\nexport const NoClearButton: StoryObj = {\n  render: NoClearButtonExample,\n};;\n\nexport const GroupOfResult: StoryObj = {\n  render: GroupOfResultExample,\n};;\n\nexport const DisabledItem: StoryObj = {\n  render: DisabledItemExample,\n};;\n\nexport const RTL: StoryObj = {\n  render: RTLExample,\n};\n',locationsMap:{basic:{startLoc:{col:31,line:258},endLoc:{col:1,line:261},startBody:{col:31,line:258},endBody:{col:1,line:261}},grow:{startLoc:{col:30,line:263},endLoc:{col:1,line:265},startBody:{col:30,line:263},endBody:{col:1,line:265}},"no-clear-button":{startLoc:{col:39,line:267},endLoc:{col:1,line:269},startBody:{col:39,line:267},endBody:{col:1,line:269}},"group-of-result":{startLoc:{col:39,line:271},endLoc:{col:1,line:273},startBody:{col:39,line:271},endBody:{col:1,line:273}},"disabled-item":{startLoc:{col:38,line:275},endLoc:{col:1,line:277},startBody:{col:38,line:275},endBody:{col:1,line:277}},rtl:{startLoc:{col:29,line:279},endLoc:{col:1,line:281},startBody:{col:29,line:279},endBody:{col:1,line:281}}}},storySource:{source:"import {Meta, StoryObj} from '@storybook/react';\nimport mdxDoc from './Combobox.mdx';\n\nimport {Combobox} from '@workday/canvas-kit-labs-react/combobox';\n\nimport {Basic as BasicExample} from './examples/Basic';\nimport {DisabledItem as DisabledItemExample} from './examples/DisabledItem';\nimport {GroupOfResult as GroupOfResultExample} from './examples/GroupOfResult';\nimport {Grow as GrowExample} from './examples/Grow';\nimport {NoClearButton as NoClearButtonExample} from './examples/NoClearButton';\nimport {RTL as RTLExample} from './examples/RTL';\n\nconst meta: Meta<typeof Combobox> = {\n  title: 'Labs/Combobox',\n  component: Combobox,\n  tags: ['autodocs'],\n  parameters: {\n    ReadmePath: 'labs-react/combobox',\n    docs: {\n      page: mdxDoc,\n    },\n  },\n};\n\nexport default meta;\n\nexport const Basic: StoryObj = {\n  name: 'Autocomplete',\n  render: BasicExample,\n};\n\nexport const Grow: StoryObj = {\n  render: GrowExample,\n};\n\nexport const NoClearButton: StoryObj = {\n  render: NoClearButtonExample,\n};\n\nexport const GroupOfResult: StoryObj = {\n  render: GroupOfResultExample,\n};\n\nexport const DisabledItem: StoryObj = {\n  render: DisabledItemExample,\n};\n\nexport const RTL: StoryObj = {\n  render: RTLExample,\n};\n",locationsMap:{basic:{startLoc:{col:31,line:27},endLoc:{col:1,line:30},startBody:{col:31,line:27},endBody:{col:1,line:30}},grow:{startLoc:{col:30,line:32},endLoc:{col:1,line:34},startBody:{col:30,line:32},endBody:{col:1,line:34}},"no-clear-button":{startLoc:{col:39,line:36},endLoc:{col:1,line:38},startBody:{col:39,line:36},endBody:{col:1,line:38}},"group-of-result":{startLoc:{col:39,line:40},endLoc:{col:1,line:42},startBody:{col:39,line:40},endBody:{col:1,line:42}},"disabled-item":{startLoc:{col:38,line:44},endLoc:{col:1,line:46},startBody:{col:38,line:44},endBody:{col:1,line:46}},rtl:{startLoc:{col:29,line:48},endLoc:{col:1,line:50},startBody:{col:29,line:48},endBody:{col:1,line:50}}}},ReadmePath:"labs-react/combobox",docs:{page:_Combobox.default}}};exports.default=meta;exports.Basic={name:"Autocomplete",render:_Basic.Basic},exports.Grow={render:_Grow.Grow},exports.NoClearButton={render:_NoClearButton.NoClearButton},exports.GroupOfResult={render:_GroupOfResult.GroupOfResult},exports.DisabledItem={render:_DisabledItem.DisabledItem},exports.RTL={render:_RTL.RTL};module.exports.__namedExportsOrder=["RTL","NoClearButton","Grow","GroupOfResult","DisabledItem","Basic"]},"./modules/labs-react/combobox/stories/Combobox.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_Basic__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/labs-react/combobox/stories/examples/Basic.tsx"),_examples_DisabledItem__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./modules/labs-react/combobox/stories/examples/DisabledItem.tsx"),_examples_GroupOfResult__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./modules/labs-react/combobox/stories/examples/GroupOfResult.tsx"),_examples_Grow__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./modules/labs-react/combobox/stories/examples/Grow.tsx"),_examples_NoClearButton__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./modules/labs-react/combobox/stories/examples/NoClearButton.tsx"),_examples_RTL__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./modules/labs-react/combobox/stories/examples/RTL.tsx"),_Combobox_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/labs-react/combobox/stories/Combobox.stories.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",a:"a",blockquote:"blockquote",h2:"h2",pre:"pre",code:"code",h3:"h3"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{of:_Combobox_stories__WEBPACK_IMPORTED_MODULE_5__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"combobox",children:"Combobox"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:['The term "Combobox" is based on the\n',(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/combobox/",target:"_blank",rel:"nofollow noopener noreferrer",children:"Combobox Pattern"})," as defined in the ARIA\nAuthoring Practices Guide (APG):"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["A ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://w3c.github.io/aria/#combobox",target:"_blank",rel:"nofollow noopener noreferrer",children:"combobox"})," is an input widget with an associated popup\nthat enables users to select a value for the combobox from a collection of possible values."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:'Examples of a "combobox" would be date pickers, autocomplete, and select components.'}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"installation",children:"Installation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-sh",children:"yarn add @workday/canvas-kit-react\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"autocomplete",children:"Autocomplete"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Basic__WEBPACK_IMPORTED_MODULE_6__.Basic}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"grow",children:"Grow"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Grow__WEBPACK_IMPORTED_MODULE_7__.Grow}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"no-clear-button",children:"No Clear Button"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_NoClearButton__WEBPACK_IMPORTED_MODULE_8__.NoClearButton}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"group-of-result",children:"Group Of Result"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_GroupOfResult__WEBPACK_IMPORTED_MODULE_9__.GroupOfResult}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"disabled-item",children:"Disabled Item"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_DisabledItem__WEBPACK_IMPORTED_MODULE_10__.DisabledItem}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"rtl",children:"RTL"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_RTL__WEBPACK_IMPORTED_MODULE_11__.RTL})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/labs-react/combobox/stories/examples/Basic.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Basic=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_combobox=__webpack_require__("./modules/labs-react/combobox/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const autocompleteResult=(textModifier,disabled)=>(0,_jsxRuntime.jsxs)(_menu.StyledMenuItem,{"aria-disabled":disabled,children:["Result",(0,_jsxRuntime.jsxs)("span",{children:["num",(0,_jsxRuntime.jsx)("span",{children:"ber"})]}),textModifier]});autocompleteResult.displayName="autocompleteResult";const simpleAutoComplete=(count,showDisabledItems,total=5)=>Array.apply(null,Array(count)).map(((_,i)=>autocompleteResult(i,showDisabledItems&&0===i))).splice(0,total),groupOfResults=(count,showDisabledItems,groupHeading="Group")=>({header:(0,_jsxRuntime.jsx)(_menu.StyledMenuItem,{children:(0,_jsxRuntime.jsx)("strong",{children:groupHeading})}),items:simpleAutoComplete(count,showDisabledItems,10)}),Autocomplete=({showClearButton,group,showDisabledItems=!1,...props})=>{const[currentText,setCurrentText]=_react.default.useState(""),textLength=currentText.length,groupLength=Math.floor(textLength/2);return(0,_jsxRuntime.jsx)(_combobox.Combobox,{autocompleteItems:group?[groupOfResults(groupLength,showDisabledItems,(0,_jsxRuntime.jsx)("em",{children:"Animals"})),groupOfResults(Math.min(1,groupLength),showDisabledItems,"Cars")]:simpleAutoComplete(textLength,showDisabledItems,10),onChange:event=>{setCurrentText(event.target.value)},showClearButton:null==showClearButton||showClearButton,labelId:"autocomplete-123",initialValue:"Test",...props,children:(0,_jsxRuntime.jsx)(_textInput.TextInput,{placeholder:"Autocomplete"})})};Autocomplete.displayName="Autocomplete";const Basic=()=>(0,_jsxRuntime.jsxs)(_formField.FormField,{id:"autocomplete-123",children:[(0,_jsxRuntime.jsx)(_formField.FormField.Label,{children:"Autocomplete example"}),(0,_jsxRuntime.jsx)(_formField.FormField.Field,{children:(0,_jsxRuntime.jsx)(_formField.FormField.Input,{as:Autocomplete})})]});exports.Basic=Basic,Basic.displayName="Basic",Basic.__RAW__="import React, {ReactNode, ReactElement, FC, ChangeEvent} from 'react';\nimport {ExtractProps} from '@workday/canvas-kit-react/common';\nimport {\n  Combobox,\n  ComboboxProps,\n  ComboBoxMenuItemGroup,\n} from '@workday/canvas-kit-labs-react/combobox';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {TextInput} from '@workday/canvas-kit-react/text-input';\n\nconst autocompleteResult = (\n  textModifier: number,\n  disabled: boolean\n): ReactElement<ExtractProps<typeof StyledMenuItem>> => (\n  <StyledMenuItem aria-disabled={disabled}>\n    Result\n    <span>\n      num<span>ber</span>\n    </span>\n    {textModifier}\n  </StyledMenuItem>\n);\n\nconst simpleAutoComplete = (count: number, showDisabledItems, total = 5) =>\n  Array.apply(null, Array(count))\n    .map((_, i) => autocompleteResult(i, showDisabledItems && i === 0))\n    .splice(0, total);\n\nconst groupOfResults = (\n  count: number,\n  showDisabledItems: boolean,\n  groupHeading: ReactNode = 'Group'\n): ComboBoxMenuItemGroup => ({\n  header: (\n    <StyledMenuItem>\n      <strong>{groupHeading}</strong>\n    </StyledMenuItem>\n  ),\n  items: simpleAutoComplete(count, showDisabledItems, 10),\n});\n\nconst Autocomplete: FC<\n  Omit<ComboboxProps, 'children'> & {\n    group?: boolean;\n    showDisabledItems?: boolean;\n  }\n> = ({showClearButton, group, showDisabledItems = false, ...props}) => {\n  const [currentText, setCurrentText] = React.useState('');\n\n  const autocompleteCallback = (event: ChangeEvent<HTMLInputElement>): void => {\n    setCurrentText(event.target.value);\n  };\n\n  const textLength = currentText.length;\n  const groupLength = Math.floor(textLength / 2);\n\n  return (\n    <Combobox\n      autocompleteItems={\n        group\n          ? [\n              groupOfResults(groupLength, showDisabledItems, <em>Animals</em>),\n              groupOfResults(Math.min(1, groupLength), showDisabledItems, 'Cars'),\n            ]\n          : simpleAutoComplete(textLength, showDisabledItems, 10)\n      }\n      onChange={autocompleteCallback}\n      showClearButton={showClearButton == null ? true : showClearButton}\n      labelId=\"autocomplete-123\"\n      initialValue=\"Test\"\n      {...props}\n    >\n      <TextInput placeholder=\"Autocomplete\" />\n    </Combobox>\n  );\n};\n\nexport const Basic = () => {\n  return (\n    <FormField id=\"autocomplete-123\">\n      <FormField.Label>Autocomplete example</FormField.Label>\n      <FormField.Field>\n        <FormField.Input as={Autocomplete} />\n      </FormField.Field>\n    </FormField>\n  );\n};\n"},"./modules/labs-react/combobox/stories/examples/DisabledItem.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DisabledItem=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_combobox=__webpack_require__("./modules/labs-react/combobox/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const autocompleteResult=(textModifier,disabled)=>(0,_jsxRuntime.jsxs)(_menu.StyledMenuItem,{"aria-disabled":disabled,children:["Result",(0,_jsxRuntime.jsxs)("span",{children:["num",(0,_jsxRuntime.jsx)("span",{children:"ber"})]}),textModifier]});autocompleteResult.displayName="autocompleteResult";const simpleAutoComplete=(count,showDisabledItems,total=5)=>Array.apply(null,Array(count)).map(((_,i)=>autocompleteResult(i,showDisabledItems&&0===i))).splice(0,total),groupOfResults=(count,showDisabledItems,groupHeading="Group")=>({header:(0,_jsxRuntime.jsx)(_menu.StyledMenuItem,{children:(0,_jsxRuntime.jsx)("strong",{children:groupHeading})}),items:simpleAutoComplete(count,showDisabledItems,10)}),Autocomplete=({showClearButton,group,showDisabledItems=!1,...props})=>{const[currentText,setCurrentText]=_react.default.useState(""),textLength=currentText.length,groupLength=Math.floor(textLength/2);return(0,_jsxRuntime.jsx)(_combobox.Combobox,{autocompleteItems:group?[groupOfResults(groupLength,showDisabledItems,(0,_jsxRuntime.jsx)("em",{children:"Animals"})),groupOfResults(Math.min(1,groupLength),showDisabledItems,"Cars")]:simpleAutoComplete(textLength,showDisabledItems,10),onChange:event=>{setCurrentText(event.target.value)},showClearButton:null==showClearButton||showClearButton,labelId:"autocomplete-123",initialValue:"Test",...props,children:(0,_jsxRuntime.jsx)(_textInput.TextInput,{placeholder:"Autocomplete"})})};Autocomplete.displayName="Autocomplete";const DisabledItem=()=>(0,_jsxRuntime.jsxs)(_formField.FormField,{id:"autocomplete-123",children:[(0,_jsxRuntime.jsx)(_formField.FormField.Label,{children:"Group of results"}),(0,_jsxRuntime.jsx)(_formField.FormField.Field,{children:(0,_jsxRuntime.jsx)(_formField.FormField.Input,{as:Autocomplete,showDisabledItems:!0})})]});exports.DisabledItem=DisabledItem,DisabledItem.displayName="DisabledItem",DisabledItem.__RAW__="import React, {ReactNode, ReactElement, FC, ChangeEvent} from 'react';\nimport {ExtractProps} from '@workday/canvas-kit-react/common';\nimport {\n  Combobox,\n  ComboboxProps,\n  ComboBoxMenuItemGroup,\n} from '@workday/canvas-kit-labs-react/combobox';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {TextInput} from '@workday/canvas-kit-react/text-input';\n\nconst autocompleteResult = (\n  textModifier: number,\n  disabled: boolean\n): ReactElement<ExtractProps<typeof StyledMenuItem>> => (\n  <StyledMenuItem aria-disabled={disabled}>\n    Result\n    <span>\n      num<span>ber</span>\n    </span>\n    {textModifier}\n  </StyledMenuItem>\n);\n\nconst simpleAutoComplete = (count: number, showDisabledItems, total = 5) =>\n  Array.apply(null, Array(count))\n    .map((_, i) => autocompleteResult(i, showDisabledItems && i === 0))\n    .splice(0, total);\n\nconst groupOfResults = (\n  count: number,\n  showDisabledItems: boolean,\n  groupHeading: ReactNode = 'Group'\n): ComboBoxMenuItemGroup => ({\n  header: (\n    <StyledMenuItem>\n      <strong>{groupHeading}</strong>\n    </StyledMenuItem>\n  ),\n  items: simpleAutoComplete(count, showDisabledItems, 10),\n});\n\nconst Autocomplete: FC<\n  Omit<ComboboxProps, 'children'> & {\n    group?: boolean;\n    showDisabledItems?: boolean;\n  }\n> = ({showClearButton, group, showDisabledItems = false, ...props}) => {\n  const [currentText, setCurrentText] = React.useState('');\n\n  const autocompleteCallback = (event: ChangeEvent<HTMLInputElement>): void => {\n    setCurrentText(event.target.value);\n  };\n\n  const textLength = currentText.length;\n  const groupLength = Math.floor(textLength / 2);\n\n  return (\n    <Combobox\n      autocompleteItems={\n        group\n          ? [\n              groupOfResults(groupLength, showDisabledItems, <em>Animals</em>),\n              groupOfResults(Math.min(1, groupLength), showDisabledItems, 'Cars'),\n            ]\n          : simpleAutoComplete(textLength, showDisabledItems, 10)\n      }\n      onChange={autocompleteCallback}\n      showClearButton={showClearButton == null ? true : showClearButton}\n      labelId=\"autocomplete-123\"\n      initialValue=\"Test\"\n      {...props}\n    >\n      <TextInput placeholder=\"Autocomplete\" />\n    </Combobox>\n  );\n};\n\nexport const DisabledItem = () => {\n  return (\n    <FormField id=\"autocomplete-123\">\n      <FormField.Label>Group of results</FormField.Label>\n      <FormField.Field>\n        <FormField.Input as={Autocomplete} showDisabledItems={true} />\n      </FormField.Field>\n    </FormField>\n  );\n};\n"},"./modules/labs-react/combobox/stories/examples/GroupOfResult.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GroupOfResult=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_combobox=__webpack_require__("./modules/labs-react/combobox/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const autocompleteResult=(textModifier,disabled)=>(0,_jsxRuntime.jsxs)(_menu.StyledMenuItem,{"aria-disabled":disabled,children:["Result"," ",(0,_jsxRuntime.jsxs)("span",{children:["num",(0,_jsxRuntime.jsx)("span",{children:"ber"})]})," ",textModifier]});autocompleteResult.displayName="autocompleteResult";const simpleAutoComplete=(count,showDisabledItems,total=5)=>Array.apply(null,Array(count)).map(((_,i)=>autocompleteResult(i,showDisabledItems&&0===i))).splice(0,total),groupOfResults=(count,showDisabledItems,groupHeading="Group")=>({header:(0,_jsxRuntime.jsx)(_menu.StyledMenuItem,{children:(0,_jsxRuntime.jsx)("strong",{children:groupHeading})}),items:simpleAutoComplete(count,showDisabledItems,10)}),Autocomplete=({showClearButton,group,showDisabledItems=!1,...props})=>{const[currentText,setCurrentText]=_react.default.useState(""),textLength=currentText.length,groupLength=Math.floor(textLength/2);return(0,_jsxRuntime.jsx)(_combobox.Combobox,{autocompleteItems:group?[groupOfResults(groupLength,showDisabledItems,(0,_jsxRuntime.jsx)("em",{children:"Animals"})),groupOfResults(Math.min(1,groupLength),showDisabledItems,"Cars")]:simpleAutoComplete(textLength,showDisabledItems,10),onChange:event=>{setCurrentText(event.target.value)},showClearButton:null==showClearButton||showClearButton,labelId:"autocomplete-123",initialValue:"Test",...props,children:(0,_jsxRuntime.jsx)(_textInput.TextInput,{placeholder:"Autocomplete"})})};Autocomplete.displayName="Autocomplete";const GroupOfResult=()=>(0,_jsxRuntime.jsxs)(_formField.FormField,{id:"autocomplete-123",children:[(0,_jsxRuntime.jsx)(_formField.FormField.Label,{children:"Group of results"}),(0,_jsxRuntime.jsx)(_formField.FormField.Field,{children:(0,_jsxRuntime.jsx)(_formField.FormField.Input,{as:Autocomplete,group:!0})})]});exports.GroupOfResult=GroupOfResult,GroupOfResult.displayName="GroupOfResult",GroupOfResult.__RAW__="import React, {ReactNode, ReactElement, FC, ChangeEvent} from 'react';\nimport {ExtractProps} from '@workday/canvas-kit-react/common';\nimport {\n  Combobox,\n  ComboboxProps,\n  ComboBoxMenuItemGroup,\n} from '@workday/canvas-kit-labs-react/combobox';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {TextInput} from '@workday/canvas-kit-react/text-input';\n\nconst autocompleteResult = (\n  textModifier: number,\n  disabled: boolean\n): ReactElement<ExtractProps<typeof StyledMenuItem>> => (\n  <StyledMenuItem aria-disabled={disabled}>\n    Result{' '}\n    <span>\n      num<span>ber</span>\n    </span>{' '}\n    {textModifier}\n  </StyledMenuItem>\n);\n\nconst simpleAutoComplete = (count: number, showDisabledItems, total = 5) =>\n  Array.apply(null, Array(count))\n    .map((_, i) => autocompleteResult(i, showDisabledItems && i === 0))\n    .splice(0, total);\n\nconst groupOfResults = (\n  count: number,\n  showDisabledItems: boolean,\n  groupHeading: ReactNode = 'Group'\n): ComboBoxMenuItemGroup => ({\n  header: (\n    <StyledMenuItem>\n      <strong>{groupHeading}</strong>\n    </StyledMenuItem>\n  ),\n  items: simpleAutoComplete(count, showDisabledItems, 10),\n});\n\nconst Autocomplete: FC<\n  Omit<ComboboxProps, 'children'> & {\n    group?: boolean;\n    showDisabledItems?: boolean;\n  }\n> = ({showClearButton, group, showDisabledItems = false, ...props}) => {\n  const [currentText, setCurrentText] = React.useState('');\n\n  const autocompleteCallback = (event: ChangeEvent<HTMLInputElement>): void => {\n    setCurrentText(event.target.value);\n  };\n\n  const textLength = currentText.length;\n  const groupLength = Math.floor(textLength / 2);\n\n  return (\n    <Combobox\n      autocompleteItems={\n        group\n          ? [\n              groupOfResults(groupLength, showDisabledItems, <em>Animals</em>),\n              groupOfResults(Math.min(1, groupLength), showDisabledItems, 'Cars'),\n            ]\n          : simpleAutoComplete(textLength, showDisabledItems, 10)\n      }\n      onChange={autocompleteCallback}\n      showClearButton={showClearButton == null ? true : showClearButton}\n      labelId=\"autocomplete-123\"\n      initialValue=\"Test\"\n      {...props}\n    >\n      <TextInput placeholder=\"Autocomplete\" />\n    </Combobox>\n  );\n};\n\nexport const GroupOfResult = () => {\n  return (\n    <FormField id=\"autocomplete-123\">\n      <FormField.Label>Group of results</FormField.Label>\n      <FormField.Field>\n        <FormField.Input as={Autocomplete} group={true} />\n      </FormField.Field>\n    </FormField>\n  );\n};\n"},"./modules/labs-react/combobox/stories/examples/Grow.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Grow=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_combobox=__webpack_require__("./modules/labs-react/combobox/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const autocompleteResult=(textModifier,disabled)=>(0,_jsxRuntime.jsxs)(_menu.StyledMenuItem,{"aria-disabled":disabled,children:["Result",(0,_jsxRuntime.jsxs)("span",{children:["num",(0,_jsxRuntime.jsx)("span",{children:"ber"})]}),textModifier]});autocompleteResult.displayName="autocompleteResult";const simpleAutoComplete=(count,showDisabledItems,total=5)=>Array.apply(null,Array(count)).map(((_,i)=>autocompleteResult(i,showDisabledItems&&0===i))).splice(0,total),groupOfResults=(count,showDisabledItems,groupHeading="Group")=>({header:(0,_jsxRuntime.jsx)(_menu.StyledMenuItem,{children:(0,_jsxRuntime.jsx)("strong",{children:groupHeading})}),items:simpleAutoComplete(count,showDisabledItems,10)}),Autocomplete=({showClearButton,group,showDisabledItems=!1,...props})=>{const[currentText,setCurrentText]=_react.default.useState(""),textLength=currentText.length,groupLength=Math.floor(textLength/2);return(0,_jsxRuntime.jsx)(_combobox.Combobox,{autocompleteItems:group?[groupOfResults(groupLength,showDisabledItems,(0,_jsxRuntime.jsx)("em",{children:"Animals"})),groupOfResults(Math.min(1,groupLength),showDisabledItems,"Cars")]:simpleAutoComplete(textLength,showDisabledItems,10),onChange:event=>{setCurrentText(event.target.value)},showClearButton:null==showClearButton||showClearButton,labelId:"autocomplete-123",initialValue:"Test",...props,children:(0,_jsxRuntime.jsx)(_textInput.TextInput,{"data-width":"ck-formfield-width",placeholder:"Autocomplete"})})};Autocomplete.displayName="Autocomplete";const Grow=()=>(0,_jsxRuntime.jsxs)(_formField.FormField,{grow:!0,id:"autocomplete-123",children:[(0,_jsxRuntime.jsx)(_formField.FormField.Label,{children:"Grow example"}),(0,_jsxRuntime.jsx)(_formField.FormField.Field,{children:(0,_jsxRuntime.jsx)(_formField.FormField.Input,{as:Autocomplete})})]});exports.Grow=Grow,Grow.displayName="Grow",Grow.__RAW__="import React, {ReactNode, ReactElement, FC, ChangeEvent} from 'react';\nimport {ExtractProps} from '@workday/canvas-kit-react/common';\nimport {\n  Combobox,\n  ComboboxProps,\n  ComboBoxMenuItemGroup,\n} from '@workday/canvas-kit-labs-react/combobox';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {TextInput} from '@workday/canvas-kit-react/text-input';\n\nconst autocompleteResult = (\n  textModifier: number,\n  disabled: boolean\n): ReactElement<ExtractProps<typeof StyledMenuItem>> => (\n  <StyledMenuItem aria-disabled={disabled}>\n    Result\n    <span>\n      num<span>ber</span>\n    </span>\n    {textModifier}\n  </StyledMenuItem>\n);\n\nconst simpleAutoComplete = (count: number, showDisabledItems, total = 5) =>\n  Array.apply(null, Array(count))\n    .map((_, i) => autocompleteResult(i, showDisabledItems && i === 0))\n    .splice(0, total);\n\nconst groupOfResults = (\n  count: number,\n  showDisabledItems: boolean,\n  groupHeading: ReactNode = 'Group'\n): ComboBoxMenuItemGroup => ({\n  header: (\n    <StyledMenuItem>\n      <strong>{groupHeading}</strong>\n    </StyledMenuItem>\n  ),\n  items: simpleAutoComplete(count, showDisabledItems, 10),\n});\n\nconst Autocomplete: FC<\n  Omit<ComboboxProps, 'children'> & {\n    group?: boolean;\n    showDisabledItems?: boolean;\n  }\n> = ({showClearButton, group, showDisabledItems = false, ...props}) => {\n  const [currentText, setCurrentText] = React.useState('');\n\n  const autocompleteCallback = (event: ChangeEvent<HTMLInputElement>): void => {\n    setCurrentText(event.target.value);\n  };\n\n  const textLength = currentText.length;\n  const groupLength = Math.floor(textLength / 2);\n\n  return (\n    <Combobox\n      autocompleteItems={\n        group\n          ? [\n              groupOfResults(groupLength, showDisabledItems, <em>Animals</em>),\n              groupOfResults(Math.min(1, groupLength), showDisabledItems, 'Cars'),\n            ]\n          : simpleAutoComplete(textLength, showDisabledItems, 10)\n      }\n      onChange={autocompleteCallback}\n      showClearButton={showClearButton == null ? true : showClearButton}\n      labelId=\"autocomplete-123\"\n      initialValue=\"Test\"\n      {...props}\n    >\n      <TextInput data-width=\"ck-formfield-width\" placeholder=\"Autocomplete\" />\n    </Combobox>\n  );\n};\n\nexport const Grow = () => {\n  return (\n    <FormField grow={true} id=\"autocomplete-123\">\n      <FormField.Label>Grow example</FormField.Label>\n      <FormField.Field>\n        <FormField.Input as={Autocomplete} />\n      </FormField.Field>\n    </FormField>\n  );\n};\n"},"./modules/labs-react/combobox/stories/examples/NoClearButton.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NoClearButton=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_combobox=__webpack_require__("./modules/labs-react/combobox/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const autocompleteResult=(textModifier,disabled)=>(0,_jsxRuntime.jsxs)(_menu.StyledMenuItem,{"aria-disabled":disabled,children:["Result",(0,_jsxRuntime.jsxs)("span",{children:["num",(0,_jsxRuntime.jsx)("span",{children:"ber"})]}),textModifier]});autocompleteResult.displayName="autocompleteResult";const simpleAutoComplete=(count,showDisabledItems,total=5)=>Array.apply(null,Array(count)).map(((_,i)=>autocompleteResult(i,showDisabledItems&&0===i))).splice(0,total),groupOfResults=(count,showDisabledItems,groupHeading="Group")=>({header:(0,_jsxRuntime.jsx)(_menu.StyledMenuItem,{children:(0,_jsxRuntime.jsx)("strong",{children:groupHeading})}),items:simpleAutoComplete(count,showDisabledItems,10)}),Autocomplete=({showClearButton,group,showDisabledItems=!1,...props})=>{const[currentText,setCurrentText]=_react.default.useState(""),textLength=currentText.length,groupLength=Math.floor(textLength/2);return(0,_jsxRuntime.jsx)(_combobox.Combobox,{autocompleteItems:group?[groupOfResults(groupLength,showDisabledItems,(0,_jsxRuntime.jsx)("em",{children:"Animals"})),groupOfResults(Math.min(1,groupLength),showDisabledItems,"Cars")]:simpleAutoComplete(textLength,showDisabledItems,10),onChange:event=>{setCurrentText(event.target.value)},showClearButton:null==showClearButton||showClearButton,labelId:"autocomplete-123",initialValue:"Test",...props,children:(0,_jsxRuntime.jsx)(_textInput.TextInput,{placeholder:"Autocomplete"})})};Autocomplete.displayName="Autocomplete";const NoClearButton=()=>(0,_jsxRuntime.jsxs)(_formField.FormField,{id:"autocomplete-123",children:[(0,_jsxRuntime.jsx)(_formField.FormField.Label,{children:"No clear button"}),(0,_jsxRuntime.jsx)(_formField.FormField.Field,{children:(0,_jsxRuntime.jsx)(_formField.FormField.Input,{as:Autocomplete,showClearButton:!1})})]});exports.NoClearButton=NoClearButton,NoClearButton.displayName="NoClearButton",NoClearButton.__RAW__="import React, {ReactNode, ReactElement, FC, ChangeEvent} from 'react';\nimport {ExtractProps} from '@workday/canvas-kit-react/common';\nimport {\n  Combobox,\n  ComboboxProps,\n  ComboBoxMenuItemGroup,\n} from '@workday/canvas-kit-labs-react/combobox';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {TextInput} from '@workday/canvas-kit-react/text-input';\n\nconst autocompleteResult = (\n  textModifier: number,\n  disabled: boolean\n): ReactElement<ExtractProps<typeof StyledMenuItem>> => (\n  <StyledMenuItem aria-disabled={disabled}>\n    Result\n    <span>\n      num<span>ber</span>\n    </span>\n    {textModifier}\n  </StyledMenuItem>\n);\n\nconst simpleAutoComplete = (count: number, showDisabledItems, total = 5) =>\n  Array.apply(null, Array(count))\n    .map((_, i) => autocompleteResult(i, showDisabledItems && i === 0))\n    .splice(0, total);\n\nconst groupOfResults = (\n  count: number,\n  showDisabledItems: boolean,\n  groupHeading: ReactNode = 'Group'\n): ComboBoxMenuItemGroup => ({\n  header: (\n    <StyledMenuItem>\n      <strong>{groupHeading}</strong>\n    </StyledMenuItem>\n  ),\n  items: simpleAutoComplete(count, showDisabledItems, 10),\n});\n\nconst Autocomplete: FC<\n  Omit<ComboboxProps, 'children'> & {\n    group?: boolean;\n    showDisabledItems?: boolean;\n  }\n> = ({showClearButton, group, showDisabledItems = false, ...props}) => {\n  const [currentText, setCurrentText] = React.useState('');\n\n  const autocompleteCallback = (event: ChangeEvent<HTMLInputElement>): void => {\n    setCurrentText(event.target.value);\n  };\n\n  const textLength = currentText.length;\n  const groupLength = Math.floor(textLength / 2);\n\n  return (\n    <Combobox\n      autocompleteItems={\n        group\n          ? [\n              groupOfResults(groupLength, showDisabledItems, <em>Animals</em>),\n              groupOfResults(Math.min(1, groupLength), showDisabledItems, 'Cars'),\n            ]\n          : simpleAutoComplete(textLength, showDisabledItems, 10)\n      }\n      onChange={autocompleteCallback}\n      showClearButton={showClearButton == null ? true : showClearButton}\n      labelId=\"autocomplete-123\"\n      initialValue=\"Test\"\n      {...props}\n    >\n      <TextInput placeholder=\"Autocomplete\" />\n    </Combobox>\n  );\n};\n\nexport const NoClearButton = () => {\n  return (\n    <FormField id=\"autocomplete-123\">\n      <FormField.Label>No clear button</FormField.Label>\n      <FormField.Field>\n        <FormField.Input as={Autocomplete} showClearButton={false} />\n      </FormField.Field>\n    </FormField>\n  );\n};\n"},"./modules/labs-react/combobox/stories/examples/RTL.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RTL=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_combobox=__webpack_require__("./modules/labs-react/combobox/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const autocompleteResult=(textModifier,disabled)=>(0,_jsxRuntime.jsxs)(_menu.StyledMenuItem,{isDisabled:disabled,children:["Result",(0,_jsxRuntime.jsxs)("span",{children:["num",(0,_jsxRuntime.jsx)("span",{children:"ber"})]}),textModifier]});autocompleteResult.displayName="autocompleteResult";const simpleAutoComplete=(count,showDisabledItems,total=5)=>Array.apply(null,Array(count)).map(((_,i)=>autocompleteResult(i,showDisabledItems&&0===i))).splice(0,total),groupOfResults=(count,showDisabledItems,groupHeading="Group")=>({header:(0,_jsxRuntime.jsx)(_menu.StyledMenuItem,{children:(0,_jsxRuntime.jsx)("strong",{children:groupHeading})}),items:simpleAutoComplete(count,showDisabledItems,10)}),Autocomplete=({showClearButton,group,showDisabledItems=!1,...props})=>{const[currentText,setCurrentText]=_react.default.useState(""),textLength=currentText.length,groupLength=Math.floor(textLength/2);return(0,_jsxRuntime.jsx)(_combobox.Combobox,{autocompleteItems:group?[groupOfResults(groupLength,showDisabledItems,(0,_jsxRuntime.jsx)("em",{children:"Animals"})),groupOfResults(Math.min(1,groupLength),showDisabledItems,"Cars")]:simpleAutoComplete(textLength,showDisabledItems,10),onChange:event=>{setCurrentText(event.target.value)},showClearButton:null==showClearButton||showClearButton,labelId:"autocomplete-123",initialValue:"Test",...props,children:(0,_jsxRuntime.jsx)(_textInput.TextInput,{placeholder:"Autocomplete"})})};Autocomplete.displayName="Autocomplete";const RTL=()=>(0,_jsxRuntime.jsx)(_common.CanvasProvider,{theme:{canvas:{direction:_common.ContentDirection.RTL}},children:(0,_jsxRuntime.jsxs)(_formField.FormField,{id:"rtl-autocomplete-123",children:[(0,_jsxRuntime.jsx)(_formField.FormField.Label,{children:"RTL Autocomplete example"}),(0,_jsxRuntime.jsx)(_formField.FormField.Field,{children:(0,_jsxRuntime.jsx)(_formField.FormField.Input,{as:Autocomplete})})]})});exports.RTL=RTL,RTL.displayName="RTL",RTL.__RAW__="import React, {ReactNode, ReactElement, FC, ChangeEvent} from 'react';\nimport {\n  Combobox,\n  ComboboxProps,\n  ComboBoxMenuItemGroup,\n} from '@workday/canvas-kit-labs-react/combobox';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\nimport {StyledMenuItem} from '@workday/canvas-kit-react/menu';\nimport {TextInput} from '@workday/canvas-kit-react/text-input';\nimport {CanvasProvider, ContentDirection, ExtractProps} from '@workday/canvas-kit-react/common';\n\nconst autocompleteResult = (\n  textModifier: number,\n  disabled: boolean\n): ReactElement<ExtractProps<typeof StyledMenuItem>> => (\n  <StyledMenuItem isDisabled={disabled}>\n    Result\n    <span>\n      num<span>ber</span>\n    </span>\n    {textModifier}\n  </StyledMenuItem>\n);\n\nconst simpleAutoComplete = (count: number, showDisabledItems, total = 5) =>\n  Array.apply(null, Array(count))\n    .map((_, i) => autocompleteResult(i, showDisabledItems && i === 0))\n    .splice(0, total);\n\nconst groupOfResults = (\n  count: number,\n  showDisabledItems: boolean,\n  groupHeading: ReactNode = 'Group'\n): ComboBoxMenuItemGroup => ({\n  header: (\n    <StyledMenuItem>\n      <strong>{groupHeading}</strong>\n    </StyledMenuItem>\n  ),\n  items: simpleAutoComplete(count, showDisabledItems, 10),\n});\n\nconst Autocomplete: FC<\n  Omit<ComboboxProps, 'children'> & {\n    group?: boolean;\n    showDisabledItems?: boolean;\n  }\n> = ({showClearButton, group, showDisabledItems = false, ...props}) => {\n  const [currentText, setCurrentText] = React.useState('');\n\n  const autocompleteCallback = (event: ChangeEvent<HTMLInputElement>): void => {\n    setCurrentText(event.target.value);\n  };\n\n  const textLength = currentText.length;\n  const groupLength = Math.floor(textLength / 2);\n\n  return (\n    <Combobox\n      autocompleteItems={\n        group\n          ? [\n              groupOfResults(groupLength, showDisabledItems, <em>Animals</em>),\n              groupOfResults(Math.min(1, groupLength), showDisabledItems, 'Cars'),\n            ]\n          : simpleAutoComplete(textLength, showDisabledItems, 10)\n      }\n      onChange={autocompleteCallback}\n      showClearButton={showClearButton == null ? true : showClearButton}\n      labelId=\"autocomplete-123\"\n      initialValue=\"Test\"\n      {...props}\n    >\n      <TextInput placeholder=\"Autocomplete\" />\n    </Combobox>\n  );\n};\n\nexport const RTL = () => {\n  return (\n    <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n      <FormField id=\"rtl-autocomplete-123\">\n        <FormField.Label>RTL Autocomplete example</FormField.Label>\n        <FormField.Field>\n          <FormField.Input as={Autocomplete} />\n        </FormField.Field>\n      </FormField>\n    </CanvasProvider>\n  );\n};\n"}}]);