"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[3996],{"./modules/react/card/stories/visual-testing/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.CardStates=void 0;(function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}})(__webpack_require__("./node_modules/react/index.js"));var _testing=__webpack_require__("./modules/react/testing/index.ts"),_card=__webpack_require__("./modules/react/card/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Containers/Card",component:_card.Card,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\n\\nimport {Card} from '@workday/canvas-kit-react/card';\\nimport {system} from '@workday/canvas-tokens-web';\\nimport {cssVar, px2rem} from '@workday/canvas-kit-styling';\\n\\nexport default {\\n  title: 'Testing/Containers/Card',\\n  component: Card,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const CardStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Without Heading', props: {heading: false}},\\n          {label: 'Borderless', props: {variant: 'borderless'}},\\n          {label: 'Filled', props: {variant: 'filled'}},\\n          {label: 'With Heading', props: {}},\\n          {\\n            label: 'With custom padding (0px)',\\n            props: {cs: {padding: system.space.zero}},\\n          },\\n          {\\n            label: 'With custom padding (16px)',\\n            props: {cs: {padding: system.space.x4}},\\n          },\\n          {\\n            label: 'With custom gap (0px)',\\n            props: {cs: {gap: system.space.zero}},\\n          },\\n          {\\n            label: 'With custom box shadow (system.depth[1])',\\n            props: {cs: {boxShadow: system.depth[1]}},\\n          },\\n          {\\n            label: 'With custom width (300px)',\\n            props: {cs: {width: px2rem(300)}},\\n          },\\n          {\\n            label: 'With custom height (400px)',\\n            props: {cs: {height: px2rem(400)}},\\n          },\\n        ]}\\n        columnProps={[{label: 'Components', props: {}}]}\\n      >\\n        {({heading = true, ...props}) => (\\n          <div\\n            style={{\\n              background:\\n                props.variant !== 'filled' ? cssVar(system.color.bg.alt.softer) : undefined,\\n              padding: cssVar(system.space.x4),\\n            }}\\n          >\\n            <Card {...props}>\\n              {heading && <Card.Heading>Delete Item</Card.Heading>}\\n              <Card.Body>Card Content</Card.Body>\\n            </Card>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"CardStates\": {\n    \"startLoc\": {\n      \"col\": 26,\n      \"line\": 18\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 71\n    },\n    \"startBody\": {\n      \"col\": 26,\n      \"line\": 18\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 71\n    }\n  }\n};\n    \nimport React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\n\nimport {Card} from '@workday/canvas-kit-react/card';\nimport {system} from '@workday/canvas-tokens-web';\nimport {cssVar, px2rem} from '@workday/canvas-kit-styling';\n\nexport default {\n  title: 'Testing/Containers/Card',\n  component: Card,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\n\\nimport {Card} from '@workday/canvas-kit-react/card';\\nimport {system} from '@workday/canvas-tokens-web';\\nimport {cssVar, px2rem} from '@workday/canvas-kit-styling';\\n\\nexport default {\\n  title: 'Testing/Containers/Card',\\n  component: Card,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const CardStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Without Heading', props: {heading: false}},\\n          {label: 'Borderless', props: {variant: 'borderless'}},\\n          {label: 'Filled', props: {variant: 'filled'}},\\n          {label: 'With Heading', props: {}},\\n          {\\n            label: 'With custom padding (0px)',\\n            props: {cs: {padding: system.space.zero}},\\n          },\\n          {\\n            label: 'With custom padding (16px)',\\n            props: {cs: {padding: system.space.x4}},\\n          },\\n          {\\n            label: 'With custom gap (0px)',\\n            props: {cs: {gap: system.space.zero}},\\n          },\\n          {\\n            label: 'With custom box shadow (system.depth[1])',\\n            props: {cs: {boxShadow: system.depth[1]}},\\n          },\\n          {\\n            label: 'With custom width (300px)',\\n            props: {cs: {width: px2rem(300)}},\\n          },\\n          {\\n            label: 'With custom height (400px)',\\n            props: {cs: {height: px2rem(400)}},\\n          },\\n        ]}\\n        columnProps={[{label: 'Components', props: {}}]}\\n      >\\n        {({heading = true, ...props}) => (\\n          <div\\n            style={{\\n              background:\\n                props.variant !== 'filled' ? cssVar(system.color.bg.alt.softer) : undefined,\\n              padding: cssVar(system.space.x4),\\n            }}\\n          >\\n            <Card {...props}>\\n              {heading && <Card.Heading>Delete Item</Card.Heading>}\\n              <Card.Body>Card Content</Card.Body>\\n            </Card>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\",\n    \"locationsMap\": {\n      \"card-states\": {\n        \"startLoc\": {\n          \"col\": 26,\n          \"line\": 18\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 71\n        },\n        \"startBody\": {\n          \"col\": 26,\n          \"line\": 18\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 71\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const CardStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Without Heading', props: {heading: false}},\n          {label: 'Borderless', props: {variant: 'borderless'}},\n          {label: 'Filled', props: {variant: 'filled'}},\n          {label: 'With Heading', props: {}},\n          {\n            label: 'With custom padding (0px)',\n            props: {cs: {padding: system.space.zero}},\n          },\n          {\n            label: 'With custom padding (16px)',\n            props: {cs: {padding: system.space.x4}},\n          },\n          {\n            label: 'With custom gap (0px)',\n            props: {cs: {gap: system.space.zero}},\n          },\n          {\n            label: 'With custom box shadow (system.depth[1])',\n            props: {cs: {boxShadow: system.depth[1]}},\n          },\n          {\n            label: 'With custom width (300px)',\n            props: {cs: {width: px2rem(300)}},\n          },\n          {\n            label: 'With custom height (400px)',\n            props: {cs: {height: px2rem(400)}},\n          },\n        ]}\n        columnProps={[{label: 'Components', props: {}}]}\n      >\n        {({heading = true, ...props}) => (\n          <div\n            style={{\n              background:\n                props.variant !== 'filled' ? cssVar(system.color.bg.alt.softer) : undefined,\n              padding: cssVar(system.space.x4),\n            }}\n          >\n            <Card {...props}>\n              {heading && <Card.Heading>Delete Item</Card.Heading>}\n              <Card.Body>Card Content</Card.Body>\n            </Card>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n",locationsMap:{"card-states":{startLoc:{col:26,line:69},endLoc:{col:1,line:122},startBody:{col:26,line:69},endBody:{col:1,line:122}}}},storySource:{source:"import React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\n\nimport {Card} from '@workday/canvas-kit-react/card';\nimport {system} from '@workday/canvas-tokens-web';\nimport {cssVar, px2rem} from '@workday/canvas-kit-styling';\n\nexport default {\n  title: 'Testing/Containers/Card',\n  component: Card,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const CardStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Without Heading', props: {heading: false}},\n          {label: 'Borderless', props: {variant: 'borderless'}},\n          {label: 'Filled', props: {variant: 'filled'}},\n          {label: 'With Heading', props: {}},\n          {\n            label: 'With custom padding (0px)',\n            props: {cs: {padding: system.space.zero}},\n          },\n          {\n            label: 'With custom padding (16px)',\n            props: {cs: {padding: system.space.x4}},\n          },\n          {\n            label: 'With custom gap (0px)',\n            props: {cs: {gap: system.space.zero}},\n          },\n          {\n            label: 'With custom box shadow (system.depth[1])',\n            props: {cs: {boxShadow: system.depth[1]}},\n          },\n          {\n            label: 'With custom width (300px)',\n            props: {cs: {width: px2rem(300)}},\n          },\n          {\n            label: 'With custom height (400px)',\n            props: {cs: {height: px2rem(400)}},\n          },\n        ]}\n        columnProps={[{label: 'Components', props: {}}]}\n      >\n        {({heading = true, ...props}) => (\n          <div\n            style={{\n              background:\n                props.variant !== 'filled' ? cssVar(system.color.bg.alt.softer) : undefined,\n              padding: cssVar(system.space.x4),\n            }}\n          >\n            <Card {...props}>\n              {heading && <Card.Heading>Delete Item</Card.Heading>}\n              <Card.Body>Card Content</Card.Body>\n            </Card>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n",locationsMap:{"card-states":{startLoc:{col:26,line:18},endLoc:{col:1,line:71},startBody:{col:26,line:18},endBody:{col:1,line:71}}}},chromatic:{disable:!1}}};exports.CardStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Without Heading",props:{heading:!1}},{label:"Borderless",props:{variant:"borderless"}},{label:"Filled",props:{variant:"filled"}},{label:"With Heading",props:{}},{label:"With custom padding (0px)",props:{cs:{padding:_canvasTokensWeb.system.space.zero}}},{label:"With custom padding (16px)",props:{cs:{padding:_canvasTokensWeb.system.space.x4}}},{label:"With custom gap (0px)",props:{cs:{gap:_canvasTokensWeb.system.space.zero}}},{label:"With custom box shadow (system.depth[1])",props:{cs:{boxShadow:_canvasTokensWeb.system.depth[1]}}},{label:"With custom width (300px)",props:{cs:{width:(0,_canvasKitStyling.px2rem)(300)}}},{label:"With custom height (400px)",props:{cs:{height:(0,_canvasKitStyling.px2rem)(400)}}}],columnProps:[{label:"Components",props:{}}],children:({heading=!0,...props})=>(0,_jsxRuntime.jsx)("div",{style:{background:"filled"!==props.variant?(0,_canvasKitStyling.cssVar)(_canvasTokensWeb.system.color.bg.alt.softer):void 0,padding:(0,_canvasKitStyling.cssVar)(_canvasTokensWeb.system.space.x4)},children:(0,_jsxRuntime.jsxs)(_card.Card,{...props,children:[heading&&(0,_jsxRuntime.jsx)(_card.Card.Heading,{children:"Delete Item"}),(0,_jsxRuntime.jsx)(_card.Card.Body,{children:"Card Content"})]})})})})};module.exports.__namedExportsOrder=["CardStates"]}}]);