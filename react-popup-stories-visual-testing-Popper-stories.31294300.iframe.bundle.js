"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1984],{"./modules/react/popup/stories/visual-testing/Popper.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.PopperRTL=exports.CustomPlacement=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_popup=__webpack_require__("./modules/react/popup/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}exports.default={title:"Testing/Popups/Popper",component:_popup.Popper,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import * as React from \'react\';\\nimport {CanvasProvider, ContentDirection} from \'@workday/canvas-kit-react/common\';\\nimport {Menu} from \'@workday/canvas-kit-react/menu\';\\nimport {Popup, Popper} from \'@workday/canvas-kit-react/popup\';\\nimport {colors, space, borderRadius} from \'@workday/canvas-kit-react/tokens\';\\n\\nexport default {\\n  title: \'Testing/Popups/Popper\',\\n  component: Popper,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst containerStyles: React.CSSProperties = {\\n  display: \'flex\',\\n  alignItems: \'center\',\\n  justifyContent: \'center\',\\n\\n  width: 400,\\n  height: 400,\\n};\\n\\nconst innerContainerStyles: React.CSSProperties = {\\n  overflow: \'hidden\',\\n\\n  width: 200,\\n  height: 200,\\n  padding: space.m,\\n\\n  border: `1px solid ${colors.blueberry500}`,\\n  borderRadius: borderRadius.l,\\n};\\n\\nconst squareStyles: React.CSSProperties = {\\n  position: \'absolute\',\\n  left: 190,\\n  top: 250,\\n};\\n\\nexport const CustomPlacement = {\\n  render: () => {\\n    const ownerRef = React.useRef<HTMLDivElement>(null);\\n    const virtualLeft = 190 + 30; // square offset + red box offset\\n    const virtualTop = 250 + 30; // square offset + red box offset\\n    return (\\n      <div style={containerStyles}>\\n        <div style={innerContainerStyles}>\\n          {\\n            \'The element with the black square owns the Popper while it is virtually positioned to the red square:\'\\n          }\\n          <div style={squareStyles} ref={ownerRef}>\\n            <svg\\n              xmlns=\\"http://www.w3.org/2000/svg\\"\\n              width=\\"100\\"\\n              height=\\"100\\"\\n              fill=\\"none\\"\\n              viewBox=\\"0 0 100 100\\"\\n            >\\n              <path stroke={colors.blackPepper400} d=\\"M0.5 0.5H99.5V99.5H0.5z\\"></path>\\n              <path fill={colors.cinnamon400} d=\\"M30 30H70V70H30z\\"></path>\\n            </svg>\\n          </div>\\n          <Popper\\n            anchorElement={ownerRef}\\n            getAnchorClientRect={() => ({\\n              top: virtualTop,\\n              left: virtualLeft,\\n              width: 40,\\n              height: 40,\\n              bottom: virtualTop + 40,\\n              right: virtualLeft + 40,\\n              x: virtualLeft,\\n              y: virtualTop,\\n              toJSON: () => \'\',\\n            })}\\n          >\\n            <Menu>\\n              <Menu.Card>\\n                <Menu.List>\\n                  <Menu.Item>Custom</Menu.Item>\\n                  <Menu.Item>Placement</Menu.Item>\\n                </Menu.List>\\n              </Menu.Card>\\n            </Menu>\\n          </Popper>\\n        </div>\\n      </div>\\n    );\\n  },\\n};\\n\\nexport const PopperRTL = () => (\\n  <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\\n    <Popper open={true}>\\n      <Popup.Card style={{animation: \'none\'}} width={300}>\\n        <Popup.CloseIcon aria-label=\\"\\" />\\n        <Popup.Heading>למחוק פריט</Popup.Heading>\\n        <Popup.Body>האם ברצונך למחוק פריט זה</Popup.Body>\\n      </Popup.Card>\\n    </Popper>\\n  </CanvasProvider>\\n);\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "CustomPlacement": {\n    "startLoc": {\n      "col": 31,\n      "line": 43\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 93\n    },\n    "startBody": {\n      "col": 31,\n      "line": 43\n    },\n    "endBody": {\n      "col": 1,\n      "line": 93\n    }\n  },\n  "PopperRTL": {\n    "startLoc": {\n      "col": 25,\n      "line": 95\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 105\n    },\n    "startBody": {\n      "col": 25,\n      "line": 95\n    },\n    "endBody": {\n      "col": 1,\n      "line": 105\n    }\n  }\n};\n    \nimport * as React from \'react\';\nimport {CanvasProvider, ContentDirection} from \'@workday/canvas-kit-react/common\';\nimport {Menu} from \'@workday/canvas-kit-react/menu\';\nimport {Popup, Popper} from \'@workday/canvas-kit-react/popup\';\nimport {colors, space, borderRadius} from \'@workday/canvas-kit-react/tokens\';\n\nexport default {\n  title: \'Testing/Popups/Popper\',\n  component: Popper,\n  parameters: {\n  "storySource": {\n    "source": "import * as React from \'react\';\\nimport {CanvasProvider, ContentDirection} from \'@workday/canvas-kit-react/common\';\\nimport {Menu} from \'@workday/canvas-kit-react/menu\';\\nimport {Popup, Popper} from \'@workday/canvas-kit-react/popup\';\\nimport {colors, space, borderRadius} from \'@workday/canvas-kit-react/tokens\';\\n\\nexport default {\\n  title: \'Testing/Popups/Popper\',\\n  component: Popper,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst containerStyles: React.CSSProperties = {\\n  display: \'flex\',\\n  alignItems: \'center\',\\n  justifyContent: \'center\',\\n\\n  width: 400,\\n  height: 400,\\n};\\n\\nconst innerContainerStyles: React.CSSProperties = {\\n  overflow: \'hidden\',\\n\\n  width: 200,\\n  height: 200,\\n  padding: space.m,\\n\\n  border: `1px solid ${colors.blueberry500}`,\\n  borderRadius: borderRadius.l,\\n};\\n\\nconst squareStyles: React.CSSProperties = {\\n  position: \'absolute\',\\n  left: 190,\\n  top: 250,\\n};\\n\\nexport const CustomPlacement = {\\n  render: () => {\\n    const ownerRef = React.useRef<HTMLDivElement>(null);\\n    const virtualLeft = 190 + 30; // square offset + red box offset\\n    const virtualTop = 250 + 30; // square offset + red box offset\\n    return (\\n      <div style={containerStyles}>\\n        <div style={innerContainerStyles}>\\n          {\\n            \'The element with the black square owns the Popper while it is virtually positioned to the red square:\'\\n          }\\n          <div style={squareStyles} ref={ownerRef}>\\n            <svg\\n              xmlns=\\"http://www.w3.org/2000/svg\\"\\n              width=\\"100\\"\\n              height=\\"100\\"\\n              fill=\\"none\\"\\n              viewBox=\\"0 0 100 100\\"\\n            >\\n              <path stroke={colors.blackPepper400} d=\\"M0.5 0.5H99.5V99.5H0.5z\\"></path>\\n              <path fill={colors.cinnamon400} d=\\"M30 30H70V70H30z\\"></path>\\n            </svg>\\n          </div>\\n          <Popper\\n            anchorElement={ownerRef}\\n            getAnchorClientRect={() => ({\\n              top: virtualTop,\\n              left: virtualLeft,\\n              width: 40,\\n              height: 40,\\n              bottom: virtualTop + 40,\\n              right: virtualLeft + 40,\\n              x: virtualLeft,\\n              y: virtualTop,\\n              toJSON: () => \'\',\\n            })}\\n          >\\n            <Menu>\\n              <Menu.Card>\\n                <Menu.List>\\n                  <Menu.Item>Custom</Menu.Item>\\n                  <Menu.Item>Placement</Menu.Item>\\n                </Menu.List>\\n              </Menu.Card>\\n            </Menu>\\n          </Popper>\\n        </div>\\n      </div>\\n    );\\n  },\\n};\\n\\nexport const PopperRTL = () => (\\n  <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\\n    <Popper open={true}>\\n      <Popup.Card style={{animation: \'none\'}} width={300}>\\n        <Popup.CloseIcon aria-label=\\"\\" />\\n        <Popup.Heading>למחוק פריט</Popup.Heading>\\n        <Popup.Body>האם ברצונך למחוק פריט זה</Popup.Body>\\n      </Popup.Card>\\n    </Popper>\\n  </CanvasProvider>\\n);\\n",\n    "locationsMap": {\n      "custom-placement": {\n        "startLoc": {\n          "col": 31,\n          "line": 43\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 93\n        },\n        "startBody": {\n          "col": 31,\n          "line": 43\n        },\n        "endBody": {\n          "col": 1,\n          "line": 93\n        }\n      },\n      "popper-rtl": {\n        "startLoc": {\n          "col": 25,\n          "line": 95\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 105\n        },\n        "startBody": {\n          "col": 25,\n          "line": 95\n        },\n        "endBody": {\n          "col": 1,\n          "line": 105\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst containerStyles: React.CSSProperties = {\n  display: \'flex\',\n  alignItems: \'center\',\n  justifyContent: \'center\',\n\n  width: 400,\n  height: 400,\n};\n\nconst innerContainerStyles: React.CSSProperties = {\n  overflow: \'hidden\',\n\n  width: 200,\n  height: 200,\n  padding: space.m,\n\n  border: `1px solid ${colors.blueberry500}`,\n  borderRadius: borderRadius.l,\n};\n\nconst squareStyles: React.CSSProperties = {\n  position: \'absolute\',\n  left: 190,\n  top: 250,\n};\n\nexport const CustomPlacement = {\n  render: () => {\n    const ownerRef = React.useRef<HTMLDivElement>(null);\n    const virtualLeft = 190 + 30; // square offset + red box offset\n    const virtualTop = 250 + 30; // square offset + red box offset\n    return (\n      <div style={containerStyles}>\n        <div style={innerContainerStyles}>\n          {\n            \'The element with the black square owns the Popper while it is virtually positioned to the red square:\'\n          }\n          <div style={squareStyles} ref={ownerRef}>\n            <svg\n              xmlns="http://www.w3.org/2000/svg"\n              width="100"\n              height="100"\n              fill="none"\n              viewBox="0 0 100 100"\n            >\n              <path stroke={colors.blackPepper400} d="M0.5 0.5H99.5V99.5H0.5z"></path>\n              <path fill={colors.cinnamon400} d="M30 30H70V70H30z"></path>\n            </svg>\n          </div>\n          <Popper\n            anchorElement={ownerRef}\n            getAnchorClientRect={() => ({\n              top: virtualTop,\n              left: virtualLeft,\n              width: 40,\n              height: 40,\n              bottom: virtualTop + 40,\n              right: virtualLeft + 40,\n              x: virtualLeft,\n              y: virtualTop,\n              toJSON: () => \'\',\n            })}\n          >\n            <Menu>\n              <Menu.Card>\n                <Menu.List>\n                  <Menu.Item>Custom</Menu.Item>\n                  <Menu.Item>Placement</Menu.Item>\n                </Menu.List>\n              </Menu.Card>\n            </Menu>\n          </Popper>\n        </div>\n      </div>\n    );\n  },\n};;\n\nexport const PopperRTL = () => (\n  <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n    <Popper open={true}>\n      <Popup.Card style={{animation: \'none\'}} width={300}>\n        <Popup.CloseIcon aria-label="" />\n        <Popup.Heading>למחוק פריט</Popup.Heading>\n        <Popup.Body>האם ברצונך למחוק פריט זה</Popup.Body>\n      </Popup.Card>\n    </Popper>\n  </CanvasProvider>\n);\n',locationsMap:{"custom-placement":{startLoc:{col:31,line:130},endLoc:{col:1,line:180},startBody:{col:31,line:130},endBody:{col:1,line:180}},"popper-rtl":{startLoc:{col:25,line:182},endLoc:{col:1,line:192},startBody:{col:25,line:182},endBody:{col:1,line:192}}}},storySource:{source:"import * as React from 'react';\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\nimport {Menu} from '@workday/canvas-kit-react/menu';\nimport {Popup, Popper} from '@workday/canvas-kit-react/popup';\nimport {colors, space, borderRadius} from '@workday/canvas-kit-react/tokens';\n\nexport default {\n  title: 'Testing/Popups/Popper',\n  component: Popper,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst containerStyles: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  width: 400,\n  height: 400,\n};\n\nconst innerContainerStyles: React.CSSProperties = {\n  overflow: 'hidden',\n\n  width: 200,\n  height: 200,\n  padding: space.m,\n\n  border: `1px solid ${colors.blueberry500}`,\n  borderRadius: borderRadius.l,\n};\n\nconst squareStyles: React.CSSProperties = {\n  position: 'absolute',\n  left: 190,\n  top: 250,\n};\n\nexport const CustomPlacement = {\n  render: () => {\n    const ownerRef = React.useRef<HTMLDivElement>(null);\n    const virtualLeft = 190 + 30; // square offset + red box offset\n    const virtualTop = 250 + 30; // square offset + red box offset\n    return (\n      <div style={containerStyles}>\n        <div style={innerContainerStyles}>\n          {\n            'The element with the black square owns the Popper while it is virtually positioned to the red square:'\n          }\n          <div style={squareStyles} ref={ownerRef}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"100\"\n              height=\"100\"\n              fill=\"none\"\n              viewBox=\"0 0 100 100\"\n            >\n              <path stroke={colors.blackPepper400} d=\"M0.5 0.5H99.5V99.5H0.5z\"></path>\n              <path fill={colors.cinnamon400} d=\"M30 30H70V70H30z\"></path>\n            </svg>\n          </div>\n          <Popper\n            anchorElement={ownerRef}\n            getAnchorClientRect={() => ({\n              top: virtualTop,\n              left: virtualLeft,\n              width: 40,\n              height: 40,\n              bottom: virtualTop + 40,\n              right: virtualLeft + 40,\n              x: virtualLeft,\n              y: virtualTop,\n              toJSON: () => '',\n            })}\n          >\n            <Menu>\n              <Menu.Card>\n                <Menu.List>\n                  <Menu.Item>Custom</Menu.Item>\n                  <Menu.Item>Placement</Menu.Item>\n                </Menu.List>\n              </Menu.Card>\n            </Menu>\n          </Popper>\n        </div>\n      </div>\n    );\n  },\n};\n\nexport const PopperRTL = () => (\n  <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n    <Popper open={true}>\n      <Popup.Card style={{animation: 'none'}} width={300}>\n        <Popup.CloseIcon aria-label=\"\" />\n        <Popup.Heading>למחוק פריט</Popup.Heading>\n        <Popup.Body>האם ברצונך למחוק פריט זה</Popup.Body>\n      </Popup.Card>\n    </Popper>\n  </CanvasProvider>\n);\n",locationsMap:{"custom-placement":{startLoc:{col:31,line:43},endLoc:{col:1,line:93},startBody:{col:31,line:43},endBody:{col:1,line:93}},"popper-rtl":{startLoc:{col:25,line:95},endLoc:{col:1,line:105},startBody:{col:25,line:95},endBody:{col:1,line:105}}}},chromatic:{disable:!1}}};const containerStyles={display:"flex",alignItems:"center",justifyContent:"center",width:400,height:400},innerContainerStyles={overflow:"hidden",width:200,height:200,padding:_tokens.space.m,border:`1px solid ${_tokens.colors.blueberry500}`,borderRadius:_tokens.borderRadius.l},squareStyles={position:"absolute",left:190,top:250},PopperRTL=(exports.CustomPlacement={render:()=>{const ownerRef=React.useRef(null);return(0,_jsxRuntime.jsx)("div",{style:containerStyles,children:(0,_jsxRuntime.jsxs)("div",{style:innerContainerStyles,children:["The element with the black square owns the Popper while it is virtually positioned to the red square:",(0,_jsxRuntime.jsx)("div",{style:squareStyles,ref:ownerRef,children:(0,_jsxRuntime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100",height:"100",fill:"none",viewBox:"0 0 100 100",children:[(0,_jsxRuntime.jsx)("path",{stroke:_tokens.colors.blackPepper400,d:"M0.5 0.5H99.5V99.5H0.5z"}),(0,_jsxRuntime.jsx)("path",{fill:_tokens.colors.cinnamon400,d:"M30 30H70V70H30z"})]})}),(0,_jsxRuntime.jsx)(_popup.Popper,{anchorElement:ownerRef,getAnchorClientRect:()=>({top:280,left:220,width:40,height:40,bottom:320,right:260,x:220,y:280,toJSON:()=>""}),children:(0,_jsxRuntime.jsx)(_menu.Menu,{children:(0,_jsxRuntime.jsx)(_menu.Menu.Card,{children:(0,_jsxRuntime.jsxs)(_menu.Menu.List,{children:[(0,_jsxRuntime.jsx)(_menu.Menu.Item,{children:"Custom"}),(0,_jsxRuntime.jsx)(_menu.Menu.Item,{children:"Placement"})]})})})})]})})}},()=>(0,_jsxRuntime.jsx)(_common.CanvasProvider,{theme:{canvas:{direction:_common.ContentDirection.RTL}},children:(0,_jsxRuntime.jsx)(_popup.Popper,{open:!0,children:(0,_jsxRuntime.jsxs)(_popup.Popup.Card,{style:{animation:"none"},width:300,children:[(0,_jsxRuntime.jsx)(_popup.Popup.CloseIcon,{"aria-label":""}),(0,_jsxRuntime.jsx)(_popup.Popup.Heading,{children:"למחוק פריט"}),(0,_jsxRuntime.jsx)(_popup.Popup.Body,{children:"האם ברצונך למחוק פריט זה"})]})})}));exports.PopperRTL=PopperRTL,PopperRTL.displayName="PopperRTL",module.exports.__namedExportsOrder=["PopperRTL","CustomPlacement"]}}]);