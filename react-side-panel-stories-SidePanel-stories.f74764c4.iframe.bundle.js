"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1479],{"./modules/react/side-panel/stories/SidePanel.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=exports.Configurable=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_icon=__webpack_require__("./modules/react/icon/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_sidePanel=__webpack_require__("./modules/react/side-panel/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_searchForm=__webpack_require__("./modules/labs-react/search-form/index.ts"),_avatar=__webpack_require__("./modules/preview-react/avatar/index.ts"),_text=__webpack_require__("./modules/react/text/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}exports.default={parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import * as React from 'react';\\nimport {\\n  homeIcon,\\n  starIcon,\\n  rocketIcon,\\n  plusIcon,\\n  justifyIcon,\\n  assistantIcon,\\n  notificationsIcon,\\n  inboxIcon,\\n} from '@workday/canvas-system-icons-web';\\nimport styled from '@emotion/styled';\\n\\nimport {colors, type, space, depth} from '@workday/canvas-kit-react/tokens';\\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\\nimport {\\n  TertiaryButton,\\n  PrimaryButton,\\n  Hyperlink,\\n  SecondaryButton,\\n} from '@workday/canvas-kit-react/button';\\nimport {SidePanel} from '@workday/canvas-kit-react/side-panel';\\nimport {SidePanelProps} from '../lib/SidePanel';\\n\\nimport {\\n  defaultCanvasTheme,\\n  StyledType,\\n  createComponent,\\n  dubLogoPrimary,\\n} from '@workday/canvas-kit-react/common';\\nimport {Flex, FlexProps} from '@workday/canvas-kit-react/layout';\\nimport {SearchForm} from '@workday/canvas-kit-labs-react/search-form';\\nimport {Avatar} from '@workday/canvas-kit-preview-react/avatar';\\nimport {BodyText} from '@workday/canvas-kit-react/text';\\n\\nexport default {\\n  title: 'Components/Containers/Side Panel (deprecated)',\\n  component: SidePanel,\\n  argTypes: {\\n    backgroundColor: {\\n      options: {\\n        white: SidePanel.BackgroundColor.White,\\n        gray: SidePanel.BackgroundColor.Gray,\\n        transparent: SidePanel.BackgroundColor.Transparent,\\n      },\\n      control: 'radio',\\n    },\\n    openWidth: {\\n      control: 'number',\\n    },\\n    openDirection: {\\n      options: {\\n        left: SidePanel.OpenDirection.Left,\\n        right: SidePanel.OpenDirection.Right,\\n      },\\n      control: 'radio',\\n    },\\n    breakpoint: {\\n      control: 'number',\\n    },\\n    theme: {\\n      control: 'object',\\n      defaultValue: defaultCanvasTheme,\\n    },\\n  },\\n};\\n\\ninterface SidePanelState {\\n  open: boolean;\\n}\\n\\ninterface HeaderItemProps extends FlexProps {}\\n\\nconst UnorderedList = styled('ul')({\\n  paddingLeft: 0,\\n});\\n\\nconst AddButton = styled(SecondaryButton)({\\n  margin: '0 auto',\\n  display: 'flex',\\n});\\n\\nconst StyledListItem = styled(Flex)<StyledType>({\\n  display: 'flex',\\n  listStyle: 'none',\\n  alignItems: 'end',\\n  cursor: 'pointer',\\n  '&:hover': {\\n    backgroundColor: colors.soap300,\\n  },\\n});\\n\\nconst GlobalHeaderItem = createComponent('div')({\\n  displayName: 'GlobalHeader.Item',\\n  Component: ({gap = 's', ...props}: HeaderItemProps, ref) => (\\n    <Flex gap={gap} alignItems=\\\"center\\\" marginX={space.xs} ref={ref} {...props} />\\n  ),\\n});\\n\\nconst GlobalHeader = createComponent('header')({\\n  displayName: 'GlobalHeader',\\n  Component: (props, ref, Element) => <HeaderWrapper ref={ref} as={Element} {...props} />,\\n  subComponents: {Item: GlobalHeaderItem},\\n});\\n\\nconst HeaderWrapper = styled('header')<StyledType>({\\n  display: 'flex',\\n  alignItems: 'center',\\n  justifyContent: 'space-between',\\n  boxSizing: 'border-box',\\n  ...type.levels.subtext.large,\\n  WebkitFontSmoothing: 'antialiased',\\n  MozOsxFontSmoothing: 'grayscale',\\n  backgroundColor: colors.frenchVanilla100,\\n  ...depth[1],\\n  padding: space.xxs,\\n});\\n\\nconst WorkdayLogo = styled('span')({lineHeight: 0});\\n\\nclass SidePanelWrapper extends React.Component<SidePanelProps, SidePanelState> {\\n  public state = {\\n    open: true,\\n  };\\n\\n  public render() {\\n    const {open} = this.state;\\n\\n    return (\\n      <SidePanel\\n        {...this.props}\\n        open={open}\\n        onToggleClick={this.onClick}\\n        onBreakpointChange={this.handleBreakpoint}\\n        header={'Side Panel Header'}\\n      >\\n        {open ? (\\n          <PrimaryButton>Add New</PrimaryButton>\\n        ) : (\\n          <AddButton size=\\\"small\\\" aria-label=\\\"Add\\\" icon={plusIcon} />\\n        )}\\n        {/* TODO replace this with our list component */}\\n        <UnorderedList>\\n          <StyledListItem\\n            padding={open ? '15px 24px' : '15px 20px'}\\n            marginLeft={open ? '-24px' : 0}\\n            marginRight={open ? '-24px' : 0}\\n            justifyContent={open ? undefined : 'center'}\\n          >\\n            <span>\\n              <SystemIcon icon={homeIcon} />\\n            </span>\\n            {open && (\\n              <BodyText as=\\\"span\\\" size=\\\"small\\\" fontWeight=\\\"bold\\\" paddingLeft={24}>\\n                Home\\n              </BodyText>\\n            )}\\n          </StyledListItem>\\n          <StyledListItem\\n            padding={open ? '15px 24px' : '15px 20px'}\\n            marginLeft={open ? '-24px' : 0}\\n            marginRight={open ? '-24px' : 0}\\n            justifyContent={open ? undefined : 'center'}\\n          >\\n            <span>\\n              <SystemIcon icon={starIcon} />\\n            </span>\\n            {open && (\\n              <BodyText as=\\\"span\\\" size=\\\"small\\\" fontWeight=\\\"bold\\\" paddingLeft={24}>\\n                Favorites\\n              </BodyText>\\n            )}\\n          </StyledListItem>\\n          <StyledListItem\\n            padding={open ? '15px 24px' : '15px 20px'}\\n            marginLeft={open ? '-24px' : 0}\\n            marginRight={open ? '-24px' : 0}\\n            justifyContent={open ? undefined : 'center'}\\n          >\\n            <span>\\n              <SystemIcon icon={rocketIcon} />\\n            </span>\\n            {open && (\\n              <BodyText as=\\\"span\\\" size=\\\"small\\\" fontWeight=\\\"bold\\\" paddingLeft={24}>\\n                Items\\n              </BodyText>\\n            )}\\n          </StyledListItem>\\n        </UnorderedList>\\n      </SidePanel>\\n    );\\n  }\\n\\n  private onClick = () => {\\n    this.setState({\\n      open: !this.state.open,\\n    });\\n  };\\n\\n  private handleBreakpoint = (aboveBreakpoint: boolean) => {\\n    console.warn('handle breakpoint called');\\n    this.setState({\\n      open: aboveBreakpoint,\\n    });\\n  };\\n}\\n\\nexport const Default = {\\n  render: () => (\\n    <div style={{height: '67vh', position: 'relative'}}>\\n      <SidePanel\\n        backgroundColor={SidePanel.BackgroundColor.Gray}\\n        onToggleClick={() => console.warn('clicked')}\\n        header=\\\"Side Panel Header\\\"\\n        open={true}\\n      />\\n    </div>\\n  ),\\n};\\n\\nconst Template = props => (\\n  <div style={{height: '67vh', position: 'relative'}}>\\n    <GlobalHeader>\\n      <GlobalHeader.Item>\\n        <TertiaryButton aria-label=\\\"menu\\\" icon={justifyIcon} />\\n        <Hyperlink>\\n          <WorkdayLogo dangerouslySetInnerHTML={{__html: dubLogoPrimary}} />\\n        </Hyperlink>\\n      </GlobalHeader.Item>\\n      <GlobalHeader.Item margin=\\\"auto\\\" width=\\\"100%\\\" maxWidth={`calc(${space.xxxl} * 6)`}>\\n        <SearchForm onSubmit={() => 1} />\\n      </GlobalHeader.Item>\\n      <GlobalHeader.Item>\\n        <TertiaryButton aria-label=\\\"messages\\\" icon={assistantIcon} />\\n        <TertiaryButton aria-label=\\\"notifications\\\" icon={notificationsIcon} />\\n        <TertiaryButton aria-label=\\\"inbox\\\" icon={inboxIcon} />\\n        <Avatar size=\\\"medium\\\" name=\\\"Logan McNeil\\\" />\\n      </GlobalHeader.Item>\\n    </GlobalHeader>\\n    <SidePanelWrapper {...props} />\\n  </div>\\n);\\n\\nexport const Configurable = Template.bind({});\\n(Configurable as any).args = {\\n  backgroundColor: SidePanel.BackgroundColor.Gray,\\n  openWidth: 300,\\n  breakpoint: 768,\\n  openDirection: SidePanel.OpenDirection.Left,\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Default\": {\n    \"startLoc\": {\n      \"col\": 23,\n      \"line\": 208\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 219\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 208\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 219\n    }\n  },\n  \"Configurable\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 221\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 242\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 221\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 242\n    }\n  }\n};\n    \nimport * as React from 'react';\nimport {\n  homeIcon,\n  starIcon,\n  rocketIcon,\n  plusIcon,\n  justifyIcon,\n  assistantIcon,\n  notificationsIcon,\n  inboxIcon,\n} from '@workday/canvas-system-icons-web';\nimport styled from '@emotion/styled';\n\nimport {colors, type, space, depth} from '@workday/canvas-kit-react/tokens';\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\nimport {\n  TertiaryButton,\n  PrimaryButton,\n  Hyperlink,\n  SecondaryButton,\n} from '@workday/canvas-kit-react/button';\nimport {SidePanel} from '@workday/canvas-kit-react/side-panel';\nimport {SidePanelProps} from '../lib/SidePanel';\n\nimport {\n  defaultCanvasTheme,\n  StyledType,\n  createComponent,\n  dubLogoPrimary,\n} from '@workday/canvas-kit-react/common';\nimport {Flex, FlexProps} from '@workday/canvas-kit-react/layout';\nimport {SearchForm} from '@workday/canvas-kit-labs-react/search-form';\nimport {Avatar} from '@workday/canvas-kit-preview-react/avatar';\nimport {BodyText} from '@workday/canvas-kit-react/text';\n\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"import * as React from 'react';\\nimport {\\n  homeIcon,\\n  starIcon,\\n  rocketIcon,\\n  plusIcon,\\n  justifyIcon,\\n  assistantIcon,\\n  notificationsIcon,\\n  inboxIcon,\\n} from '@workday/canvas-system-icons-web';\\nimport styled from '@emotion/styled';\\n\\nimport {colors, type, space, depth} from '@workday/canvas-kit-react/tokens';\\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\\nimport {\\n  TertiaryButton,\\n  PrimaryButton,\\n  Hyperlink,\\n  SecondaryButton,\\n} from '@workday/canvas-kit-react/button';\\nimport {SidePanel} from '@workday/canvas-kit-react/side-panel';\\nimport {SidePanelProps} from '../lib/SidePanel';\\n\\nimport {\\n  defaultCanvasTheme,\\n  StyledType,\\n  createComponent,\\n  dubLogoPrimary,\\n} from '@workday/canvas-kit-react/common';\\nimport {Flex, FlexProps} from '@workday/canvas-kit-react/layout';\\nimport {SearchForm} from '@workday/canvas-kit-labs-react/search-form';\\nimport {Avatar} from '@workday/canvas-kit-preview-react/avatar';\\nimport {BodyText} from '@workday/canvas-kit-react/text';\\n\\nexport default {\\n  title: 'Components/Containers/Side Panel (deprecated)',\\n  component: SidePanel,\\n  argTypes: {\\n    backgroundColor: {\\n      options: {\\n        white: SidePanel.BackgroundColor.White,\\n        gray: SidePanel.BackgroundColor.Gray,\\n        transparent: SidePanel.BackgroundColor.Transparent,\\n      },\\n      control: 'radio',\\n    },\\n    openWidth: {\\n      control: 'number',\\n    },\\n    openDirection: {\\n      options: {\\n        left: SidePanel.OpenDirection.Left,\\n        right: SidePanel.OpenDirection.Right,\\n      },\\n      control: 'radio',\\n    },\\n    breakpoint: {\\n      control: 'number',\\n    },\\n    theme: {\\n      control: 'object',\\n      defaultValue: defaultCanvasTheme,\\n    },\\n  },\\n};\\n\\ninterface SidePanelState {\\n  open: boolean;\\n}\\n\\ninterface HeaderItemProps extends FlexProps {}\\n\\nconst UnorderedList = styled('ul')({\\n  paddingLeft: 0,\\n});\\n\\nconst AddButton = styled(SecondaryButton)({\\n  margin: '0 auto',\\n  display: 'flex',\\n});\\n\\nconst StyledListItem = styled(Flex)<StyledType>({\\n  display: 'flex',\\n  listStyle: 'none',\\n  alignItems: 'end',\\n  cursor: 'pointer',\\n  '&:hover': {\\n    backgroundColor: colors.soap300,\\n  },\\n});\\n\\nconst GlobalHeaderItem = createComponent('div')({\\n  displayName: 'GlobalHeader.Item',\\n  Component: ({gap = 's', ...props}: HeaderItemProps, ref) => (\\n    <Flex gap={gap} alignItems=\\\"center\\\" marginX={space.xs} ref={ref} {...props} />\\n  ),\\n});\\n\\nconst GlobalHeader = createComponent('header')({\\n  displayName: 'GlobalHeader',\\n  Component: (props, ref, Element) => <HeaderWrapper ref={ref} as={Element} {...props} />,\\n  subComponents: {Item: GlobalHeaderItem},\\n});\\n\\nconst HeaderWrapper = styled('header')<StyledType>({\\n  display: 'flex',\\n  alignItems: 'center',\\n  justifyContent: 'space-between',\\n  boxSizing: 'border-box',\\n  ...type.levels.subtext.large,\\n  WebkitFontSmoothing: 'antialiased',\\n  MozOsxFontSmoothing: 'grayscale',\\n  backgroundColor: colors.frenchVanilla100,\\n  ...depth[1],\\n  padding: space.xxs,\\n});\\n\\nconst WorkdayLogo = styled('span')({lineHeight: 0});\\n\\nclass SidePanelWrapper extends React.Component<SidePanelProps, SidePanelState> {\\n  public state = {\\n    open: true,\\n  };\\n\\n  public render() {\\n    const {open} = this.state;\\n\\n    return (\\n      <SidePanel\\n        {...this.props}\\n        open={open}\\n        onToggleClick={this.onClick}\\n        onBreakpointChange={this.handleBreakpoint}\\n        header={'Side Panel Header'}\\n      >\\n        {open ? (\\n          <PrimaryButton>Add New</PrimaryButton>\\n        ) : (\\n          <AddButton size=\\\"small\\\" aria-label=\\\"Add\\\" icon={plusIcon} />\\n        )}\\n        {/* TODO replace this with our list component */}\\n        <UnorderedList>\\n          <StyledListItem\\n            padding={open ? '15px 24px' : '15px 20px'}\\n            marginLeft={open ? '-24px' : 0}\\n            marginRight={open ? '-24px' : 0}\\n            justifyContent={open ? undefined : 'center'}\\n          >\\n            <span>\\n              <SystemIcon icon={homeIcon} />\\n            </span>\\n            {open && (\\n              <BodyText as=\\\"span\\\" size=\\\"small\\\" fontWeight=\\\"bold\\\" paddingLeft={24}>\\n                Home\\n              </BodyText>\\n            )}\\n          </StyledListItem>\\n          <StyledListItem\\n            padding={open ? '15px 24px' : '15px 20px'}\\n            marginLeft={open ? '-24px' : 0}\\n            marginRight={open ? '-24px' : 0}\\n            justifyContent={open ? undefined : 'center'}\\n          >\\n            <span>\\n              <SystemIcon icon={starIcon} />\\n            </span>\\n            {open && (\\n              <BodyText as=\\\"span\\\" size=\\\"small\\\" fontWeight=\\\"bold\\\" paddingLeft={24}>\\n                Favorites\\n              </BodyText>\\n            )}\\n          </StyledListItem>\\n          <StyledListItem\\n            padding={open ? '15px 24px' : '15px 20px'}\\n            marginLeft={open ? '-24px' : 0}\\n            marginRight={open ? '-24px' : 0}\\n            justifyContent={open ? undefined : 'center'}\\n          >\\n            <span>\\n              <SystemIcon icon={rocketIcon} />\\n            </span>\\n            {open && (\\n              <BodyText as=\\\"span\\\" size=\\\"small\\\" fontWeight=\\\"bold\\\" paddingLeft={24}>\\n                Items\\n              </BodyText>\\n            )}\\n          </StyledListItem>\\n        </UnorderedList>\\n      </SidePanel>\\n    );\\n  }\\n\\n  private onClick = () => {\\n    this.setState({\\n      open: !this.state.open,\\n    });\\n  };\\n\\n  private handleBreakpoint = (aboveBreakpoint: boolean) => {\\n    console.warn('handle breakpoint called');\\n    this.setState({\\n      open: aboveBreakpoint,\\n    });\\n  };\\n}\\n\\nexport const Default = {\\n  render: () => (\\n    <div style={{height: '67vh', position: 'relative'}}>\\n      <SidePanel\\n        backgroundColor={SidePanel.BackgroundColor.Gray}\\n        onToggleClick={() => console.warn('clicked')}\\n        header=\\\"Side Panel Header\\\"\\n        open={true}\\n      />\\n    </div>\\n  ),\\n};\\n\\nconst Template = props => (\\n  <div style={{height: '67vh', position: 'relative'}}>\\n    <GlobalHeader>\\n      <GlobalHeader.Item>\\n        <TertiaryButton aria-label=\\\"menu\\\" icon={justifyIcon} />\\n        <Hyperlink>\\n          <WorkdayLogo dangerouslySetInnerHTML={{__html: dubLogoPrimary}} />\\n        </Hyperlink>\\n      </GlobalHeader.Item>\\n      <GlobalHeader.Item margin=\\\"auto\\\" width=\\\"100%\\\" maxWidth={`calc(${space.xxxl} * 6)`}>\\n        <SearchForm onSubmit={() => 1} />\\n      </GlobalHeader.Item>\\n      <GlobalHeader.Item>\\n        <TertiaryButton aria-label=\\\"messages\\\" icon={assistantIcon} />\\n        <TertiaryButton aria-label=\\\"notifications\\\" icon={notificationsIcon} />\\n        <TertiaryButton aria-label=\\\"inbox\\\" icon={inboxIcon} />\\n        <Avatar size=\\\"medium\\\" name=\\\"Logan McNeil\\\" />\\n      </GlobalHeader.Item>\\n    </GlobalHeader>\\n    <SidePanelWrapper {...props} />\\n  </div>\\n);\\n\\nexport const Configurable = Template.bind({});\\n(Configurable as any).args = {\\n  backgroundColor: SidePanel.BackgroundColor.Gray,\\n  openWidth: 300,\\n  breakpoint: 768,\\n  openDirection: SidePanel.OpenDirection.Left,\\n};\\n\",\n    \"locationsMap\": {\n      \"default\": {\n        \"startLoc\": {\n          \"col\": 23,\n          \"line\": 208\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 219\n        },\n        \"startBody\": {\n          \"col\": 23,\n          \"line\": 208\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 219\n        }\n      },\n      \"configurable\": {\n        \"startLoc\": {\n          \"col\": 17,\n          \"line\": 221\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 242\n        },\n        \"startBody\": {\n          \"col\": 17,\n          \"line\": 221\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 242\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Containers/Side Panel (deprecated)',\n  component: SidePanel,\n  argTypes: {\n    backgroundColor: {\n      options: {\n        white: SidePanel.BackgroundColor.White,\n        gray: SidePanel.BackgroundColor.Gray,\n        transparent: SidePanel.BackgroundColor.Transparent,\n      },\n      control: 'radio',\n    },\n    openWidth: {\n      control: 'number',\n    },\n    openDirection: {\n      options: {\n        left: SidePanel.OpenDirection.Left,\n        right: SidePanel.OpenDirection.Right,\n      },\n      control: 'radio',\n    },\n    breakpoint: {\n      control: 'number',\n    },\n    theme: {\n      control: 'object',\n      defaultValue: defaultCanvasTheme,\n    },\n  },\n};\n\ninterface SidePanelState {\n  open: boolean;\n}\n\ninterface HeaderItemProps extends FlexProps {}\n\nconst UnorderedList = styled('ul')({\n  paddingLeft: 0,\n});\n\nconst AddButton = styled(SecondaryButton)({\n  margin: '0 auto',\n  display: 'flex',\n});\n\nconst StyledListItem = styled(Flex)<StyledType>({\n  display: 'flex',\n  listStyle: 'none',\n  alignItems: 'end',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: colors.soap300,\n  },\n});\n\nconst GlobalHeaderItem = createComponent('div')({\n  displayName: 'GlobalHeader.Item',\n  Component: ({gap = 's', ...props}: HeaderItemProps, ref) => (\n    <Flex gap={gap} alignItems=\"center\" marginX={space.xs} ref={ref} {...props} />\n  ),\n});\n\nconst GlobalHeader = createComponent('header')({\n  displayName: 'GlobalHeader',\n  Component: (props, ref, Element) => <HeaderWrapper ref={ref} as={Element} {...props} />,\n  subComponents: {Item: GlobalHeaderItem},\n});\n\nconst HeaderWrapper = styled('header')<StyledType>({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box',\n  ...type.levels.subtext.large,\n  WebkitFontSmoothing: 'antialiased',\n  MozOsxFontSmoothing: 'grayscale',\n  backgroundColor: colors.frenchVanilla100,\n  ...depth[1],\n  padding: space.xxs,\n});\n\nconst WorkdayLogo = styled('span')({lineHeight: 0});\n\nclass SidePanelWrapper extends React.Component<SidePanelProps, SidePanelState> {\n  public state = {\n    open: true,\n  };\n\n  public render() {\n    const {open} = this.state;\n\n    return (\n      <SidePanel\n        {...this.props}\n        open={open}\n        onToggleClick={this.onClick}\n        onBreakpointChange={this.handleBreakpoint}\n        header={'Side Panel Header'}\n      >\n        {open ? (\n          <PrimaryButton>Add New</PrimaryButton>\n        ) : (\n          <AddButton size=\"small\" aria-label=\"Add\" icon={plusIcon} />\n        )}\n        {/* TODO replace this with our list component */}\n        <UnorderedList>\n          <StyledListItem\n            padding={open ? '15px 24px' : '15px 20px'}\n            marginLeft={open ? '-24px' : 0}\n            marginRight={open ? '-24px' : 0}\n            justifyContent={open ? undefined : 'center'}\n          >\n            <span>\n              <SystemIcon icon={homeIcon} />\n            </span>\n            {open && (\n              <BodyText as=\"span\" size=\"small\" fontWeight=\"bold\" paddingLeft={24}>\n                Home\n              </BodyText>\n            )}\n          </StyledListItem>\n          <StyledListItem\n            padding={open ? '15px 24px' : '15px 20px'}\n            marginLeft={open ? '-24px' : 0}\n            marginRight={open ? '-24px' : 0}\n            justifyContent={open ? undefined : 'center'}\n          >\n            <span>\n              <SystemIcon icon={starIcon} />\n            </span>\n            {open && (\n              <BodyText as=\"span\" size=\"small\" fontWeight=\"bold\" paddingLeft={24}>\n                Favorites\n              </BodyText>\n            )}\n          </StyledListItem>\n          <StyledListItem\n            padding={open ? '15px 24px' : '15px 20px'}\n            marginLeft={open ? '-24px' : 0}\n            marginRight={open ? '-24px' : 0}\n            justifyContent={open ? undefined : 'center'}\n          >\n            <span>\n              <SystemIcon icon={rocketIcon} />\n            </span>\n            {open && (\n              <BodyText as=\"span\" size=\"small\" fontWeight=\"bold\" paddingLeft={24}>\n                Items\n              </BodyText>\n            )}\n          </StyledListItem>\n        </UnorderedList>\n      </SidePanel>\n    );\n  }\n\n  private onClick = () => {\n    this.setState({\n      open: !this.state.open,\n    });\n  };\n\n  private handleBreakpoint = (aboveBreakpoint: boolean) => {\n    console.warn('handle breakpoint called');\n    this.setState({\n      open: aboveBreakpoint,\n    });\n  };\n}\n\nexport const Default = {\n  render: () => (\n    <div style={{height: '67vh', position: 'relative'}}>\n      <SidePanel\n        backgroundColor={SidePanel.BackgroundColor.Gray}\n        onToggleClick={() => console.warn('clicked')}\n        header=\"Side Panel Header\"\n        open={true}\n      />\n    </div>\n  ),\n};;\n\nconst Template = props => (\n  <div style={{height: '67vh', position: 'relative'}}>\n    <GlobalHeader>\n      <GlobalHeader.Item>\n        <TertiaryButton aria-label=\"menu\" icon={justifyIcon} />\n        <Hyperlink>\n          <WorkdayLogo dangerouslySetInnerHTML={{__html: dubLogoPrimary}} />\n        </Hyperlink>\n      </GlobalHeader.Item>\n      <GlobalHeader.Item margin=\"auto\" width=\"100%\" maxWidth={`calc(${space.xxxl} * 6)`}>\n        <SearchForm onSubmit={() => 1} />\n      </GlobalHeader.Item>\n      <GlobalHeader.Item>\n        <TertiaryButton aria-label=\"messages\" icon={assistantIcon} />\n        <TertiaryButton aria-label=\"notifications\" icon={notificationsIcon} />\n        <TertiaryButton aria-label=\"inbox\" icon={inboxIcon} />\n        <Avatar size=\"medium\" name=\"Logan McNeil\" />\n      </GlobalHeader.Item>\n    </GlobalHeader>\n    <SidePanelWrapper {...props} />\n  </div>\n);\n\nexport const Configurable = Template.bind({});\n(Configurable as any).args = {\n  backgroundColor: SidePanel.BackgroundColor.Gray,\n  openWidth: 300,\n  breakpoint: 768,\n  openDirection: SidePanel.OpenDirection.Left,\n};\n",locationsMap:{default:{startLoc:{col:23,line:295},endLoc:{col:1,line:306},startBody:{col:23,line:295},endBody:{col:1,line:306}},configurable:{startLoc:{col:17,line:308},endLoc:{col:1,line:329},startBody:{col:17,line:308},endBody:{col:1,line:329}}}},storySource:{source:"import * as React from 'react';\nimport {\n  homeIcon,\n  starIcon,\n  rocketIcon,\n  plusIcon,\n  justifyIcon,\n  assistantIcon,\n  notificationsIcon,\n  inboxIcon,\n} from '@workday/canvas-system-icons-web';\nimport styled from '@emotion/styled';\n\nimport {colors, type, space, depth} from '@workday/canvas-kit-react/tokens';\nimport {SystemIcon} from '@workday/canvas-kit-react/icon';\nimport {\n  TertiaryButton,\n  PrimaryButton,\n  Hyperlink,\n  SecondaryButton,\n} from '@workday/canvas-kit-react/button';\nimport {SidePanel} from '@workday/canvas-kit-react/side-panel';\nimport {SidePanelProps} from '../lib/SidePanel';\n\nimport {\n  defaultCanvasTheme,\n  StyledType,\n  createComponent,\n  dubLogoPrimary,\n} from '@workday/canvas-kit-react/common';\nimport {Flex, FlexProps} from '@workday/canvas-kit-react/layout';\nimport {SearchForm} from '@workday/canvas-kit-labs-react/search-form';\nimport {Avatar} from '@workday/canvas-kit-preview-react/avatar';\nimport {BodyText} from '@workday/canvas-kit-react/text';\n\nexport default {\n  title: 'Components/Containers/Side Panel (deprecated)',\n  component: SidePanel,\n  argTypes: {\n    backgroundColor: {\n      options: {\n        white: SidePanel.BackgroundColor.White,\n        gray: SidePanel.BackgroundColor.Gray,\n        transparent: SidePanel.BackgroundColor.Transparent,\n      },\n      control: 'radio',\n    },\n    openWidth: {\n      control: 'number',\n    },\n    openDirection: {\n      options: {\n        left: SidePanel.OpenDirection.Left,\n        right: SidePanel.OpenDirection.Right,\n      },\n      control: 'radio',\n    },\n    breakpoint: {\n      control: 'number',\n    },\n    theme: {\n      control: 'object',\n      defaultValue: defaultCanvasTheme,\n    },\n  },\n};\n\ninterface SidePanelState {\n  open: boolean;\n}\n\ninterface HeaderItemProps extends FlexProps {}\n\nconst UnorderedList = styled('ul')({\n  paddingLeft: 0,\n});\n\nconst AddButton = styled(SecondaryButton)({\n  margin: '0 auto',\n  display: 'flex',\n});\n\nconst StyledListItem = styled(Flex)<StyledType>({\n  display: 'flex',\n  listStyle: 'none',\n  alignItems: 'end',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: colors.soap300,\n  },\n});\n\nconst GlobalHeaderItem = createComponent('div')({\n  displayName: 'GlobalHeader.Item',\n  Component: ({gap = 's', ...props}: HeaderItemProps, ref) => (\n    <Flex gap={gap} alignItems=\"center\" marginX={space.xs} ref={ref} {...props} />\n  ),\n});\n\nconst GlobalHeader = createComponent('header')({\n  displayName: 'GlobalHeader',\n  Component: (props, ref, Element) => <HeaderWrapper ref={ref} as={Element} {...props} />,\n  subComponents: {Item: GlobalHeaderItem},\n});\n\nconst HeaderWrapper = styled('header')<StyledType>({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  boxSizing: 'border-box',\n  ...type.levels.subtext.large,\n  WebkitFontSmoothing: 'antialiased',\n  MozOsxFontSmoothing: 'grayscale',\n  backgroundColor: colors.frenchVanilla100,\n  ...depth[1],\n  padding: space.xxs,\n});\n\nconst WorkdayLogo = styled('span')({lineHeight: 0});\n\nclass SidePanelWrapper extends React.Component<SidePanelProps, SidePanelState> {\n  public state = {\n    open: true,\n  };\n\n  public render() {\n    const {open} = this.state;\n\n    return (\n      <SidePanel\n        {...this.props}\n        open={open}\n        onToggleClick={this.onClick}\n        onBreakpointChange={this.handleBreakpoint}\n        header={'Side Panel Header'}\n      >\n        {open ? (\n          <PrimaryButton>Add New</PrimaryButton>\n        ) : (\n          <AddButton size=\"small\" aria-label=\"Add\" icon={plusIcon} />\n        )}\n        {/* TODO replace this with our list component */}\n        <UnorderedList>\n          <StyledListItem\n            padding={open ? '15px 24px' : '15px 20px'}\n            marginLeft={open ? '-24px' : 0}\n            marginRight={open ? '-24px' : 0}\n            justifyContent={open ? undefined : 'center'}\n          >\n            <span>\n              <SystemIcon icon={homeIcon} />\n            </span>\n            {open && (\n              <BodyText as=\"span\" size=\"small\" fontWeight=\"bold\" paddingLeft={24}>\n                Home\n              </BodyText>\n            )}\n          </StyledListItem>\n          <StyledListItem\n            padding={open ? '15px 24px' : '15px 20px'}\n            marginLeft={open ? '-24px' : 0}\n            marginRight={open ? '-24px' : 0}\n            justifyContent={open ? undefined : 'center'}\n          >\n            <span>\n              <SystemIcon icon={starIcon} />\n            </span>\n            {open && (\n              <BodyText as=\"span\" size=\"small\" fontWeight=\"bold\" paddingLeft={24}>\n                Favorites\n              </BodyText>\n            )}\n          </StyledListItem>\n          <StyledListItem\n            padding={open ? '15px 24px' : '15px 20px'}\n            marginLeft={open ? '-24px' : 0}\n            marginRight={open ? '-24px' : 0}\n            justifyContent={open ? undefined : 'center'}\n          >\n            <span>\n              <SystemIcon icon={rocketIcon} />\n            </span>\n            {open && (\n              <BodyText as=\"span\" size=\"small\" fontWeight=\"bold\" paddingLeft={24}>\n                Items\n              </BodyText>\n            )}\n          </StyledListItem>\n        </UnorderedList>\n      </SidePanel>\n    );\n  }\n\n  private onClick = () => {\n    this.setState({\n      open: !this.state.open,\n    });\n  };\n\n  private handleBreakpoint = (aboveBreakpoint: boolean) => {\n    console.warn('handle breakpoint called');\n    this.setState({\n      open: aboveBreakpoint,\n    });\n  };\n}\n\nexport const Default = {\n  render: () => (\n    <div style={{height: '67vh', position: 'relative'}}>\n      <SidePanel\n        backgroundColor={SidePanel.BackgroundColor.Gray}\n        onToggleClick={() => console.warn('clicked')}\n        header=\"Side Panel Header\"\n        open={true}\n      />\n    </div>\n  ),\n};\n\nconst Template = props => (\n  <div style={{height: '67vh', position: 'relative'}}>\n    <GlobalHeader>\n      <GlobalHeader.Item>\n        <TertiaryButton aria-label=\"menu\" icon={justifyIcon} />\n        <Hyperlink>\n          <WorkdayLogo dangerouslySetInnerHTML={{__html: dubLogoPrimary}} />\n        </Hyperlink>\n      </GlobalHeader.Item>\n      <GlobalHeader.Item margin=\"auto\" width=\"100%\" maxWidth={`calc(${space.xxxl} * 6)`}>\n        <SearchForm onSubmit={() => 1} />\n      </GlobalHeader.Item>\n      <GlobalHeader.Item>\n        <TertiaryButton aria-label=\"messages\" icon={assistantIcon} />\n        <TertiaryButton aria-label=\"notifications\" icon={notificationsIcon} />\n        <TertiaryButton aria-label=\"inbox\" icon={inboxIcon} />\n        <Avatar size=\"medium\" name=\"Logan McNeil\" />\n      </GlobalHeader.Item>\n    </GlobalHeader>\n    <SidePanelWrapper {...props} />\n  </div>\n);\n\nexport const Configurable = Template.bind({});\n(Configurable as any).args = {\n  backgroundColor: SidePanel.BackgroundColor.Gray,\n  openWidth: 300,\n  breakpoint: 768,\n  openDirection: SidePanel.OpenDirection.Left,\n};\n",locationsMap:{default:{startLoc:{col:23,line:208},endLoc:{col:1,line:219},startBody:{col:23,line:208},endBody:{col:1,line:219}},configurable:{startLoc:{col:17,line:221},endLoc:{col:1,line:242},startBody:{col:17,line:221},endBody:{col:1,line:242}}}}},title:"Components/Containers/Side Panel (deprecated)",component:_sidePanel.SidePanel,argTypes:{backgroundColor:{options:{white:_sidePanel.SidePanel.BackgroundColor.White,gray:_sidePanel.SidePanel.BackgroundColor.Gray,transparent:_sidePanel.SidePanel.BackgroundColor.Transparent},control:"radio"},openWidth:{control:"number"},openDirection:{options:{left:_sidePanel.SidePanel.OpenDirection.Left,right:_sidePanel.SidePanel.OpenDirection.Right},control:"radio"},breakpoint:{control:"number"},theme:{control:"object",defaultValue:_common.defaultCanvasTheme}}};const UnorderedList=(0,_styled.default)("ul")({paddingLeft:0}),AddButton=(0,_styled.default)(_button.SecondaryButton)({margin:"0 auto",display:"flex"}),StyledListItem=(0,_styled.default)(_layout.Flex)({display:"flex",listStyle:"none",alignItems:"end",cursor:"pointer","&:hover":{backgroundColor:_tokens.colors.soap300}}),GlobalHeaderItem=(0,_common.createComponent)("div")({displayName:"GlobalHeader.Item",Component:({gap="s",...props},ref)=>(0,_jsxRuntime.jsx)(_layout.Flex,{gap,alignItems:"center",marginX:_tokens.space.xs,ref,...props})}),GlobalHeader=(0,_common.createComponent)("header")({displayName:"GlobalHeader",Component:(props,ref,Element)=>(0,_jsxRuntime.jsx)(HeaderWrapper,{ref,as:Element,...props}),subComponents:{Item:GlobalHeaderItem}}),HeaderWrapper=(0,_styled.default)("header")({display:"flex",alignItems:"center",justifyContent:"space-between",boxSizing:"border-box",..._tokens.type.levels.subtext.large,WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",backgroundColor:_tokens.colors.frenchVanilla100,..._tokens.depth[1],padding:_tokens.space.xxs}),WorkdayLogo=(0,_styled.default)("span")({lineHeight:0});class SidePanelWrapper extends React.Component{state={open:!0};render(){const{open}=this.state;return(0,_jsxRuntime.jsxs)(_sidePanel.SidePanel,{...this.props,open,onToggleClick:this.onClick,onBreakpointChange:this.handleBreakpoint,header:"Side Panel Header",children:[open?(0,_jsxRuntime.jsx)(_button.PrimaryButton,{children:"Add New"}):(0,_jsxRuntime.jsx)(AddButton,{size:"small","aria-label":"Add",icon:_canvasSystemIconsWeb.plusIcon}),(0,_jsxRuntime.jsxs)(UnorderedList,{children:[(0,_jsxRuntime.jsxs)(StyledListItem,{padding:open?"15px 24px":"15px 20px",marginLeft:open?"-24px":0,marginRight:open?"-24px":0,justifyContent:open?void 0:"center",children:[(0,_jsxRuntime.jsx)("span",{children:(0,_jsxRuntime.jsx)(_icon.SystemIcon,{icon:_canvasSystemIconsWeb.homeIcon})}),open&&(0,_jsxRuntime.jsx)(_text.BodyText,{as:"span",size:"small",fontWeight:"bold",paddingLeft:24,children:"Home"})]}),(0,_jsxRuntime.jsxs)(StyledListItem,{padding:open?"15px 24px":"15px 20px",marginLeft:open?"-24px":0,marginRight:open?"-24px":0,justifyContent:open?void 0:"center",children:[(0,_jsxRuntime.jsx)("span",{children:(0,_jsxRuntime.jsx)(_icon.SystemIcon,{icon:_canvasSystemIconsWeb.starIcon})}),open&&(0,_jsxRuntime.jsx)(_text.BodyText,{as:"span",size:"small",fontWeight:"bold",paddingLeft:24,children:"Favorites"})]}),(0,_jsxRuntime.jsxs)(StyledListItem,{padding:open?"15px 24px":"15px 20px",marginLeft:open?"-24px":0,marginRight:open?"-24px":0,justifyContent:open?void 0:"center",children:[(0,_jsxRuntime.jsx)("span",{children:(0,_jsxRuntime.jsx)(_icon.SystemIcon,{icon:_canvasSystemIconsWeb.rocketIcon})}),open&&(0,_jsxRuntime.jsx)(_text.BodyText,{as:"span",size:"small",fontWeight:"bold",paddingLeft:24,children:"Items"})]})]})]})}onClick=()=>{this.setState({open:!this.state.open})};handleBreakpoint=aboveBreakpoint=>{console.warn("handle breakpoint called"),this.setState({open:aboveBreakpoint})}}SidePanelWrapper.displayName="SidePanelWrapper";exports.Default={render:()=>(0,_jsxRuntime.jsx)("div",{style:{height:"67vh",position:"relative"},children:(0,_jsxRuntime.jsx)(_sidePanel.SidePanel,{backgroundColor:_sidePanel.SidePanel.BackgroundColor.Gray,onToggleClick:()=>console.warn("clicked"),header:"Side Panel Header",open:!0})})};const Template=props=>(0,_jsxRuntime.jsxs)("div",{style:{height:"67vh",position:"relative"},children:[(0,_jsxRuntime.jsxs)(GlobalHeader,{children:[(0,_jsxRuntime.jsxs)(GlobalHeader.Item,{children:[(0,_jsxRuntime.jsx)(_button.TertiaryButton,{"aria-label":"menu",icon:_canvasSystemIconsWeb.justifyIcon}),(0,_jsxRuntime.jsx)(_button.Hyperlink,{children:(0,_jsxRuntime.jsx)(WorkdayLogo,{dangerouslySetInnerHTML:{__html:_common.dubLogoPrimary}})})]}),(0,_jsxRuntime.jsx)(GlobalHeader.Item,{margin:"auto",width:"100%",maxWidth:`calc(${_tokens.space.xxxl} * 6)`,children:(0,_jsxRuntime.jsx)(_searchForm.SearchForm,{onSubmit:()=>1})}),(0,_jsxRuntime.jsxs)(GlobalHeader.Item,{children:[(0,_jsxRuntime.jsx)(_button.TertiaryButton,{"aria-label":"messages",icon:_canvasSystemIconsWeb.assistantIcon}),(0,_jsxRuntime.jsx)(_button.TertiaryButton,{"aria-label":"notifications",icon:_canvasSystemIconsWeb.notificationsIcon}),(0,_jsxRuntime.jsx)(_button.TertiaryButton,{"aria-label":"inbox",icon:_canvasSystemIconsWeb.inboxIcon}),(0,_jsxRuntime.jsx)(_avatar.Avatar,{size:"medium",name:"Logan McNeil"})]})]}),(0,_jsxRuntime.jsx)(SidePanelWrapper,{...props})]});Template.displayName="Template";(exports.Configurable=Template.bind({})).args={backgroundColor:_sidePanel.SidePanel.BackgroundColor.Gray,openWidth:300,breakpoint:768,openDirection:_sidePanel.SidePanel.OpenDirection.Left},module.exports.__namedExportsOrder=["Default","Configurable"]}}]);