"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[5609],{"./modules/react/badge/stories/CountBadge.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NotificationBadge=exports.CustomLimit=exports.Basic=exports.default=void 0;var _CountBadge=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./modules/react/badge/stories/CountBadge.mdx")),_badge=__webpack_require__("./modules/react/badge/index.ts"),_Basic=__webpack_require__("./modules/react/badge/stories/examples/Basic.tsx"),_CustomLimit=__webpack_require__("./modules/react/badge/stories/examples/CustomLimit.tsx"),_NotificationBadge=__webpack_require__("./modules/react/badge/stories/examples/NotificationBadge.tsx");var _default={title:"Components/Indicators/CountBadge",component:_badge.CountBadge,tags:["autodocs"],parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import {Meta, StoryObj} from \'@storybook/react\';\\n\\nimport mdxDoc from \'./CountBadge.mdx\';\\n\\nimport {CountBadge} from \'@workday/canvas-kit-react/badge\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {CustomLimit as CustomLimitExample} from \'./examples/CustomLimit\';\\nimport {NotificationBadge as NotificationBadgeExample} from \'./examples/NotificationBadge\';\\n\\nexport default {\\n  title: \'Components/Indicators/CountBadge\',\\n  component: CountBadge,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof CountBadge>;\\n\\ntype Story = StoryObj<typeof CountBadge>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\nexport const CustomLimit: Story = {\\n  render: CustomLimitExample,\\n};\\nexport const NotificationBadge: Story = {\\n  render: NotificationBadgeExample,\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "Basic": {\n    "startLoc": {\n      "col": 28,\n      "line": 24\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 26\n    },\n    "startBody": {\n      "col": 28,\n      "line": 24\n    },\n    "endBody": {\n      "col": 1,\n      "line": 26\n    }\n  },\n  "CustomLimit": {\n    "startLoc": {\n      "col": 34,\n      "line": 27\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 29\n    },\n    "startBody": {\n      "col": 34,\n      "line": 27\n    },\n    "endBody": {\n      "col": 1,\n      "line": 29\n    }\n  },\n  "NotificationBadge": {\n    "startLoc": {\n      "col": 40,\n      "line": 30\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 32\n    },\n    "startBody": {\n      "col": 40,\n      "line": 30\n    },\n    "endBody": {\n      "col": 1,\n      "line": 32\n    }\n  }\n};\n    \nimport {Meta, StoryObj} from \'@storybook/react\';\n\nimport mdxDoc from \'./CountBadge.mdx\';\n\nimport {CountBadge} from \'@workday/canvas-kit-react/badge\';\n\nimport {Basic as BasicExample} from \'./examples/Basic\';\nimport {CustomLimit as CustomLimitExample} from \'./examples/CustomLimit\';\nimport {NotificationBadge as NotificationBadgeExample} from \'./examples/NotificationBadge\';\n\nexport default {\n  title: \'Components/Indicators/CountBadge\',\n  component: CountBadge,\n  tags: [\'autodocs\'],\n  parameters: {\n  "storySource": {\n    "source": "import {Meta, StoryObj} from \'@storybook/react\';\\n\\nimport mdxDoc from \'./CountBadge.mdx\';\\n\\nimport {CountBadge} from \'@workday/canvas-kit-react/badge\';\\n\\nimport {Basic as BasicExample} from \'./examples/Basic\';\\nimport {CustomLimit as CustomLimitExample} from \'./examples/CustomLimit\';\\nimport {NotificationBadge as NotificationBadgeExample} from \'./examples/NotificationBadge\';\\n\\nexport default {\\n  title: \'Components/Indicators/CountBadge\',\\n  component: CountBadge,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof CountBadge>;\\n\\ntype Story = StoryObj<typeof CountBadge>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\nexport const CustomLimit: Story = {\\n  render: CustomLimitExample,\\n};\\nexport const NotificationBadge: Story = {\\n  render: NotificationBadgeExample,\\n};\\n",\n    "locationsMap": {\n      "basic": {\n        "startLoc": {\n          "col": 28,\n          "line": 24\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 26\n        },\n        "startBody": {\n          "col": 28,\n          "line": 24\n        },\n        "endBody": {\n          "col": 1,\n          "line": 26\n        }\n      },\n      "custom-limit": {\n        "startLoc": {\n          "col": 34,\n          "line": 27\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 29\n        },\n        "startBody": {\n          "col": 34,\n          "line": 27\n        },\n        "endBody": {\n          "col": 1,\n          "line": 29\n        }\n      },\n      "notification-badge": {\n        "startLoc": {\n          "col": 40,\n          "line": 30\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 32\n        },\n        "startBody": {\n          "col": 40,\n          "line": 30\n        },\n        "endBody": {\n          "col": 1,\n          "line": 32\n        }\n      }\n    }\n  }\n,\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof CountBadge>;\n\ntype Story = StoryObj<typeof CountBadge>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};;\nexport const CustomLimit: Story = {\n  render: CustomLimitExample,\n};;\nexport const NotificationBadge: Story = {\n  render: NotificationBadgeExample,\n};\n',locationsMap:{basic:{startLoc:{col:28,line:147},endLoc:{col:1,line:149},startBody:{col:28,line:147},endBody:{col:1,line:149}},"custom-limit":{startLoc:{col:34,line:150},endLoc:{col:1,line:152},startBody:{col:34,line:150},endBody:{col:1,line:152}},"notification-badge":{startLoc:{col:40,line:153},endLoc:{col:1,line:155},startBody:{col:40,line:153},endBody:{col:1,line:155}}}},storySource:{source:"import {Meta, StoryObj} from '@storybook/react';\n\nimport mdxDoc from './CountBadge.mdx';\n\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\n\nimport {Basic as BasicExample} from './examples/Basic';\nimport {CustomLimit as CustomLimitExample} from './examples/CustomLimit';\nimport {NotificationBadge as NotificationBadgeExample} from './examples/NotificationBadge';\n\nexport default {\n  title: 'Components/Indicators/CountBadge',\n  component: CountBadge,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof CountBadge>;\n\ntype Story = StoryObj<typeof CountBadge>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};\nexport const CustomLimit: Story = {\n  render: CustomLimitExample,\n};\nexport const NotificationBadge: Story = {\n  render: NotificationBadgeExample,\n};\n",locationsMap:{basic:{startLoc:{col:28,line:24},endLoc:{col:1,line:26},startBody:{col:28,line:24},endBody:{col:1,line:26}},"custom-limit":{startLoc:{col:34,line:27},endLoc:{col:1,line:29},startBody:{col:34,line:27},endBody:{col:1,line:29}},"notification-badge":{startLoc:{col:40,line:30},endLoc:{col:1,line:32},startBody:{col:40,line:30},endBody:{col:1,line:32}}}},docs:{page:_CountBadge.default}}};exports.default=_default;const Basic={render:_Basic.Basic};exports.Basic=Basic;const CustomLimit={render:_CustomLimit.CustomLimit};exports.CustomLimit=CustomLimit;const NotificationBadge={render:_NotificationBadge.NotificationBadge};exports.NotificationBadge=NotificationBadge,module.exports.__namedExportsOrder=["NotificationBadge","CustomLimit","Basic"]},"./modules/react/badge/stories/CountBadge.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_Basic__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/react/badge/stories/examples/Basic.tsx"),_examples_CustomLimit__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./modules/react/badge/stories/examples/CustomLimit.tsx"),_examples_NotificationBadge__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./modules/react/badge/stories/examples/NotificationBadge.tsx"),_CountBadge_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/react/badge/stories/CountBadge.stories.ts");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre",h3:"h3",h4:"h4",ul:"ul",li:"li",a:"a"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{of:_CountBadge_stories__WEBPACK_IMPORTED_MODULE_5__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-count-badge",children:"Canvas Kit Count Badge"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," provides a quantity-based summary with dynamic values."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"installation",children:"Installation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-sh",children:"yarn add @workday/canvas-kit-react\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The following section provides examples for common use cases. Please be sure to also read the\nAccessibility section below."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"basic",children:"Basic"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In the example below, we're rendering a basic ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," with its ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"default"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"inverse"}),"\nvariants. The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"inverse"})," variant is intended for darker backgrounds to create more contrast."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Basic__WEBPACK_IMPORTED_MODULE_6__.Basic}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"custom-limit",children:"Custom Limit"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["By default, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"}),"'s limit is set to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"1000"}),". Once the count reaches the limit, the badge will\nformat the number: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"1000"})," becomes ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"999+"}),". The default limit is largely arbitrary and intended to\nprevent unexpected overflow. You should choose a limit based on your specific use case and consider\nthe user's experience. For example, someone looking for a new job finds there are ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"99+"})," new\nopportunities. Or perhaps someone returns from extended leave and is overwhelmed by ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"999+"})," unread\nmessages on their first day back."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_CustomLimit__WEBPACK_IMPORTED_MODULE_7__.CustomLimit}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"notification-badge",children:"Notification Badge"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Notifications are a major use case for ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"}),". When the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," value is updated in\nreal-time, screen readers must be supported with an ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"})," that will automatically\ndescribe the change in the number of notifications. If the web app only updates ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," as part\nof another screen update, then this use of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"})," is unnecessary and not recommended."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"notes-on-accessibility-for-the-example-below",children:"Notes on accessibility for the example below"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Tooltip"})," is set on the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SecondaryButton"})," automatically applying the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-label"})," to the button."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-describedby"})," property is conditionally set on the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SecondaryButton"})," when greater than zero\nreferencing a unique ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"id"})," for the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"})," value ."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"})," is used around the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CountBadge"}),", enabling screen readers to monitor changes in\nvalue."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"aria-label"})," string is conditionally set on ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"AriaLiveRegion"}),' when greater than zero, describing\n"New notification"']}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_NotificationBadge__WEBPACK_IMPORTED_MODULE_8__.NotificationBadge}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"custom-styles",children:"Custom Styles"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Count Badge supports custom styling via the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop. For more information, check our\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://workday.github.io/canvas-kit/?path=/docs/styling-how-to-customize-styles--docs",target:"_blank",rel:"nofollow noopener noreferrer",children:'"How To Customize Styles"'}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"component-api",children:"Component API"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.SymbolDoc,{name:"CountBadge",fileName:"/react/"})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/react/badge/stories/examples/Basic.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Basic=Basic;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_badge=__webpack_require__("./modules/react/badge/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const containerStyles=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",display:"flex",flexDirection:"column"}),defaultBackground=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",backgroundColor:_canvasTokensWeb.base.frenchVanilla100,padding:_canvasTokensWeb.system.space.x4}),inverseBackground=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",backgroundColor:_canvasTokensWeb.base.blueberry400,padding:_canvasTokensWeb.system.space.x4});function Basic(){return React.createElement("div",{className:containerStyles},React.createElement("div",{className:defaultBackground},React.createElement(_badge.CountBadge,{count:427})),React.createElement("div",{className:inverseBackground},React.createElement(_badge.CountBadge,{count:427,variant:"inverse"})))}Basic.displayName="Basic",Basic.__RAW__="import * as React from 'react';\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\nimport {createStyles} from '@workday/canvas-kit-styling';\nimport {base, system} from '@workday/canvas-tokens-web';\n\nconst containerStyles = createStyles({\n  boxSizing: 'border-box',\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nconst defaultBackground = createStyles({\n  boxSizing: 'border-box',\n  backgroundColor: base.frenchVanilla100,\n  padding: system.space.x4,\n});\n\nconst inverseBackground = createStyles({\n  boxSizing: 'border-box',\n  backgroundColor: base.blueberry400,\n  padding: system.space.x4,\n});\n\nexport function Basic() {\n  return (\n    <div className={containerStyles}>\n      <div className={defaultBackground}>\n        <CountBadge count={427} />\n      </div>\n      <div className={inverseBackground}>\n        <CountBadge count={427} variant=\"inverse\" />\n      </div>\n    </div>\n  );\n}\n"},"./modules/react/badge/stories/examples/CustomLimit.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CustomLimit=CustomLimit;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_badge=__webpack_require__("./modules/react/badge/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const columnStyles=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",display:"flex",flexDirection:"column",gap:_canvasTokensWeb.system.space.x4}),controls=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",borderBottom:`solid 1px ${(0,_canvasKitStyling.cssVar)(_canvasTokensWeb.base.soap400)}`,display:"flex",gap:_canvasTokensWeb.system.space.x1,padding:_canvasTokensWeb.system.space.x1}),defaultBackground=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",backgroundColor:_canvasTokensWeb.base.frenchVanilla100,padding:_canvasTokensWeb.system.space.x4}),inverseBackground=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",backgroundColor:_canvasTokensWeb.base.blueberry400,padding:_canvasTokensWeb.system.space.x4}),initialCount=1;function CustomLimit(){const[count,setCount]=React.useState(initialCount);return React.createElement("div",{className:columnStyles},React.createElement("div",{className:controls},React.createElement(_button.TertiaryButton,{size:"small",onClick:()=>setCount(count+1)},"Increment"),React.createElement(_button.TertiaryButton,{size:"small",onClick:()=>setCount(initialCount)},"Reset")),React.createElement("div",{className:defaultBackground},React.createElement(_badge.CountBadge,{count,limit:10})),React.createElement("div",{className:inverseBackground},React.createElement(_badge.CountBadge,{count,limit:10,variant:"inverse"})))}CustomLimit.displayName="CustomLimit",CustomLimit.__RAW__="import * as React from 'react';\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\nimport {TertiaryButton} from '@workday/canvas-kit-react/button';\n\nimport {createStyles, cssVar} from '@workday/canvas-kit-styling';\nimport {base, system} from '@workday/canvas-tokens-web';\n\nconst columnStyles = createStyles({\n  boxSizing: 'border-box',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: system.space.x4,\n});\n\nconst controls = createStyles({\n  boxSizing: 'border-box',\n  borderBottom: `solid 1px ${cssVar(base.soap400)}`,\n  display: 'flex',\n  gap: system.space.x1,\n  padding: system.space.x1,\n});\n\nconst defaultBackground = createStyles({\n  boxSizing: 'border-box',\n  backgroundColor: base.frenchVanilla100,\n  padding: system.space.x4,\n});\n\nconst inverseBackground = createStyles({\n  boxSizing: 'border-box',\n  backgroundColor: base.blueberry400,\n  padding: system.space.x4,\n});\n\nconst initialCount = 1;\n\nexport function CustomLimit() {\n  const [count, setCount] = React.useState(initialCount);\n\n  return (\n    <div className={columnStyles}>\n      <div className={controls}>\n        <TertiaryButton size=\"small\" onClick={() => setCount(count + 1)}>\n          Increment\n        </TertiaryButton>\n        <TertiaryButton size=\"small\" onClick={() => setCount(initialCount)}>\n          Reset\n        </TertiaryButton>\n      </div>\n      <div className={defaultBackground}>\n        <CountBadge count={count} limit={10} />\n      </div>\n      <div className={inverseBackground}>\n        <CountBadge count={count} limit={10} variant=\"inverse\" />\n      </div>\n    </div>\n  );\n}\n"},"./modules/react/badge/stories/examples/NotificationBadge.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NotificationBadge=NotificationBadge;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_badge=__webpack_require__("./modules/react/badge/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_canvasTokensWeb=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/index.js"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function negate(value,fallback){return`calc(${(0,_canvasKitStyling.cssVar)(value,fallback)} * -1)`}const container=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",flexDirection:"column",gap:_canvasTokensWeb.system.space.x4}),controls=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",gap:_canvasTokensWeb.system.space.x2,padding:_canvasTokensWeb.system.space.x1}),notificationContainerStyles=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",position:"relative"}),countBadgeStyles=(0,_canvasKitStyling.createStyles)({boxSizing:"border-box",position:"absolute",top:negate(_canvasTokensWeb.system.space.x1),insetInlineEnd:negate(_canvasTokensWeb.system.space.x1)});function NotificationBadge(){const[count,setCount]=React.useState(4),badgeID=(0,_common.useUniqueId)();return React.createElement(_layout.Flex,{cs:container},React.createElement(_layout.Flex,{cs:controls},React.createElement(_button.TertiaryButton,{size:"small",onClick:()=>setCount(count+1)},"Add Notification"),React.createElement(_button.TertiaryButton,{size:"small",onClick:()=>setCount(0)},"Clear")),React.createElement(_layout.Flex,null,React.createElement("span",{className:notificationContainerStyles},React.createElement(_tooltip.Tooltip,{title:"Notifications"},React.createElement(_button.SecondaryButton,{size:"medium",icon:_canvasSystemIconsWeb.notificationsIcon,"aria-describedby":count?badgeID:void 0})),React.createElement(_common.AriaLiveRegion,{"aria-label":count?"New notifications":void 0},!!count&&React.createElement(_badge.CountBadge,{id:badgeID,count,limit:100,cs:countBadgeStyles})))))}NotificationBadge.displayName="NotificationBadge",NotificationBadge.__RAW__="import * as React from 'react';\nimport {CountBadge} from '@workday/canvas-kit-react/badge';\nimport {SecondaryButton, TertiaryButton} from '@workday/canvas-kit-react/button';\nimport {AriaLiveRegion, useUniqueId} from '@workday/canvas-kit-react/common';\nimport {createStyles, cssVar} from '@workday/canvas-kit-styling';\nimport {notificationsIcon} from '@workday/canvas-system-icons-web';\nimport {base, system} from '@workday/canvas-tokens-web';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\nimport {Flex} from '@workday/canvas-kit-react/layout';\n\nfunction negate(value: string, fallback?: string) {\n  return `calc(${cssVar(value, fallback)} * -1)`;\n}\n\nconst container = createStyles({\n  boxSizing: 'border-box',\n  flexDirection: 'column',\n  gap: system.space.x4,\n});\n\nconst controls = createStyles({\n  boxSizing: 'border-box',\n  gap: system.space.x2,\n  padding: system.space.x1,\n});\n\nconst notificationContainerStyles = createStyles({\n  boxSizing: 'border-box',\n  position: 'relative',\n});\n\nconst countBadgeStyles = createStyles({\n  boxSizing: 'border-box',\n  position: 'absolute',\n  top: negate(system.space.x1),\n  insetInlineEnd: negate(system.space.x1),\n});\n\n// Testing notes (Aug. 30, 2024):\n// Windows 11\n// JAWS 2024 + Chrome / Edge: \"New notifications\" once, then only the count change \"2\"\n// JAWS 2024 + FF: \"New notifications\" once, then describes nothing\n// NVDA + Chrome / Edge: Consistently describes \"{X} New notifications\"\n// NVDA + FF: Consistently describes count value only \"{X}\"\n// macOS v14.6.1\n// VoiceOver + Chrome / Safari: Consistently describes \"New notifications {X}\"\nexport function NotificationBadge() {\n  const [count, setCount] = React.useState(4);\n  const badgeID = useUniqueId();\n\n  return (\n    <Flex cs={container}>\n      <Flex cs={controls}>\n        <TertiaryButton size=\"small\" onClick={() => setCount(count + 1)}>\n          Add Notification\n        </TertiaryButton>\n        <TertiaryButton size=\"small\" onClick={() => setCount(0)}>\n          Clear\n        </TertiaryButton>\n      </Flex>\n      <Flex>\n        <span className={notificationContainerStyles}>\n          <Tooltip title=\"Notifications\">\n            <SecondaryButton\n              size=\"medium\"\n              icon={notificationsIcon}\n              aria-describedby={!!count ? badgeID : undefined}\n            />\n          </Tooltip>\n          <AriaLiveRegion aria-label={!!count ? 'New notifications' : undefined}>\n            {!!count && <CountBadge id={badgeID} count={count} limit={100} cs={countBadgeStyles} />}\n          </AriaLiveRegion>\n        </span>\n      </Flex>\n    </Flex>\n  );\n}\n"}}]);