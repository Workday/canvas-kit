"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[8106],{"./modules/react/skeleton/stories/visual-testing/Skeleton.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SkeletonStates=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_skeleton=__webpack_require__("./modules/react/skeleton/index.ts"),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}exports.default={title:"Testing/Indicators/Skeleton",component:_skeleton.Skeleton,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import * as React from \'react\';\\nimport {Skeleton} from \'@workday/canvas-kit-react/skeleton\';\\nimport styled from \'@emotion/styled\';\\n\\nexport default {\\n  title: \'Testing/Indicators/Skeleton\',\\n  component: Skeleton,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst Container = styled(\'span\')({\\n  width: \'60%\',\\n  height: \'100%\',\\n  margin: \'8px\',\\n});\\n\\nconst FlexContainer = styled(\'div\')({\\n  display: \'flex\',\\n});\\n\\nexport const SkeletonStates = {\\n  render: () => (\\n    <div className=\\"story\\">\\n      <h1>Custom Elements Skeleton</h1>\\n      <div>\\n        <Skeleton>\\n          <FlexContainer>\\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\\n            <Container>\\n              <Skeleton.Header />\\n            </Container>\\n          </FlexContainer>\\n          <div>\\n            <Skeleton.Text lineCount={3} />\\n          </div>\\n        </Skeleton>\\n      </div>\\n      <h1>Header Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Header />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Custom Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Text Skeleton</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={2} />\\n      </Skeleton>\\n      <h1>Text Skeleton Line Count 1</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={1} />\\n      </Skeleton>\\n      <h1>Multiple Line Count</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={20} />\\n      </Skeleton>\\n    </div>\\n  ),\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "SkeletonStates": {\n    "startLoc": {\n      "col": 30,\n      "line": 25\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 74\n    },\n    "startBody": {\n      "col": 30,\n      "line": 25\n    },\n    "endBody": {\n      "col": 1,\n      "line": 74\n    }\n  }\n};\n    \nimport * as React from \'react\';\nimport {Skeleton} from \'@workday/canvas-kit-react/skeleton\';\nimport styled from \'@emotion/styled\';\n\nexport default {\n  title: \'Testing/Indicators/Skeleton\',\n  component: Skeleton,\n  parameters: {\n  "storySource": {\n    "source": "import * as React from \'react\';\\nimport {Skeleton} from \'@workday/canvas-kit-react/skeleton\';\\nimport styled from \'@emotion/styled\';\\n\\nexport default {\\n  title: \'Testing/Indicators/Skeleton\',\\n  component: Skeleton,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nconst Container = styled(\'span\')({\\n  width: \'60%\',\\n  height: \'100%\',\\n  margin: \'8px\',\\n});\\n\\nconst FlexContainer = styled(\'div\')({\\n  display: \'flex\',\\n});\\n\\nexport const SkeletonStates = {\\n  render: () => (\\n    <div className=\\"story\\">\\n      <h1>Custom Elements Skeleton</h1>\\n      <div>\\n        <Skeleton>\\n          <FlexContainer>\\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\\n            <Container>\\n              <Skeleton.Header />\\n            </Container>\\n          </FlexContainer>\\n          <div>\\n            <Skeleton.Text lineCount={3} />\\n          </div>\\n        </Skeleton>\\n      </div>\\n      <h1>Header Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Header />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Custom Shape Skeleton</h1>\\n      <FlexContainer>\\n        <Skeleton>\\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\\n        </Skeleton>\\n      </FlexContainer>\\n      <h1>Text Skeleton</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={2} />\\n      </Skeleton>\\n      <h1>Text Skeleton Line Count 1</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={1} />\\n      </Skeleton>\\n      <h1>Multiple Line Count</h1>\\n      <Skeleton>\\n        <Skeleton.Text lineCount={20} />\\n      </Skeleton>\\n    </div>\\n  ),\\n};\\n",\n    "locationsMap": {\n      "skeleton-states": {\n        "startLoc": {\n          "col": 30,\n          "line": 25\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 74\n        },\n        "startBody": {\n          "col": 30,\n          "line": 25\n        },\n        "endBody": {\n          "col": 1,\n          "line": 74\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst Container = styled(\'span\')({\n  width: \'60%\',\n  height: \'100%\',\n  margin: \'8px\',\n});\n\nconst FlexContainer = styled(\'div\')({\n  display: \'flex\',\n});\n\nexport const SkeletonStates = {\n  render: () => (\n    <div className="story">\n      <h1>Custom Elements Skeleton</h1>\n      <div>\n        <Skeleton>\n          <FlexContainer>\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\n            <Container>\n              <Skeleton.Header />\n            </Container>\n          </FlexContainer>\n          <div>\n            <Skeleton.Text lineCount={3} />\n          </div>\n        </Skeleton>\n      </div>\n      <h1>Header Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Header />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Custom Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Text Skeleton</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={2} />\n      </Skeleton>\n      <h1>Text Skeleton Line Count 1</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={1} />\n      </Skeleton>\n      <h1>Multiple Line Count</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={20} />\n      </Skeleton>\n    </div>\n  ),\n};\n',locationsMap:{"skeleton-states":{startLoc:{col:30,line:76},endLoc:{col:1,line:125},startBody:{col:30,line:76},endBody:{col:1,line:125}}}},storySource:{source:"import * as React from 'react';\nimport {Skeleton} from '@workday/canvas-kit-react/skeleton';\nimport styled from '@emotion/styled';\n\nexport default {\n  title: 'Testing/Indicators/Skeleton',\n  component: Skeleton,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nconst Container = styled('span')({\n  width: '60%',\n  height: '100%',\n  margin: '8px',\n});\n\nconst FlexContainer = styled('div')({\n  display: 'flex',\n});\n\nexport const SkeletonStates = {\n  render: () => (\n    <div className=\"story\">\n      <h1>Custom Elements Skeleton</h1>\n      <div>\n        <Skeleton>\n          <FlexContainer>\n            <Skeleton.Shape width={50} height={50} borderRadius={99} />\n            <Container>\n              <Skeleton.Header />\n            </Container>\n          </FlexContainer>\n          <div>\n            <Skeleton.Text lineCount={3} />\n          </div>\n        </Skeleton>\n      </div>\n      <h1>Header Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Header />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={120} height={120} borderRadius={99} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Custom Shape Skeleton</h1>\n      <FlexContainer>\n        <Skeleton>\n          <Skeleton.Shape width={200} height={50} borderRadius={4} />\n        </Skeleton>\n      </FlexContainer>\n      <h1>Text Skeleton</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={2} />\n      </Skeleton>\n      <h1>Text Skeleton Line Count 1</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={1} />\n      </Skeleton>\n      <h1>Multiple Line Count</h1>\n      <Skeleton>\n        <Skeleton.Text lineCount={20} />\n      </Skeleton>\n    </div>\n  ),\n};\n",locationsMap:{"skeleton-states":{startLoc:{col:30,line:25},endLoc:{col:1,line:74},startBody:{col:30,line:25},endBody:{col:1,line:74}}}},chromatic:{disable:!1}}};const Container=(0,_styled.default)("span")({width:"60%",height:"100%",margin:"8px"}),FlexContainer=(0,_styled.default)("div")({display:"flex"});exports.SkeletonStates={render:()=>React.createElement("div",{className:"story"},React.createElement("h1",null,"Custom Elements Skeleton"),React.createElement("div",null,React.createElement(_skeleton.Skeleton,null,React.createElement(FlexContainer,null,React.createElement(_skeleton.Skeleton.Shape,{width:50,height:50,borderRadius:99}),React.createElement(Container,null,React.createElement(_skeleton.Skeleton.Header,null))),React.createElement("div",null,React.createElement(_skeleton.Skeleton.Text,{lineCount:3})))),React.createElement("h1",null,"Header Skeleton"),React.createElement(FlexContainer,null,React.createElement(_skeleton.Skeleton,null,React.createElement(_skeleton.Skeleton.Header,null))),React.createElement("h1",null,"Shape Skeleton"),React.createElement(FlexContainer,null,React.createElement(_skeleton.Skeleton,null,React.createElement(_skeleton.Skeleton.Shape,{width:120,height:120,borderRadius:99}))),React.createElement("h1",null,"Custom Shape Skeleton"),React.createElement(FlexContainer,null,React.createElement(_skeleton.Skeleton,null,React.createElement(_skeleton.Skeleton.Shape,{width:200,height:50,borderRadius:4}))),React.createElement("h1",null,"Text Skeleton"),React.createElement(_skeleton.Skeleton,null,React.createElement(_skeleton.Skeleton.Text,{lineCount:2})),React.createElement("h1",null,"Text Skeleton Line Count 1"),React.createElement(_skeleton.Skeleton,null,React.createElement(_skeleton.Skeleton.Text,{lineCount:1})),React.createElement("h1",null,"Multiple Line Count"),React.createElement(_skeleton.Skeleton,null,React.createElement(_skeleton.Skeleton.Text,{lineCount:20})))};module.exports.__namedExportsOrder=["SkeletonStates"]},"./modules/react/skeleton/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Skeleton",{enumerable:!0,get:function(){return _skeleton.Skeleton}});var _skeleton=__webpack_require__("./modules/react/skeleton/lib/skeleton.tsx");const __docs=[];window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/skeleton/lib/parts/skeletonHeader.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SkeletonHeader=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_skeletonShape=__webpack_require__("./modules/react/skeleton/lib/parts/skeletonShape.tsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}exports.SkeletonHeader=(0,_common.createComponent)("div")({displayName:"Skeleton.Header",Component:({backgroundColor=_tokens.colors.soap200,height="28px",width="100%",...elemProps},ref,Element)=>React.createElement(_skeletonShape.SkeletonShape,_extends({ref,as:Element,backgroundColor,borderRadius:_tokens.borderRadius.s,height,width},elemProps))});const __docs=[{name:"SkeletonHeaderProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx",description:"",declarations:[{name:"SkeletonHeaderProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"backgroundColor",required:!1,type:{kind:"primitive",value:"string"},description:"The background color of the skeleton",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{default:"soap200"}},{kind:"property",name:"height",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The height of the shape in `px` or `%`.",declarations:[{name:"height",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{default:"28px"}},{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the shape in `px` or `%`.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{default:"100%"}}]}},{name:"SkeletonHeader",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx",description:"",declarations:[{name:"SkeletonHeader",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Skeleton.Header",props:[{kind:"property",name:"backgroundColor",required:!1,type:{kind:"primitive",value:"string"},description:"The background color of the skeleton",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{default:"soap200"},defaultValue:{kind:"symbol",name:"soap200",value:"soap200"}},{kind:"property",name:"height",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The height of the shape in `px` or `%`.",declarations:[{name:"height",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{default:"28px"},defaultValue:{kind:"string",value:"28px"}},{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the shape in `px` or `%`.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{default:"100%"},defaultValue:{kind:"string",value:"100%"}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}]}}],baseElement:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}}];window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/skeleton/lib/parts/skeletonShape.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SkeletonShape=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Shape=(0,_styled.default)("div")((({backgroundColor,borderRadius,height,width})=>({backgroundColor,borderRadius,outline:`${(0,_canvasKitStyling.px2rem)(1)} solid transparent`,outlineOffset:`-${(0,_canvasKitStyling.px2rem)(1)}`,height,width,marginBottom:_tokens.space.s}))),__docs=(exports.SkeletonShape=(0,_common.createComponent)("div")({displayName:"Skeleton.Shape",Component:({backgroundColor=_tokens.colors.soap200,borderRadius=0,height="100%",width="100%",...elemProps},ref,Element)=>React.createElement(Shape,_extends({ref,as:Element,backgroundColor,borderRadius,height,width},elemProps))}),[{name:"SkeletonShapeProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx",description:"",declarations:[{name:"SkeletonShapeProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the shape in `px` or `%`.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"100%"}},{kind:"property",name:"height",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The height of the shape in `px` or `%`.",declarations:[{name:"height",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"100%"}},{kind:"property",name:"borderRadius",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The borderRadius of the shape in `px` or `%`.",declarations:[{name:"borderRadius",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"0"}},{kind:"property",name:"backgroundColor",required:!1,type:{kind:"primitive",value:"string"},description:"The background color of the skeleton",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"soap200"}}]}},{name:"SkeletonShape",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx",description:"",declarations:[{name:"SkeletonShape",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Skeleton.Shape",props:[{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the shape in `px` or `%`.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"100%"},defaultValue:{kind:"string",value:"100%"}},{kind:"property",name:"height",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The height of the shape in `px` or `%`.",declarations:[{name:"height",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"100%"},defaultValue:{kind:"string",value:"100%"}},{kind:"property",name:"borderRadius",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The borderRadius of the shape in `px` or `%`.",declarations:[{name:"borderRadius",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"0"},defaultValue:{kind:"number",value:0}},{kind:"property",name:"backgroundColor",required:!1,type:{kind:"primitive",value:"string"},description:"The background color of the skeleton",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{default:"soap200"},defaultValue:{kind:"symbol",name:"soap200",value:"soap200"}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}]}}],baseElement:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/skeleton/lib/parts/skeletonText.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SkeletonText=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const TextContainer=(0,_styled.default)("div")({marginBottom:_tokens.space.m}),Line=(0,_styled.default)("div",{shouldForwardProp:(0,_common.filterOutProps)(["backgroundColor","width"])})((({backgroundColor,width})=>({backgroundColor,width,borderRadius:_tokens.borderRadius.s,outline:`${(0,_canvasKitStyling.px2rem)(1)} solid transparent`,outlineOffset:`-${(0,_canvasKitStyling.px2rem)(1)}`,height:"21px",marginBottom:_tokens.space.xs}))),__docs=(exports.SkeletonText=(0,_common.createComponent)("div")({displayName:"Skeleton.Text",Component:({backgroundColor=_tokens.colors.soap200,lineCount=2,...elemProps},ref,Element)=>lineCount<=0?null:React.createElement(TextContainer,_extends({ref,as:Element},elemProps),((lineCount,backgroundColor)=>new Array(lineCount).fill(null).map(((_value,index)=>React.createElement(Line,{key:index,backgroundColor,width:index<lineCount-1||1===lineCount?"100%":"60%"}))))(lineCount,backgroundColor))}),[{name:"SkeletonTextProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx",description:"",declarations:[{name:"SkeletonTextProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"lineCount",required:!1,type:{kind:"primitive",value:"number"},description:'The number of "lines" that SkeletonText will display. If there is more than one line, the last line will have a width of `60%`.',declarations:[{name:"lineCount",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx"}],tags:{default:"2"}},{kind:"property",name:"backgroundColor",required:!1,type:{kind:"primitive",value:"string"},description:"The background color of the skeleton",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx"}],tags:{default:"soap200"}}]}},{name:"SkeletonText",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx",description:"",declarations:[{name:"SkeletonText",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Skeleton.Text",props:[{kind:"property",name:"lineCount",required:!1,type:{kind:"primitive",value:"number"},description:'The number of "lines" that SkeletonText will display. If there is more than one line, the last line will have a width of `60%`.',declarations:[{name:"lineCount",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx"}],tags:{default:"2"},defaultValue:{kind:"number",value:2}},{kind:"property",name:"backgroundColor",required:!1,type:{kind:"primitive",value:"string"},description:"The background color of the skeleton",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx"}],tags:{default:"soap200"},defaultValue:{kind:"symbol",name:"soap200",value:"soap200"}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}]}}],baseElement:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/skeleton/lib/skeleton.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Skeleton=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_react2=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_skeletonHeader=__webpack_require__("./modules/react/skeleton/lib/parts/skeletonHeader.tsx"),_skeletonShape=__webpack_require__("./modules/react/skeleton/lib/parts/skeletonShape.tsx"),_skeletonText=__webpack_require__("./modules/react/skeleton/lib/parts/skeletonText.tsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const AccessibleHide=(0,_styled.default)("div")(_common.accessibleHide),animation=`${(0,_react2.keyframes)({from:{opacity:.4},to:{opacity:1}})} 0.8s linear infinite alternate`,SkeletonAnimator=(0,_styled.default)("div")({animation,overflow:"hidden",width:"100%",height:"100%",position:"relative"}),__docs=(exports.Skeleton=(0,_common.createComponent)("div")({displayName:"Skeleton",Component:({children,"aria-label":loadingAriaLabel="Loading",...elemProps},ref,Element)=>React.createElement(SkeletonAnimator,_extends({ref,as:Element},elemProps),React.createElement(AccessibleHide,null,loadingAriaLabel),React.createElement("div",{"aria-hidden":!0},children)),subComponents:{Header:_skeletonHeader.SkeletonHeader,Text:_skeletonText.SkeletonText,Shape:_skeletonShape.SkeletonShape}}),[{name:"SkeletonProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx",description:"",declarations:[{name:"SkeletonProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"aria-label",required:!1,type:{kind:"primitive",value:"string"},description:"For accessibility reasons, `aria-label` is transformed into a text representation\n(visually hidden, but announced by screen readers) of the loader.\n\nIMPORTANT: Since we take over the use of `aria-label` here, the attribute\ndoes not get applied to the container element. We anticipate that this will change\nin a future major version.",declarations:[{name:"aria-label",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"}],tags:{default:"'Loading'"}},{kind:"property",name:"children",required:!1,type:{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"},description:"",declarations:[{name:"children",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"}],tags:{}}]}},{name:"Skeleton",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx",description:"Skeleton subcomponents **must** be wrapped by the `Skeleton` container component.\n\n```tsx\n<Skeleton>\n  <Skeleton.Header />\n  <Skeleton.Text />\n</Skeleton>\n```\n\n`Skeleton` places its children in a container element with `aria-hidden` set to `true` and\nannounces itself using a visually hidden element.",declarations:[{name:"Skeleton",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Skeleton",props:[{kind:"property",name:"aria-label",required:!1,type:{kind:"primitive",value:"string"},description:"For accessibility reasons, `aria-label` is transformed into a text representation\n(visually hidden, but announced by screen readers) of the loader.\n\nIMPORTANT: Since we take over the use of `aria-label` here, the attribute\ndoes not get applied to the container element. We anticipate that this will change\nin a future major version.",declarations:[{name:"aria-label",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"}],tags:{default:"'Loading'"},defaultValue:{kind:"symbol",name:"'Loading'",value:"'Loading'"}},{kind:"property",name:"children",required:!1,type:{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"},description:"",declarations:[{name:"children",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"}],tags:{}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}]}}],baseElement:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"},subComponents:[{name:"Header",symbol:"SkeletonHeader",description:"`Skeleton.Header` renders a placeholder for header content such as headings.",declarations:[{name:"Header",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"},{name:"SkeletonHeader",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonHeader.tsx"}],tags:{}},{name:"Text",symbol:"SkeletonText",description:"`Skeleton.Text` renders a placeholder for text content such as paragraphs. Each placeholder\nline has a width of `100%` and a fixed height of `21px`, with the last line having a width of\n`60%` if there are multiple lines.",declarations:[{name:"Text",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"},{name:"SkeletonText",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonText.tsx"}],tags:{}},{name:"Shape",symbol:"SkeletonShape",description:"`Skeleton.Shape` renders a placeholder for graphic elements such as icons, avatars and small\nimages. Set the `height`, `width`, and `borderRadius` props of the `Skeleton.Shape` to create\nvarious rectangular and circular shapes.",declarations:[{name:"Shape",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/skeleton.tsx"},{name:"SkeletonShape",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/skeleton/lib/parts/skeletonShape.tsx"}],tags:{}}]}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)}}]);