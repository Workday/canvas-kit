"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1242],{"./modules/react/button/stories/ToolbarButtons.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ToolbarDropdownButtonStory=exports.ToolbarIconButtonStory=exports.default=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_button=__webpack_require__("./modules/react/button/index.ts"),_menu=__webpack_require__("./modules/react/menu/index.ts"),_tooltip=__webpack_require__("./modules/react/tooltip/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}var _default={title:"Components/Buttons/Toolbar",component:_button.ToolbarIconButton,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import * as React from \'react\';\\nimport {Meta, StoryObj} from \'@storybook/react\';\\nimport {activityStreamIcon, paragraphIcon, zoominIcon} from \'@workday/canvas-system-icons-web\';\\nimport {ToolbarIconButton, ToolbarDropdownButton} from \'@workday/canvas-kit-react/button\';\\nimport {Menu} from \'@workday/canvas-kit-react/menu\';\\nimport {Tooltip} from \'@workday/canvas-kit-react/tooltip\';\\n\\nconst customElementStyles = {\\n  margin: \'0 16px 0 8px\',\\n  fontSize: 14,\\n};\\n\\nconst meta: Meta<typeof ToolbarIconButton> = {\\n  title: \'Components/Buttons/Toolbar\',\\n  component: ToolbarIconButton,\\n  parameters: {\\n    ReadmePath: \'react/button\',\\n  },\\n};\\n\\nexport default meta;\\n\\nexport const ToolbarIconButtonStory: StoryObj = {\\n  render: () => {\\n    const [toggled, setToggled] = React.useState<boolean | undefined>();\\n    const handleToggle = () => {\\n      setToggled(!toggled);\\n    };\\n\\n    return (\\n      <div className=\\"story\\">\\n        <h3>Toolbar Icon Button</h3>\\n        <ToolbarIconButton aria-label=\\"Activity Stream\\" icon={activityStreamIcon} />\\n        <ToolbarIconButton aria-label=\\"Activity Stream\\" icon={activityStreamIcon} disabled={true} />\\n        <h3>Toggleable Toolbar Icon Button</h3>\\n        <ToolbarIconButton\\n          aria-label=\\"Activity Stream\\"\\n          icon={activityStreamIcon}\\n          toggled={toggled}\\n          onClick={handleToggle}\\n        />\\n      </div>\\n    );\\n  },\\n};\\n\\nexport const ToolbarDropdownButtonStory: StoryObj = {\\n  render: () => (\\n    <div className=\\"story\\">\\n      <h3>Toolbar Dropdown Button with Menu</h3>\\n      <Menu>\\n        <Tooltip title=\\"Expand\\">\\n          <Menu.Target\\n            as={ToolbarDropdownButton}\\n            icon={zoominIcon}\\n            onClick={() => {\\n              console.log(\'Expand icon clicked\');\\n            }}\\n          ></Menu.Target>\\n        </Tooltip>\\n        <Menu.Popper>\\n          <Menu.Card>\\n            <Menu.List>\\n              <Menu.Item\\n                onClick={() => {\\n                  console.log(\'Expand All clicked\');\\n                }}\\n              >\\n                Expand All\\n              </Menu.Item>\\n              <Menu.Item\\n                onClick={() => {\\n                  console.log(\'Expand to Leaf Level clicked\');\\n                }}\\n              >\\n                Expand to Leaf Level\\n              </Menu.Item>\\n              <Menu.Item\\n                onClick={() => {\\n                  console.log(\'Expand to nth Level clicked\');\\n                }}\\n              >\\n                Expand to nth Level\\n              </Menu.Item>\\n            </Menu.List>\\n          </Menu.Card>\\n        </Menu.Popper>\\n      </Menu>\\n    </div>\\n  ),\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "ToolbarIconButtonStory": {\n    "startLoc": {\n      "col": 48,\n      "line": 23\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 45\n    },\n    "startBody": {\n      "col": 48,\n      "line": 23\n    },\n    "endBody": {\n      "col": 1,\n      "line": 45\n    }\n  },\n  "ToolbarDropdownButtonStory": {\n    "startLoc": {\n      "col": 52,\n      "line": 47\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 91\n    },\n    "startBody": {\n      "col": 52,\n      "line": 47\n    },\n    "endBody": {\n      "col": 1,\n      "line": 91\n    }\n  }\n};\n    \nimport * as React from \'react\';\nimport {Meta, StoryObj} from \'@storybook/react\';\nimport {activityStreamIcon, paragraphIcon, zoominIcon} from \'@workday/canvas-system-icons-web\';\nimport {ToolbarIconButton, ToolbarDropdownButton} from \'@workday/canvas-kit-react/button\';\nimport {Menu} from \'@workday/canvas-kit-react/menu\';\nimport {Tooltip} from \'@workday/canvas-kit-react/tooltip\';\n\nconst customElementStyles = {\n  margin: \'0 16px 0 8px\',\n  fontSize: 14,\n};\n\nconst meta: Meta<typeof ToolbarIconButton> = {\n  title: \'Components/Buttons/Toolbar\',\n  component: ToolbarIconButton,\n  parameters: {\n  "storySource": {\n    "source": "import * as React from \'react\';\\nimport {Meta, StoryObj} from \'@storybook/react\';\\nimport {activityStreamIcon, paragraphIcon, zoominIcon} from \'@workday/canvas-system-icons-web\';\\nimport {ToolbarIconButton, ToolbarDropdownButton} from \'@workday/canvas-kit-react/button\';\\nimport {Menu} from \'@workday/canvas-kit-react/menu\';\\nimport {Tooltip} from \'@workday/canvas-kit-react/tooltip\';\\n\\nconst customElementStyles = {\\n  margin: \'0 16px 0 8px\',\\n  fontSize: 14,\\n};\\n\\nconst meta: Meta<typeof ToolbarIconButton> = {\\n  title: \'Components/Buttons/Toolbar\',\\n  component: ToolbarIconButton,\\n  parameters: {\\n    ReadmePath: \'react/button\',\\n  },\\n};\\n\\nexport default meta;\\n\\nexport const ToolbarIconButtonStory: StoryObj = {\\n  render: () => {\\n    const [toggled, setToggled] = React.useState<boolean | undefined>();\\n    const handleToggle = () => {\\n      setToggled(!toggled);\\n    };\\n\\n    return (\\n      <div className=\\"story\\">\\n        <h3>Toolbar Icon Button</h3>\\n        <ToolbarIconButton aria-label=\\"Activity Stream\\" icon={activityStreamIcon} />\\n        <ToolbarIconButton aria-label=\\"Activity Stream\\" icon={activityStreamIcon} disabled={true} />\\n        <h3>Toggleable Toolbar Icon Button</h3>\\n        <ToolbarIconButton\\n          aria-label=\\"Activity Stream\\"\\n          icon={activityStreamIcon}\\n          toggled={toggled}\\n          onClick={handleToggle}\\n        />\\n      </div>\\n    );\\n  },\\n};\\n\\nexport const ToolbarDropdownButtonStory: StoryObj = {\\n  render: () => (\\n    <div className=\\"story\\">\\n      <h3>Toolbar Dropdown Button with Menu</h3>\\n      <Menu>\\n        <Tooltip title=\\"Expand\\">\\n          <Menu.Target\\n            as={ToolbarDropdownButton}\\n            icon={zoominIcon}\\n            onClick={() => {\\n              console.log(\'Expand icon clicked\');\\n            }}\\n          ></Menu.Target>\\n        </Tooltip>\\n        <Menu.Popper>\\n          <Menu.Card>\\n            <Menu.List>\\n              <Menu.Item\\n                onClick={() => {\\n                  console.log(\'Expand All clicked\');\\n                }}\\n              >\\n                Expand All\\n              </Menu.Item>\\n              <Menu.Item\\n                onClick={() => {\\n                  console.log(\'Expand to Leaf Level clicked\');\\n                }}\\n              >\\n                Expand to Leaf Level\\n              </Menu.Item>\\n              <Menu.Item\\n                onClick={() => {\\n                  console.log(\'Expand to nth Level clicked\');\\n                }}\\n              >\\n                Expand to nth Level\\n              </Menu.Item>\\n            </Menu.List>\\n          </Menu.Card>\\n        </Menu.Popper>\\n      </Menu>\\n    </div>\\n  ),\\n};\\n",\n    "locationsMap": {\n      "toolbar-icon-button-story": {\n        "startLoc": {\n          "col": 48,\n          "line": 23\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 45\n        },\n        "startBody": {\n          "col": 48,\n          "line": 23\n        },\n        "endBody": {\n          "col": 1,\n          "line": 45\n        }\n      },\n      "toolbar-dropdown-button-story": {\n        "startLoc": {\n          "col": 52,\n          "line": 47\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 91\n        },\n        "startBody": {\n          "col": 52,\n          "line": 47\n        },\n        "endBody": {\n          "col": 1,\n          "line": 91\n        }\n      }\n    }\n  }\n,\n    ReadmePath: \'react/button\',\n  },\n};\n\nexport default meta;\n\nexport const ToolbarIconButtonStory: StoryObj = {\n  render: () => {\n    const [toggled, setToggled] = React.useState<boolean | undefined>();\n    const handleToggle = () => {\n      setToggled(!toggled);\n    };\n\n    return (\n      <div className="story">\n        <h3>Toolbar Icon Button</h3>\n        <ToolbarIconButton aria-label="Activity Stream" icon={activityStreamIcon} />\n        <ToolbarIconButton aria-label="Activity Stream" icon={activityStreamIcon} disabled={true} />\n        <h3>Toggleable Toolbar Icon Button</h3>\n        <ToolbarIconButton\n          aria-label="Activity Stream"\n          icon={activityStreamIcon}\n          toggled={toggled}\n          onClick={handleToggle}\n        />\n      </div>\n    );\n  },\n};;\n\nexport const ToolbarDropdownButtonStory: StoryObj = {\n  render: () => (\n    <div className="story">\n      <h3>Toolbar Dropdown Button with Menu</h3>\n      <Menu>\n        <Tooltip title="Expand">\n          <Menu.Target\n            as={ToolbarDropdownButton}\n            icon={zoominIcon}\n            onClick={() => {\n              console.log(\'Expand icon clicked\');\n            }}\n          ></Menu.Target>\n        </Tooltip>\n        <Menu.Popper>\n          <Menu.Card>\n            <Menu.List>\n              <Menu.Item\n                onClick={() => {\n                  console.log(\'Expand All clicked\');\n                }}\n              >\n                Expand All\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => {\n                  console.log(\'Expand to Leaf Level clicked\');\n                }}\n              >\n                Expand to Leaf Level\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => {\n                  console.log(\'Expand to nth Level clicked\');\n                }}\n              >\n                Expand to nth Level\n              </Menu.Item>\n            </Menu.List>\n          </Menu.Card>\n        </Menu.Popper>\n      </Menu>\n    </div>\n  ),\n};\n',locationsMap:{"toolbar-icon-button-story":{startLoc:{col:48,line:110},endLoc:{col:1,line:132},startBody:{col:48,line:110},endBody:{col:1,line:132}},"toolbar-dropdown-button-story":{startLoc:{col:52,line:134},endLoc:{col:1,line:178},startBody:{col:52,line:134},endBody:{col:1,line:178}}}},storySource:{source:"import * as React from 'react';\nimport {Meta, StoryObj} from '@storybook/react';\nimport {activityStreamIcon, paragraphIcon, zoominIcon} from '@workday/canvas-system-icons-web';\nimport {ToolbarIconButton, ToolbarDropdownButton} from '@workday/canvas-kit-react/button';\nimport {Menu} from '@workday/canvas-kit-react/menu';\nimport {Tooltip} from '@workday/canvas-kit-react/tooltip';\n\nconst customElementStyles = {\n  margin: '0 16px 0 8px',\n  fontSize: 14,\n};\n\nconst meta: Meta<typeof ToolbarIconButton> = {\n  title: 'Components/Buttons/Toolbar',\n  component: ToolbarIconButton,\n  parameters: {\n    ReadmePath: 'react/button',\n  },\n};\n\nexport default meta;\n\nexport const ToolbarIconButtonStory: StoryObj = {\n  render: () => {\n    const [toggled, setToggled] = React.useState<boolean | undefined>();\n    const handleToggle = () => {\n      setToggled(!toggled);\n    };\n\n    return (\n      <div className=\"story\">\n        <h3>Toolbar Icon Button</h3>\n        <ToolbarIconButton aria-label=\"Activity Stream\" icon={activityStreamIcon} />\n        <ToolbarIconButton aria-label=\"Activity Stream\" icon={activityStreamIcon} disabled={true} />\n        <h3>Toggleable Toolbar Icon Button</h3>\n        <ToolbarIconButton\n          aria-label=\"Activity Stream\"\n          icon={activityStreamIcon}\n          toggled={toggled}\n          onClick={handleToggle}\n        />\n      </div>\n    );\n  },\n};\n\nexport const ToolbarDropdownButtonStory: StoryObj = {\n  render: () => (\n    <div className=\"story\">\n      <h3>Toolbar Dropdown Button with Menu</h3>\n      <Menu>\n        <Tooltip title=\"Expand\">\n          <Menu.Target\n            as={ToolbarDropdownButton}\n            icon={zoominIcon}\n            onClick={() => {\n              console.log('Expand icon clicked');\n            }}\n          ></Menu.Target>\n        </Tooltip>\n        <Menu.Popper>\n          <Menu.Card>\n            <Menu.List>\n              <Menu.Item\n                onClick={() => {\n                  console.log('Expand All clicked');\n                }}\n              >\n                Expand All\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => {\n                  console.log('Expand to Leaf Level clicked');\n                }}\n              >\n                Expand to Leaf Level\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => {\n                  console.log('Expand to nth Level clicked');\n                }}\n              >\n                Expand to nth Level\n              </Menu.Item>\n            </Menu.List>\n          </Menu.Card>\n        </Menu.Popper>\n      </Menu>\n    </div>\n  ),\n};\n",locationsMap:{"toolbar-icon-button-story":{startLoc:{col:48,line:23},endLoc:{col:1,line:45},startBody:{col:48,line:23},endBody:{col:1,line:45}},"toolbar-dropdown-button-story":{startLoc:{col:52,line:47},endLoc:{col:1,line:91},startBody:{col:52,line:47},endBody:{col:1,line:91}}}},ReadmePath:"react/button"}};exports.default=_default;const ToolbarIconButtonStory={render:()=>{const[toggled,setToggled]=React.useState();return React.createElement("div",{className:"story"},React.createElement("h3",null,"Toolbar Icon Button"),React.createElement(_button.ToolbarIconButton,{"aria-label":"Activity Stream",icon:_canvasSystemIconsWeb.activityStreamIcon}),React.createElement(_button.ToolbarIconButton,{"aria-label":"Activity Stream",icon:_canvasSystemIconsWeb.activityStreamIcon,disabled:!0}),React.createElement("h3",null,"Toggleable Toolbar Icon Button"),React.createElement(_button.ToolbarIconButton,{"aria-label":"Activity Stream",icon:_canvasSystemIconsWeb.activityStreamIcon,toggled,onClick:()=>{setToggled(!toggled)}}))}};exports.ToolbarIconButtonStory=ToolbarIconButtonStory;const ToolbarDropdownButtonStory={render:()=>React.createElement("div",{className:"story"},React.createElement("h3",null,"Toolbar Dropdown Button with Menu"),React.createElement(_menu.Menu,null,React.createElement(_tooltip.Tooltip,{title:"Expand"},React.createElement(_menu.Menu.Target,{as:_button.ToolbarDropdownButton,icon:_canvasSystemIconsWeb.zoominIcon,onClick:()=>{console.log("Expand icon clicked")}})),React.createElement(_menu.Menu.Popper,null,React.createElement(_menu.Menu.Card,null,React.createElement(_menu.Menu.List,null,React.createElement(_menu.Menu.Item,{onClick:()=>{console.log("Expand All clicked")}},"Expand All"),React.createElement(_menu.Menu.Item,{onClick:()=>{console.log("Expand to Leaf Level clicked")}},"Expand to Leaf Level"),React.createElement(_menu.Menu.Item,{onClick:()=>{console.log("Expand to nth Level clicked")}},"Expand to nth Level"))))))};exports.ToolbarDropdownButtonStory=ToolbarDropdownButtonStory,module.exports.__namedExportsOrder=["ToolbarDropdownButtonStory","ToolbarIconButtonStory"]},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText},"./node_modules/react-virtual/dist/react-virtual.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{defaultRangeExtractor:()=>defaultRangeExtractor,useVirtual:()=>useVirtual});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var rafId,props=["bottom","height","left","right","top","width"],observedNodes=new Map,run=function run(){var changedStates=[];observedNodes.forEach((function(state,node){var newRect=node.getBoundingClientRect();(function rectChanged(a,b){return void 0===a&&(a={}),void 0===b&&(b={}),props.some((function(prop){return a[prop]!==b[prop]}))})(newRect,state.rect)&&(state.rect=newRect,changedStates.push(state))})),changedStates.forEach((function(state){state.callbacks.forEach((function(cb){return cb(state.rect)}))})),rafId=window.requestAnimationFrame(run)};var useIsomorphicLayoutEffect="undefined"!=typeof window?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect;function useRect(nodeRef,initialRect){void 0===initialRect&&(initialRect={width:0,height:0});var _React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(nodeRef.current),element=_React$useState[0],setElement=_React$useState[1],_React$useReducer=react__WEBPACK_IMPORTED_MODULE_0__.useReducer(rectReducer,initialRect),rect=_React$useReducer[0],dispatch=_React$useReducer[1],initialRectSet=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);return useIsomorphicLayoutEffect((function(){nodeRef.current!==element&&setElement(nodeRef.current)})),useIsomorphicLayoutEffect((function(){if(element&&!initialRectSet.current){initialRectSet.current=!0;var _rect=element.getBoundingClientRect();dispatch({rect:_rect})}}),[element]),react__WEBPACK_IMPORTED_MODULE_0__.useEffect((function(){if(element){var observer=function observeRect(node,cb){return{observe:function observe(){var wasEmpty=0===observedNodes.size;observedNodes.has(node)?observedNodes.get(node).callbacks.push(cb):observedNodes.set(node,{rect:void 0,hasRectChanged:!1,callbacks:[cb]}),wasEmpty&&run()},unobserve:function unobserve(){var state=observedNodes.get(node);if(state){var index=state.callbacks.indexOf(cb);index>=0&&state.callbacks.splice(index,1),state.callbacks.length||observedNodes.delete(node),observedNodes.size||cancelAnimationFrame(rafId)}}}}(element,(function(rect){dispatch({rect})}));return observer.observe(),function(){observer.unobserve()}}}),[element]),rect}function rectReducer(state,action){var rect=action.rect;return state.height!==rect.height||state.width!==rect.width?rect:state}var defaultEstimateSize=function defaultEstimateSize(){return 50},defaultKeyExtractor=function defaultKeyExtractor(index){return index},defaultMeasureSize=function defaultMeasureSize(el,horizontal){return el[horizontal?"offsetWidth":"offsetHeight"]},defaultRangeExtractor=function defaultRangeExtractor(range){for(var start=Math.max(range.start-range.overscan,0),end=Math.min(range.end+range.overscan,range.size-1),arr=[],i=start;i<=end;i++)arr.push(i);return arr};function useVirtual(_ref){var _measurements,_ref$size=_ref.size,size=void 0===_ref$size?0:_ref$size,_ref$estimateSize=_ref.estimateSize,estimateSize=void 0===_ref$estimateSize?defaultEstimateSize:_ref$estimateSize,_ref$overscan=_ref.overscan,overscan=void 0===_ref$overscan?1:_ref$overscan,_ref$paddingStart=_ref.paddingStart,paddingStart=void 0===_ref$paddingStart?0:_ref$paddingStart,_ref$paddingEnd=_ref.paddingEnd,paddingEnd=void 0===_ref$paddingEnd?0:_ref$paddingEnd,parentRef=_ref.parentRef,horizontal=_ref.horizontal,scrollToFn=_ref.scrollToFn,useObserver=_ref.useObserver,initialRect=_ref.initialRect,onScrollElement=_ref.onScrollElement,scrollOffsetFn=_ref.scrollOffsetFn,_ref$keyExtractor=_ref.keyExtractor,keyExtractor=void 0===_ref$keyExtractor?defaultKeyExtractor:_ref$keyExtractor,_ref$measureSize=_ref.measureSize,measureSize=void 0===_ref$measureSize?defaultMeasureSize:_ref$measureSize,_ref$rangeExtractor=_ref.rangeExtractor,rangeExtractor=void 0===_ref$rangeExtractor?defaultRangeExtractor:_ref$rangeExtractor,sizeKey=horizontal?"width":"height",scrollKey=horizontal?"scrollLeft":"scrollTop",latestRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef({scrollOffset:0,measurements:[]}),_React$useState=react__WEBPACK_IMPORTED_MODULE_0__.useState(0),scrollOffset=_React$useState[0],setScrollOffset=_React$useState[1];latestRef.current.scrollOffset=scrollOffset;var outerSize=(useObserver||useRect)(parentRef,initialRect)[sizeKey];latestRef.current.outerSize=outerSize;var defaultScrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){parentRef.current&&(parentRef.current[scrollKey]=offset)}),[parentRef,scrollKey]),resolvedScrollToFn=scrollToFn||defaultScrollToFn;scrollToFn=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(offset){resolvedScrollToFn(offset,defaultScrollToFn)}),[defaultScrollToFn,resolvedScrollToFn]);var _React$useState2=react__WEBPACK_IMPORTED_MODULE_0__.useState({}),measuredCache=_React$useState2[0],setMeasuredCache=_React$useState2[1],measure=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){return setMeasuredCache({})}),[]),pendingMeasuredCacheIndexesRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef([]),measurements=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){var min=pendingMeasuredCacheIndexesRef.current.length>0?Math.min.apply(Math,pendingMeasuredCacheIndexesRef.current):0;pendingMeasuredCacheIndexesRef.current=[];for(var measurements=latestRef.current.measurements.slice(0,min),i=min;i<size;i++){var key=keyExtractor(i),measuredSize=measuredCache[key],_start=measurements[i-1]?measurements[i-1].end:paddingStart,_size="number"==typeof measuredSize?measuredSize:estimateSize(i),_end=_start+_size;measurements[i]={index:i,start:_start,size:_size,end:_end,key}}return measurements}),[estimateSize,measuredCache,paddingStart,size,keyExtractor]),totalSize=((null==(_measurements=measurements[size-1])?void 0:_measurements.end)||paddingStart)+paddingEnd;latestRef.current.measurements=measurements,latestRef.current.totalSize=totalSize;var element=onScrollElement?onScrollElement.current:parentRef.current,scrollOffsetFnRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(scrollOffsetFn);scrollOffsetFnRef.current=scrollOffsetFn,useIsomorphicLayoutEffect((function(){if(element){var onScroll=function onScroll(event){var offset=scrollOffsetFnRef.current?scrollOffsetFnRef.current(event):element[scrollKey];setScrollOffset(offset)};return onScroll(),element.addEventListener("scroll",onScroll,{capture:!1,passive:!0}),function(){element.removeEventListener("scroll",onScroll)}}setScrollOffset(0)}),[element,scrollKey]);var _calculateRange=function calculateRange(_ref4){var measurements=_ref4.measurements,outerSize=_ref4.outerSize,scrollOffset=_ref4.scrollOffset,size=measurements.length-1,getOffset=function getOffset(index){return measurements[index].start},start=findNearestBinarySearch(0,size,getOffset,scrollOffset),end=start;for(;end<size&&measurements[end].end<scrollOffset+outerSize;)end++;return{start,end}}(latestRef.current),start=_calculateRange.start,end=_calculateRange.end,indexes=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return rangeExtractor({start,end,overscan,size:measurements.length})}),[start,end,overscan,measurements.length,rangeExtractor]),measureSizeRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(measureSize);measureSizeRef.current=measureSize;var virtualItems=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){for(var virtualItems=[],_loop=function _loop(k,len){var i=indexes[k],item=_extends(_extends({},measurements[i]),{},{measureRef:function measureRef(el){if(el){var measuredSize=measureSizeRef.current(el,horizontal);if(measuredSize!==item.size){var _scrollOffset=latestRef.current.scrollOffset;item.start<_scrollOffset&&defaultScrollToFn(_scrollOffset+(measuredSize-item.size)),pendingMeasuredCacheIndexesRef.current.push(i),setMeasuredCache((function(old){var _extends2;return _extends(_extends({},old),{},((_extends2={})[item.key]=measuredSize,_extends2))}))}}}});virtualItems.push(item)},k=0,len=indexes.length;k<len;k++)_loop(k);return virtualItems}),[indexes,defaultScrollToFn,horizontal,measurements]),mountedRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);useIsomorphicLayoutEffect((function(){mountedRef.current&&setMeasuredCache({}),mountedRef.current=!0}),[estimateSize]);var scrollToOffset=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(toOffset,_temp){var _ref2$align=(void 0===_temp?{}:_temp).align,align=void 0===_ref2$align?"start":_ref2$align,_latestRef$current=latestRef.current,scrollOffset=_latestRef$current.scrollOffset,outerSize=_latestRef$current.outerSize;"auto"===align&&(align=toOffset<=scrollOffset?"start":toOffset>=scrollOffset+outerSize?"end":"start"),"start"===align?scrollToFn(toOffset):"end"===align?scrollToFn(toOffset-outerSize):"center"===align&&scrollToFn(toOffset-outerSize/2)}),[scrollToFn]),tryScrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(index,_temp2){var _ref3=void 0===_temp2?{}:_temp2,_ref3$align=_ref3.align,align=void 0===_ref3$align?"auto":_ref3$align,rest=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_ref3,["align"]),_latestRef$current2=latestRef.current,measurements=_latestRef$current2.measurements,scrollOffset=_latestRef$current2.scrollOffset,outerSize=_latestRef$current2.outerSize,measurement=measurements[Math.max(0,Math.min(index,size-1))];if(measurement){if("auto"===align)if(measurement.end>=scrollOffset+outerSize)align="end";else{if(!(measurement.start<=scrollOffset))return;align="start"}var toOffset="center"===align?measurement.start+measurement.size/2:"end"===align?measurement.end:measurement.start;scrollToOffset(toOffset,_extends({align},rest))}}),[scrollToOffset,size]),scrollToIndex=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];tryScrollToIndex.apply(void 0,args),requestAnimationFrame((function(){tryScrollToIndex.apply(void 0,args)}))}),[tryScrollToIndex]);return{virtualItems,totalSize,scrollToOffset,scrollToIndex,measure}}var findNearestBinarySearch=function findNearestBinarySearch(low,high,getCurrentValue,value){for(;low<=high;){var middle=(low+high)/2|0,currentValue=getCurrentValue(middle);if(currentValue<value)low=middle+1;else{if(!(currentValue>value))return middle;high=middle-1}}return low>0?low-1:0}}}]);