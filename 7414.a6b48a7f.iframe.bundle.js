"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[7414],{"./modules/preview-react/avatar/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});var _Avatar=__webpack_require__("./modules/preview-react/avatar/lib/Avatar.tsx");Object.keys(_Avatar).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_Avatar[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _Avatar[key]}}))}));var _AvatarImage=__webpack_require__("./modules/preview-react/avatar/lib/AvatarImage.tsx");Object.keys(_AvatarImage).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_AvatarImage[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _AvatarImage[key]}}))}));var _AvatarName=__webpack_require__("./modules/preview-react/avatar/lib/AvatarName.tsx");Object.keys(_AvatarName).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_AvatarName[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _AvatarName[key]}}))}));var _BaseAvatar=__webpack_require__("./modules/preview-react/avatar/lib/BaseAvatar.tsx");Object.keys(_BaseAvatar).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_BaseAvatar[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _BaseAvatar[key]}}))}));var _getInitialsFromName=__webpack_require__("./modules/preview-react/avatar/lib/getInitialsFromName.ts");Object.keys(_getInitialsFromName).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_getInitialsFromName[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _getInitialsFromName[key]}}))}));const __docs=[];window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/avatar/lib/Avatar.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.avatarStencil=exports.Avatar=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_BaseAvatar=__webpack_require__("./modules/preview-react/avatar/lib/BaseAvatar.tsx"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const avatarStencil=exports.avatarStencil=(0,_canvasKitStyling.createStencil)({extends:_BaseAvatar.baseAvatarStencil,parts:{avatarImage:"avatar-image",avatarName:"avatar-name"},base:{name:"2ty4r4",styles:"box-sizing:border-box;"},modifiers:{imageLoaded:{false:{name:"3sgz00",styles:'[data-part="avatar-image"]{display:none;}'}},objectFit:{contain:{name:"q81bx",styles:'[data-part="avatar-image"]{object-fit:contain;}'},cover:{name:"1bvp3w",styles:'[data-part="avatar-image"]{object-fit:cover;}'},fill:{name:"15cwdk",styles:'[data-part="avatar-image"]{object-fit:fill;}'},none:{name:"48wkvu",styles:'[data-part="avatar-image"]{object-fit:none;}'},"scale-down":{name:"2e457b",styles:'[data-part="avatar-image"]{object-fit:scale-down;}'},initial:{name:"2ucq8j",styles:'[data-part="avatar-image"]{object-fit:initial;}'},inherit:{name:"29vpcg",styles:'[data-part="avatar-image"]{object-fit:inherit;}'},unset:{name:"2kosah",styles:'[data-part="avatar-image"]{object-fit:unset;}'},"-moz-initial":{name:"xnqn",styles:'[data-part="avatar-image"]{object-fit:-moz-initial;}'},revert:{name:"3vhr23",styles:'[data-part="avatar-image"]{object-fit:revert;}'}}}},"avatar-b17e14"),__docs=(exports.Avatar=(0,_common.createComponent)("div")({displayName:"Avatar",Component:({url,name,variant,objectFit="cover",preferredInitials,isDecorative,size,...elemProps},ref,Element)=>{const[imageLoaded,setImageLoaded]=_react.default.useState(!1);return(0,_jsxRuntime.jsxs)(_BaseAvatar.BaseAvatar,{as:Element,ref,...(0,_canvasKitStyling.handleCsProp)(elemProps,avatarStencil({variant,size,imageLoaded,objectFit})),children:[url&&(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{children:(0,_jsxRuntime.jsx)(_BaseAvatar.BaseAvatar.Image,{onLoad:()=>{imageLoaded||setImageLoaded(!0)},src:url,alt:isDecorative?void 0:name,"aria-hidden":isDecorative,...avatarStencil.parts.avatarImage})}),name&&(!url||!imageLoaded)&&(0,_jsxRuntime.jsx)(_BaseAvatar.BaseAvatar.Name,{name,preferredInitials,...avatarStencil.parts.avatarName})]})}}),[{name:"AvatarProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx",description:"",declarations:[{name:"AvatarProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"url",required:!1,type:{kind:"primitive",value:"string"},description:"The URL of the user's photo. For best fit, use square images.",declarations:[{name:"url",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{}},{kind:"property",name:"objectFit",required:!1,type:{kind:"external",name:"Property.ObjectFit",url:"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"},description:"An objectFit property that can customize how to resize your image to fit its container.",declarations:[{name:"objectFit",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{default:'"contain"'}},{kind:"property",name:"isDecorative",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, the Avatar won't forward the `name` prop to the `alt` attribute of the image. This is useful when the Avatar is purely decorative and is rendered next to a name or text.",declarations:[{name:"isDecorative",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{}},{kind:"property",name:"children",required:!1,type:{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"},description:"Children of the BaseAvatar.",declarations:[{name:"children",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{}},{kind:"property",name:"variant",required:!1,type:{kind:"union",value:[{kind:"string",value:"blue"},{kind:"string",value:"amber"},{kind:"string",value:"teal"},{kind:"string",value:"purple"}]},description:"The variant of the Avatar.",declarations:[{name:"variant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"blue"'}},{kind:"property",name:"size",required:!1,type:{kind:"union",value:[{kind:"string",value:"extraExtraSmall"},{kind:"string",value:"extraSmall"},{kind:"string",value:"small"},{kind:"string",value:"medium"},{kind:"string",value:"large"},{kind:"string",value:"extraLarge"},{kind:"string",value:"extraExtraLarge"},{kind:"parenthesis",value:{kind:"intersection",value:[{kind:"primitive",value:"string"},{kind:"object",properties:[]}]}}]},description:"The size of the Avatar.\n`extraExtraSmall` is 24px x 24px\n`extraSmall` is 32px x 32px\n`small` is 40px x 40px\n`medium` is 48px x 48px\n`large` is 72px x 72px\n`extraLarge` is 96px x 96px\n`extraExtraLarge` is 120px x 120px",declarations:[{name:"size",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"medium"'}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"name",required:!0,type:{kind:"primitive",value:"string"},description:"The alt text of the Avatar image. This prop is also used for the initials. The first letter of the first name and the first letter of the second name are chosen for the initials.",declarations:[{name:"name",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}},{kind:"property",name:"preferredInitials",required:!1,type:{kind:"primitive",value:"string"},description:"If you want full control over the initials, use `preferredInitials` instead.",declarations:[{name:"preferredInitials",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}}]}},{name:"avatarStencil",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx",description:"",declarations:[{name:"avatarStencil",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{},type:{kind:"function",parameters:[{kind:"parameter",name:"options",type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"primitive",value:"never"}]},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",value:"ModifierValuesStencil<M, V>"},{kind:"generic",name:"VariableValuesStencil"}]},falseType:{kind:"conditional",check:{kind:"generic",name:"E"},extends:{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"ME"},{kind:"generic",name:"M"}]},{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"ModifierValuesStencil<M, V>"},{kind:"symbol",name:"VariableValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"VariableValuesStencil<V>"}]},falseType:{kind:"primitive",value:"never"}}},required:!1,rest:!1,description:"",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],members:[{kind:"property",name:"parts",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"PE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"PE"},{kind:"generic",name:"P"}]}],value:"StencilPartProps<T>"},falseType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"generic",name:"P"}],value:"StencilPartProps<T>"}},description:"",declarations:[{name:"parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"vars",required:!0,type:{kind:"generic",name:"StencilDefaultVars"},description:"",declarations:[{name:"vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"base",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"base",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"modifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilModifierReturn",value:"StencilModifierReturn<ME & M, VE & V>"},falseType:{kind:"symbol",name:"StencilModifierReturn",typeParameters:[{kind:"generic",name:"M"},{kind:"generic",name:"V"}],value:"StencilModifierReturn<M, V>"}},description:"",declarations:[{name:"modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"defaultModifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilDefaultModifierReturn",value:"StencilDefaultModifierReturn<ME & M>"},falseType:{kind:"symbol",name:"StencilDefaultModifierReturn",typeParameters:[{kind:"generic",name:"M"}],value:"StencilDefaultModifierReturn<M>"}},description:"",declarations:[{name:"defaultModifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__extends",required:!1,type:{kind:"generic",name:"E"},description:"",declarations:[{name:"__extends",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__vars",required:!0,type:{kind:"generic",name:"V"},description:"",declarations:[{name:"__vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__modifiers",required:!0,type:{kind:"generic",name:"M"},description:"",declarations:[{name:"__modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__id",required:!0,type:{kind:"generic",name:"ID"},description:"",declarations:[{name:"__id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__parts",required:!1,type:{kind:"generic",name:"P"},description:"",declarations:[{name:"__parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],returnType:{kind:"object",properties:[{kind:"property",name:"className",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"className",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"style",required:!1,type:{kind:"external",name:"Record",url:"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type",typeParameters:[{kind:"primitive",value:"string"},{kind:"primitive",value:"string"}]},description:"",declarations:[{name:"style",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}}},{name:"Avatar",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx",description:"JSDoc for Avatar. Will be part of the Component API docs",declarations:[{name:"Avatar",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Avatar",props:[{kind:"property",name:"url",required:!1,type:{kind:"primitive",value:"string"},description:"The URL of the user's photo. For best fit, use square images.",declarations:[{name:"url",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{}},{kind:"property",name:"objectFit",required:!1,type:{kind:"external",name:"Property.ObjectFit",url:"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"},description:"An objectFit property that can customize how to resize your image to fit its container.",declarations:[{name:"objectFit",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{default:'"contain"'},defaultValue:{kind:"string",value:"cover"}},{kind:"property",name:"isDecorative",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, the Avatar won't forward the `name` prop to the `alt` attribute of the image. This is useful when the Avatar is purely decorative and is rendered next to a name or text.",declarations:[{name:"isDecorative",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/Avatar.tsx"}],tags:{}},{kind:"property",name:"children",required:!1,type:{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"},description:"Children of the BaseAvatar.",declarations:[{name:"children",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{}},{kind:"property",name:"variant",required:!1,type:{kind:"union",value:[{kind:"string",value:"blue"},{kind:"string",value:"amber"},{kind:"string",value:"teal"},{kind:"string",value:"purple"}]},description:"The variant of the Avatar.",declarations:[{name:"variant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"blue"'},defaultValue:{kind:"string",value:"blue"}},{kind:"property",name:"size",required:!1,type:{kind:"union",value:[{kind:"string",value:"extraExtraSmall"},{kind:"string",value:"extraSmall"},{kind:"string",value:"small"},{kind:"string",value:"medium"},{kind:"string",value:"large"},{kind:"string",value:"extraLarge"},{kind:"string",value:"extraExtraLarge"},{kind:"parenthesis",value:{kind:"intersection",value:[{kind:"primitive",value:"string"},{kind:"object",properties:[]}]}}]},description:"The size of the Avatar.\n`extraExtraSmall` is 24px x 24px\n`extraSmall` is 32px x 32px\n`small` is 40px x 40px\n`medium` is 48px x 48px\n`large` is 72px x 72px\n`extraLarge` is 96px x 96px\n`extraExtraLarge` is 120px x 120px",declarations:[{name:"size",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"medium"'},defaultValue:{kind:"string",value:"medium"}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"name",required:!0,type:{kind:"primitive",value:"string"},description:"The alt text of the Avatar image. This prop is also used for the initials. The first letter of the first name and the first letter of the second name are chosen for the initials.",declarations:[{name:"name",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}},{kind:"property",name:"preferredInitials",required:!1,type:{kind:"primitive",value:"string"},description:"If you want full control over the initials, use `preferredInitials` instead.",declarations:[{name:"preferredInitials",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}]}}],baseElement:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/avatar/lib/AvatarImage.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.avatarImageStencil=exports.AvatarImage=void 0;var _common=__webpack_require__("./modules/react/common/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const avatarImageStencil=exports.avatarImageStencil=(0,_canvasKitStyling.createStencil)({base:{name:"cvs0m",styles:"box-sizing:border-box;height:100%;width:100%;object-fit:cover;"}},"avatar-image-e8e8d8"),__docs=(exports.AvatarImage=(0,_common.createComponent)("img")({displayName:"AvatarImage",Component:({...elemProps},ref,Element)=>(0,_jsxRuntime.jsx)(Element,{ref,...(0,_canvasKitStyling.handleCsProp)(elemProps,avatarImageStencil())})}),[{name:"AvatarImageProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarImage.tsx",description:"",declarations:[{name:"AvatarImageProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarImage.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}},{name:"avatarImageStencil",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarImage.tsx",description:"",declarations:[{name:"avatarImageStencil",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarImage.tsx"}],tags:{},type:{kind:"function",parameters:[{kind:"parameter",name:"options",type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"primitive",value:"never"}]},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",value:"ModifierValuesStencil<M, V>"},{kind:"generic",name:"VariableValuesStencil"}]},falseType:{kind:"conditional",check:{kind:"generic",name:"E"},extends:{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"ME"},{kind:"generic",name:"M"}]},{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"ModifierValuesStencil<M, V>"},{kind:"symbol",name:"VariableValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"VariableValuesStencil<V>"}]},falseType:{kind:"primitive",value:"never"}}},required:!1,rest:!1,description:"",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],members:[{kind:"property",name:"parts",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"PE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"PE"},{kind:"generic",name:"P"}]}],value:"StencilPartProps<T>"},falseType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"generic",name:"P"}],value:"StencilPartProps<T>"}},description:"",declarations:[{name:"parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"vars",required:!0,type:{kind:"generic",name:"StencilDefaultVars"},description:"",declarations:[{name:"vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"base",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"base",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"modifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilModifierReturn",value:"StencilModifierReturn<ME & M, VE & V>"},falseType:{kind:"symbol",name:"StencilModifierReturn",typeParameters:[{kind:"generic",name:"M"},{kind:"generic",name:"V"}],value:"StencilModifierReturn<M, V>"}},description:"",declarations:[{name:"modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"defaultModifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilDefaultModifierReturn",value:"StencilDefaultModifierReturn<ME & M>"},falseType:{kind:"symbol",name:"StencilDefaultModifierReturn",typeParameters:[{kind:"generic",name:"M"}],value:"StencilDefaultModifierReturn<M>"}},description:"",declarations:[{name:"defaultModifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__extends",required:!1,type:{kind:"generic",name:"E"},description:"",declarations:[{name:"__extends",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__vars",required:!0,type:{kind:"generic",name:"V"},description:"",declarations:[{name:"__vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__modifiers",required:!0,type:{kind:"generic",name:"M"},description:"",declarations:[{name:"__modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__id",required:!0,type:{kind:"generic",name:"ID"},description:"",declarations:[{name:"__id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__parts",required:!1,type:{kind:"generic",name:"P"},description:"",declarations:[{name:"__parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],returnType:{kind:"object",properties:[{kind:"property",name:"className",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"className",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"style",required:!1,type:{kind:"external",name:"Record",url:"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type",typeParameters:[{kind:"primitive",value:"string"},{kind:"primitive",value:"string"}]},description:"",declarations:[{name:"style",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}}},{name:"AvatarImage",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarImage.tsx",description:"",declarations:[{name:"AvatarImage",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarImage.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"AvatarImage",props:[{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"img",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"img",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"}}]}}],baseElement:{kind:"external",name:"img",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"}}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/avatar/lib/AvatarName.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.avatarNameStencil=exports.AvatarName=void 0;var _common=__webpack_require__("./modules/react/common/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_getInitialsFromName=__webpack_require__("./modules/preview-react/avatar/lib/getInitialsFromName.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const avatarNameStencil=exports.avatarNameStencil=(0,_canvasKitStyling.createStencil)({base:{name:"3jju5u",styles:"box-sizing:border-box;text-transform:uppercase;cursor:default;"}},"avatar-name-ead534"),__docs=(exports.AvatarName=(0,_common.createComponent)("span")({displayName:"AvatarName",Component:({name,preferredInitials,...elemProps},ref,Element)=>(0,_jsxRuntime.jsx)(Element,{ref,...(0,_canvasKitStyling.handleCsProp)(elemProps,avatarNameStencil()),children:preferredInitials||(0,_getInitialsFromName.getInitialsFromName)(name)})}),[{name:"AvatarNameProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx",description:"",declarations:[{name:"AvatarNameProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"name",required:!0,type:{kind:"primitive",value:"string"},description:"The alt text of the Avatar image. This prop is also used for the initials. The first letter of the first name and the first letter of the second name are chosen for the initials.",declarations:[{name:"name",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}},{kind:"property",name:"preferredInitials",required:!1,type:{kind:"primitive",value:"string"},description:"If you want full control over the initials, use `preferredInitials` instead.",declarations:[{name:"preferredInitials",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}},{name:"avatarNameStencil",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx",description:"",declarations:[{name:"avatarNameStencil",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{},type:{kind:"function",parameters:[{kind:"parameter",name:"options",type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"primitive",value:"never"}]},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",value:"ModifierValuesStencil<M, V>"},{kind:"generic",name:"VariableValuesStencil"}]},falseType:{kind:"conditional",check:{kind:"generic",name:"E"},extends:{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"ME"},{kind:"generic",name:"M"}]},{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"ModifierValuesStencil<M, V>"},{kind:"symbol",name:"VariableValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"VariableValuesStencil<V>"}]},falseType:{kind:"primitive",value:"never"}}},required:!1,rest:!1,description:"",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],members:[{kind:"property",name:"parts",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"PE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"PE"},{kind:"generic",name:"P"}]}],value:"StencilPartProps<T>"},falseType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"generic",name:"P"}],value:"StencilPartProps<T>"}},description:"",declarations:[{name:"parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"vars",required:!0,type:{kind:"generic",name:"StencilDefaultVars"},description:"",declarations:[{name:"vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"base",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"base",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"modifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilModifierReturn",value:"StencilModifierReturn<ME & M, VE & V>"},falseType:{kind:"symbol",name:"StencilModifierReturn",typeParameters:[{kind:"generic",name:"M"},{kind:"generic",name:"V"}],value:"StencilModifierReturn<M, V>"}},description:"",declarations:[{name:"modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"defaultModifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilDefaultModifierReturn",value:"StencilDefaultModifierReturn<ME & M>"},falseType:{kind:"symbol",name:"StencilDefaultModifierReturn",typeParameters:[{kind:"generic",name:"M"}],value:"StencilDefaultModifierReturn<M>"}},description:"",declarations:[{name:"defaultModifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__extends",required:!1,type:{kind:"generic",name:"E"},description:"",declarations:[{name:"__extends",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__vars",required:!0,type:{kind:"generic",name:"V"},description:"",declarations:[{name:"__vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__modifiers",required:!0,type:{kind:"generic",name:"M"},description:"",declarations:[{name:"__modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__id",required:!0,type:{kind:"generic",name:"ID"},description:"",declarations:[{name:"__id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__parts",required:!1,type:{kind:"generic",name:"P"},description:"",declarations:[{name:"__parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],returnType:{kind:"object",properties:[{kind:"property",name:"className",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"className",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"style",required:!1,type:{kind:"external",name:"Record",url:"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type",typeParameters:[{kind:"primitive",value:"string"},{kind:"primitive",value:"string"}]},description:"",declarations:[{name:"style",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}}},{name:"AvatarName",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx",description:"",declarations:[{name:"AvatarName",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"AvatarName",props:[{kind:"property",name:"name",required:!0,type:{kind:"primitive",value:"string"},description:"The alt text of the Avatar image. This prop is also used for the initials. The first letter of the first name and the first letter of the second name are chosen for the initials.",declarations:[{name:"name",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}},{kind:"property",name:"preferredInitials",required:!1,type:{kind:"primitive",value:"string"},description:"If you want full control over the initials, use `preferredInitials` instead.",declarations:[{name:"preferredInitials",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"span",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"span",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span"}}]}}],baseElement:{kind:"external",name:"span",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span"}}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/avatar/lib/BaseAvatar.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.baseAvatarStencil=exports.BaseAvatar=void 0;(function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}})(__webpack_require__("./node_modules/react/index.js"));var _common=__webpack_require__("./modules/react/common/index.ts"),_AvatarImage=__webpack_require__("./modules/preview-react/avatar/lib/AvatarImage.tsx"),_AvatarName=__webpack_require__("./modules/preview-react/avatar/lib/AvatarName.tsx"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");const baseAvatarStencil=exports.baseAvatarStencil=(0,_canvasKitStyling.createStencil)({vars:{backgroundColor:"",color:"",size:""},base:{name:"32kf6u",styles:"box-sizing:border-box;border-radius:var(--cnvs-sys-shape-round);width:var(--size-base-avatar-b2787e, calc(var(--cnvs-sys-space-x10) + var(--cnvs-sys-space-x2)));height:var(--size-base-avatar-b2787e, calc(var(--cnvs-sys-space-x10) + var(--cnvs-sys-space-x2)));background-color:var(--backgroundColor-base-avatar-b2787e, var(--cnvs-base-palette-blue-300));color:var(--color-base-avatar-b2787e, var(--cnvs-base-palette-blue-800));display:flex;align-items:center;justify-content:center;overflow:hidden;border:none;font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-normal);line-height:var(--cnvs-sys-line-height-body-medium);font-size:var(--cnvs-sys-font-size-body-medium);"},modifiers:{variant:{blue:{name:"1tzywr",styles:"background-color:var(--backgroundColor-base-avatar-b2787e, var(--cnvs-base-palette-blue-300));color:var(--color-base-avatar-b2787e, var(--cnvs-base-palette-blue-800));"},amber:{name:"35wo3g",styles:"background-color:var(--backgroundColor-base-avatar-b2787e, var(--cnvs-base-palette-amber-200));color:var(--color-base-avatar-b2787e, var(--cnvs-base-palette-amber-700));"},teal:{name:"3toodz",styles:"background-color:var(--backgroundColor-base-avatar-b2787e, var(--cnvs-base-palette-teal-300));color:var(--color-base-avatar-b2787e, var(--cnvs-base-palette-teal-800));"},purple:{name:"1iqbvt",styles:"background-color:var(--backgroundColor-base-avatar-b2787e, var(--cnvs-base-palette-purple-300));color:var(--color-base-avatar-b2787e, var(--cnvs-base-palette-purple-800));"}},size:{extraExtraSmall:{name:"ukvac",styles:"--size-base-avatar-b2787e:var(--cnvs-sys-space-x6);font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-normal);line-height:var(--cnvs-sys-line-height-subtext-small);font-size:var(--cnvs-sys-font-size-subtext-small);letter-spacing:var(--cnvs-base-letter-spacing-50);"},extraSmall:{name:"iycpe",styles:"--size-base-avatar-b2787e:var(--cnvs-sys-space-x8);font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-normal);line-height:var(--cnvs-sys-line-height-subtext-medium);font-size:var(--cnvs-sys-font-size-subtext-medium);letter-spacing:var(--cnvs-base-letter-spacing-100);"},small:{name:"2k3bq3",styles:"--size-base-avatar-b2787e:var(--cnvs-sys-space-x10);font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-normal);line-height:var(--cnvs-sys-line-height-body-small);font-size:var(--cnvs-sys-font-size-body-small);letter-spacing:var(--cnvs-base-letter-spacing-200);"},medium:{name:"2f9qyt",styles:"--size-base-avatar-b2787e:calc(var(--cnvs-sys-space-x10) + var(--cnvs-sys-space-x2));font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-normal);line-height:var(--cnvs-sys-line-height-body-medium);font-size:var(--cnvs-sys-font-size-body-medium);"},large:{name:"c50fk",styles:"--size-base-avatar-b2787e:calc(var(--cnvs-sys-space-x16) + var(--cnvs-sys-space-x2));font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-bold);line-height:var(--cnvs-sys-line-height-heading-medium);font-size:var(--cnvs-sys-font-size-heading-medium);"},extraLarge:{name:"1da3h9",styles:"--size-base-avatar-b2787e:calc(var(--cnvs-sys-space-x20) + var(--cnvs-sys-space-x4));font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-bold);line-height:var(--cnvs-sys-line-height-title-small);font-size:var(--cnvs-sys-font-size-title-small);"},extraExtraLarge:{name:"3ggib2",styles:"--size-base-avatar-b2787e:calc(var(--cnvs-sys-space-x10) * 3);font-family:var(--cnvs-sys-font-family-default);font-weight:var(--cnvs-sys-font-weight-bold);line-height:var(--cnvs-sys-line-height-title-medium);font-size:var(--cnvs-sys-font-size-title-medium);"}}}},"base-avatar-b2787e"),__docs=(exports.BaseAvatar=(0,_common.createComponent)("div")({displayName:"BaseAvatar",subComponents:{Image:_AvatarImage.AvatarImage,Name:_AvatarName.AvatarName},Component:({variant,size,...elemProps},ref,Element)=>(0,_jsxRuntime.jsx)(Element,{ref,...(0,_canvasKitStyling.handleCsProp)(elemProps,baseAvatarStencil({variant,size}))})}),[{name:"BaseAvatarProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx",description:"",declarations:[{name:"BaseAvatarProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"children",required:!1,type:{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"},description:"Children of the BaseAvatar.",declarations:[{name:"children",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{}},{kind:"property",name:"variant",required:!1,type:{kind:"union",value:[{kind:"string",value:"blue"},{kind:"string",value:"amber"},{kind:"string",value:"teal"},{kind:"string",value:"purple"}]},description:"The variant of the Avatar.",declarations:[{name:"variant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"blue"'}},{kind:"property",name:"size",required:!1,type:{kind:"union",value:[{kind:"string",value:"extraExtraSmall"},{kind:"string",value:"extraSmall"},{kind:"string",value:"small"},{kind:"string",value:"medium"},{kind:"string",value:"large"},{kind:"string",value:"extraLarge"},{kind:"string",value:"extraExtraLarge"},{kind:"parenthesis",value:{kind:"intersection",value:[{kind:"primitive",value:"string"},{kind:"object",properties:[]}]}}]},description:"The size of the Avatar.\n`extraExtraSmall` is 24px x 24px\n`extraSmall` is 32px x 32px\n`small` is 40px x 40px\n`medium` is 48px x 48px\n`large` is 72px x 72px\n`extraLarge` is 96px x 96px\n`extraExtraLarge` is 120px x 120px",declarations:[{name:"size",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"medium"'}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}},{name:"baseAvatarStencil",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx",description:"",declarations:[{name:"baseAvatarStencil",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{},type:{kind:"function",parameters:[{kind:"parameter",name:"options",type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"primitive",value:"never"}]},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",value:"ModifierValuesStencil<M, V>"},{kind:"generic",name:"VariableValuesStencil"}]},falseType:{kind:"conditional",check:{kind:"generic",name:"E"},extends:{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"ME"},{kind:"generic",name:"M"}]},{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"ModifierValuesStencil<M, V>"},{kind:"symbol",name:"VariableValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"VariableValuesStencil<V>"}]},falseType:{kind:"primitive",value:"never"}}},required:!1,rest:!1,description:"",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],members:[{kind:"property",name:"parts",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"PE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"PE"},{kind:"generic",name:"P"}]}],value:"StencilPartProps<T>"},falseType:{kind:"symbol",name:"StencilPartProps",typeParameters:[{kind:"generic",name:"P"}],value:"StencilPartProps<T>"}},description:"",declarations:[{name:"parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"vars",required:!0,type:{kind:"generic",name:"StencilDefaultVars"},description:"",declarations:[{name:"vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"base",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"base",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"modifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilModifierReturn",value:"StencilModifierReturn<ME & M, VE & V>"},falseType:{kind:"symbol",name:"StencilModifierReturn",typeParameters:[{kind:"generic",name:"M"},{kind:"generic",name:"V"}],value:"StencilModifierReturn<M, V>"}},description:"",declarations:[{name:"modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"defaultModifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, P, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilDefaultModifierReturn",value:"StencilDefaultModifierReturn<ME & M>"},falseType:{kind:"symbol",name:"StencilDefaultModifierReturn",typeParameters:[{kind:"generic",name:"M"}],value:"StencilDefaultModifierReturn<M>"}},description:"",declarations:[{name:"defaultModifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__extends",required:!1,type:{kind:"generic",name:"E"},description:"",declarations:[{name:"__extends",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__vars",required:!0,type:{kind:"generic",name:"V"},description:"",declarations:[{name:"__vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__modifiers",required:!0,type:{kind:"generic",name:"M"},description:"",declarations:[{name:"__modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__id",required:!0,type:{kind:"generic",name:"ID"},description:"",declarations:[{name:"__id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__parts",required:!1,type:{kind:"generic",name:"P"},description:"",declarations:[{name:"__parts",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],returnType:{kind:"object",properties:[{kind:"property",name:"className",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"className",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"style",required:!1,type:{kind:"external",name:"Record",url:"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type",typeParameters:[{kind:"primitive",value:"string"},{kind:"primitive",value:"string"}]},description:"",declarations:[{name:"style",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}}},{name:"BaseAvatar",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx",description:"JSDoc for Avatar. Will be part of the Component API docs",declarations:[{name:"BaseAvatar",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"BaseAvatar",props:[{kind:"property",name:"children",required:!1,type:{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"},description:"Children of the BaseAvatar.",declarations:[{name:"children",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{}},{kind:"property",name:"variant",required:!1,type:{kind:"union",value:[{kind:"string",value:"blue"},{kind:"string",value:"amber"},{kind:"string",value:"teal"},{kind:"string",value:"purple"}]},description:"The variant of the Avatar.",declarations:[{name:"variant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"blue"'},defaultValue:{kind:"string",value:"blue"}},{kind:"property",name:"size",required:!1,type:{kind:"union",value:[{kind:"string",value:"extraExtraSmall"},{kind:"string",value:"extraSmall"},{kind:"string",value:"small"},{kind:"string",value:"medium"},{kind:"string",value:"large"},{kind:"string",value:"extraLarge"},{kind:"string",value:"extraExtraLarge"},{kind:"parenthesis",value:{kind:"intersection",value:[{kind:"primitive",value:"string"},{kind:"object",properties:[]}]}}]},description:"The size of the Avatar.\n`extraExtraSmall` is 24px x 24px\n`extraSmall` is 32px x 32px\n`small` is 40px x 40px\n`medium` is 48px x 48px\n`large` is 72px x 72px\n`extraLarge` is 96px x 96px\n`extraExtraLarge` is 120px x 120px",declarations:[{name:"size",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"}],tags:{default:'"medium"'},defaultValue:{kind:"string",value:"medium"}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"}}]}}],baseElement:{kind:"external",name:"div",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"},subComponents:[{name:"Image",symbol:"AvatarImage",description:"",declarations:[{name:"Image",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"},{name:"AvatarImage",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarImage.tsx"}],tags:{}},{name:"Name",symbol:"AvatarName",description:"",declarations:[{name:"Name",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/BaseAvatar.tsx"},{name:"AvatarName",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/AvatarName.tsx"}],tags:{}}]}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/avatar/lib/getInitialsFromName.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getInitialsFromName=void 0;exports.getInitialsFromName=name=>{const nameParts=name.trim().split(/\s+/).filter(Boolean),first=nameParts[0],firstInitial=first?.[0]||"",last=nameParts.length>1?nameParts[nameParts.length-1]:void 0;return`${firstInitial}${last?.[0]||""}`};const __docs=[{name:"getInitialsFromName",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/getInitialsFromName.ts",description:"",declarations:[{name:"getInitialsFromName",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/getInitialsFromName.ts"}],tags:{},type:{kind:"function",parameters:[{kind:"parameter",name:"name",type:{kind:"primitive",value:"string"},required:!0,rest:!1,description:"",declarations:[{name:"name",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/avatar/lib/getInitialsFromName.ts"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"string"}}}];window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)}}]);