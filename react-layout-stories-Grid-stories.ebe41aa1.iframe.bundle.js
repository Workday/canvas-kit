"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[5768],{"./modules/react/layout/stories/Grid.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GridLayoutInteractive=exports.GridLayout=exports.Basic=exports.default=void 0;var _Grid=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./modules/react/layout/stories/Grid.mdx")),_layout=__webpack_require__("./modules/react/layout/index.ts"),_Basic=__webpack_require__("./modules/react/layout/stories/examples/Grid/Basic.tsx"),_GridLayout=__webpack_require__("./modules/react/layout/stories/examples/Grid/GridLayout.tsx"),_GridLayoutInteractive=__webpack_require__("./modules/react/layout/stories/examples/Grid/GridLayoutInteractive.tsx");var _default={title:"Components/Layout/Grid",component:_layout.Grid,tags:["autodocs"],parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import {Meta, StoryObj} from \'@storybook/react\';\\n\\nimport mdxDoc from \'./Grid.mdx\';\\n\\nimport {Grid} from \'@workday/canvas-kit-react/layout\';\\n// examples\\nimport {Basic as BasicExample} from \'./examples/Grid/Basic\';\\nimport {GridLayout as GridLayoutExample} from \'./examples/Grid/GridLayout\';\\nimport {GridLayoutInteractive as GridLayoutInteractiveExample} from \'./examples/Grid/GridLayoutInteractive\';\\n\\nexport default {\\n  title: \'Components/Layout/Grid\',\\n  component: Grid,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof Grid>;\\n\\ntype Story = StoryObj<typeof Grid>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\nexport const GridLayout: Story = {\\n  render: GridLayoutExample,\\n};\\nexport const GridLayoutInteractive: Story = {\\n  render: GridLayoutInteractiveExample,\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "Basic": {\n    "startLoc": {\n      "col": 28,\n      "line": 24\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 26\n    },\n    "startBody": {\n      "col": 28,\n      "line": 24\n    },\n    "endBody": {\n      "col": 1,\n      "line": 26\n    }\n  },\n  "GridLayout": {\n    "startLoc": {\n      "col": 33,\n      "line": 27\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 29\n    },\n    "startBody": {\n      "col": 33,\n      "line": 27\n    },\n    "endBody": {\n      "col": 1,\n      "line": 29\n    }\n  },\n  "GridLayoutInteractive": {\n    "startLoc": {\n      "col": 44,\n      "line": 30\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 32\n    },\n    "startBody": {\n      "col": 44,\n      "line": 30\n    },\n    "endBody": {\n      "col": 1,\n      "line": 32\n    }\n  }\n};\n    \nimport {Meta, StoryObj} from \'@storybook/react\';\n\nimport mdxDoc from \'./Grid.mdx\';\n\nimport {Grid} from \'@workday/canvas-kit-react/layout\';\n// examples\nimport {Basic as BasicExample} from \'./examples/Grid/Basic\';\nimport {GridLayout as GridLayoutExample} from \'./examples/Grid/GridLayout\';\nimport {GridLayoutInteractive as GridLayoutInteractiveExample} from \'./examples/Grid/GridLayoutInteractive\';\n\nexport default {\n  title: \'Components/Layout/Grid\',\n  component: Grid,\n  tags: [\'autodocs\'],\n  parameters: {\n  "storySource": {\n    "source": "import {Meta, StoryObj} from \'@storybook/react\';\\n\\nimport mdxDoc from \'./Grid.mdx\';\\n\\nimport {Grid} from \'@workday/canvas-kit-react/layout\';\\n// examples\\nimport {Basic as BasicExample} from \'./examples/Grid/Basic\';\\nimport {GridLayout as GridLayoutExample} from \'./examples/Grid/GridLayout\';\\nimport {GridLayoutInteractive as GridLayoutInteractiveExample} from \'./examples/Grid/GridLayoutInteractive\';\\n\\nexport default {\\n  title: \'Components/Layout/Grid\',\\n  component: Grid,\\n  tags: [\'autodocs\'],\\n  parameters: {\\n    docs: {\\n      page: mdxDoc,\\n    },\\n  },\\n} as Meta<typeof Grid>;\\n\\ntype Story = StoryObj<typeof Grid>;\\n\\nexport const Basic: Story = {\\n  render: BasicExample,\\n};\\nexport const GridLayout: Story = {\\n  render: GridLayoutExample,\\n};\\nexport const GridLayoutInteractive: Story = {\\n  render: GridLayoutInteractiveExample,\\n};\\n",\n    "locationsMap": {\n      "basic": {\n        "startLoc": {\n          "col": 28,\n          "line": 24\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 26\n        },\n        "startBody": {\n          "col": 28,\n          "line": 24\n        },\n        "endBody": {\n          "col": 1,\n          "line": 26\n        }\n      },\n      "grid-layout": {\n        "startLoc": {\n          "col": 33,\n          "line": 27\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 29\n        },\n        "startBody": {\n          "col": 33,\n          "line": 27\n        },\n        "endBody": {\n          "col": 1,\n          "line": 29\n        }\n      },\n      "grid-layout-interactive": {\n        "startLoc": {\n          "col": 44,\n          "line": 30\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 32\n        },\n        "startBody": {\n          "col": 44,\n          "line": 30\n        },\n        "endBody": {\n          "col": 1,\n          "line": 32\n        }\n      }\n    }\n  }\n,\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof Grid>;\n\ntype Story = StoryObj<typeof Grid>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};;\nexport const GridLayout: Story = {\n  render: GridLayoutExample,\n};;\nexport const GridLayoutInteractive: Story = {\n  render: GridLayoutInteractiveExample,\n};\n',locationsMap:{basic:{startLoc:{col:28,line:147},endLoc:{col:1,line:149},startBody:{col:28,line:147},endBody:{col:1,line:149}},"grid-layout":{startLoc:{col:33,line:150},endLoc:{col:1,line:152},startBody:{col:33,line:150},endBody:{col:1,line:152}},"grid-layout-interactive":{startLoc:{col:44,line:153},endLoc:{col:1,line:155},startBody:{col:44,line:153},endBody:{col:1,line:155}}}},storySource:{source:"import {Meta, StoryObj} from '@storybook/react';\n\nimport mdxDoc from './Grid.mdx';\n\nimport {Grid} from '@workday/canvas-kit-react/layout';\n// examples\nimport {Basic as BasicExample} from './examples/Grid/Basic';\nimport {GridLayout as GridLayoutExample} from './examples/Grid/GridLayout';\nimport {GridLayoutInteractive as GridLayoutInteractiveExample} from './examples/Grid/GridLayoutInteractive';\n\nexport default {\n  title: 'Components/Layout/Grid',\n  component: Grid,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      page: mdxDoc,\n    },\n  },\n} as Meta<typeof Grid>;\n\ntype Story = StoryObj<typeof Grid>;\n\nexport const Basic: Story = {\n  render: BasicExample,\n};\nexport const GridLayout: Story = {\n  render: GridLayoutExample,\n};\nexport const GridLayoutInteractive: Story = {\n  render: GridLayoutInteractiveExample,\n};\n",locationsMap:{basic:{startLoc:{col:28,line:24},endLoc:{col:1,line:26},startBody:{col:28,line:24},endBody:{col:1,line:26}},"grid-layout":{startLoc:{col:33,line:27},endLoc:{col:1,line:29},startBody:{col:33,line:27},endBody:{col:1,line:29}},"grid-layout-interactive":{startLoc:{col:44,line:30},endLoc:{col:1,line:32},startBody:{col:44,line:30},endBody:{col:1,line:32}}}},docs:{page:_Grid.default}}};exports.default=_default;const Basic={render:_Basic.Basic};exports.Basic=Basic;const GridLayout={render:_GridLayout.GridLayout};exports.GridLayout=GridLayout;const GridLayoutInteractive={render:_GridLayoutInteractive.GridLayoutInteractive};exports.GridLayoutInteractive=GridLayoutInteractive,module.exports.__namedExportsOrder=["GridLayoutInteractive","GridLayout","Basic"]},"./modules/react/layout/stories/Grid.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_Grid_Basic__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/react/layout/stories/examples/Grid/Basic.tsx"),_examples_Grid_GridLayout__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./modules/react/layout/stories/examples/Grid/GridLayout.tsx"),_examples_Grid_GridLayoutInteractive__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./modules/react/layout/stories/examples/Grid/GridLayoutInteractive.tsx"),_Grid_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/react/layout/stories/Grid.stories.ts");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h2:"h2",pre:"pre",h3:"h3",blockquote:"blockquote",strong:"strong",em:"em",ul:"ul",li:"li",h4:"h4"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{of:_Grid_stories__WEBPACK_IMPORTED_MODULE_5__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-grid",children:"Canvas Kit Grid"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," is a low-level layout component that provides a common, ergonomic API for building\ntwo-dimensional layouts (rows and columns) with\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids",target:"_blank",rel:"nofollow noopener noreferrer",children:"CSS Grid"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Please refer to our ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/examples-layouts--area-column-positioning",children:"layout examples"})," for more examples of how to implement\ndifferent layouts using ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"installation",children:"Installation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-sh",children:"yarn add @workday/canvas-kit-react\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Note"}),": We recommend you familiarize yourself with CSS Grid\n(",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids",target:"_blank",rel:"nofollow noopener noreferrer",children:"MDN"}),",\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://css-tricks.com/snippets/css/complete-guide-grid/",target:"_blank",rel:"nofollow noopener noreferrer",children:"CSS-Tricks"}),") before diving into our\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," component. This example makes use of\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Glossary/Grid_Areas",target:"_blank",rel:"nofollow noopener noreferrer",children:"Grid Areas"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In this example, we set up a basic layout built with ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," using four child components: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Header"}),",\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SideBar"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"BodyContent"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Footer"}),". By assigning the same names to each child's ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"gridArea"})," prop,\nwe're able to arrange them by referencing their names in the parent ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," container. Our example\nuses a 12-column grid with ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"SideBar"})," occupying three columns and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"BodyContent"})," occupying the\nremaining nine."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Grid_Basic__WEBPACK_IMPORTED_MODULE_6__.Basic}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"using-grid-items",children:"Using Grid Items"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In the example above we nested ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," components to create our layout, and we controlled the layout\nstructure from the top-level ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," container. We can also use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," components to allow child\ncells to have more control. While any direct child of a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," component is implicitly a grid item,\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," provides special CSS Grid Item style props that allow you to have more control over how\nand where each item renders."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["To demonstrate this behavior, the example below has a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," container with nine cells. The eight\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"soap500"})," cells are ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," components, and the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"peach300"})," cell is a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"}),". We can use the\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," style props ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"gridRowStart"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"gridColumnStart"})," to manipulate where the cell renders.\nUse the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Row"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Column"})," buttons to manipulate these props and see the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"}),"'s position\nadjust accordingly."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Note"}),": This example is solely intended to demonstrate ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"}),"'s functionality and is\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"not"})," considered an accessibility best practice. Visually reordering content does not change the\ntab order or the order it is read in by a screen reader. Learn more about\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/CSS_Grid_Layout_and_Accessibility",target:"_blank",rel:"nofollow noopener noreferrer",children:"CSS Grid layout and accessibility"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Grid_GridLayoutInteractive__WEBPACK_IMPORTED_MODULE_7__.GridLayoutInteractive}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Let's look at another ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," example. Below, we have a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," container with two rows: one with\nseven elements and another with two elements. Each row is a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," that wraps a nested ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"}),".\nThis allows you to use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," to place a layout where needed. Here, we use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"gridRowStart"})," to\nplace the row with elements 3 through 7 before the row with elements 1 and 2."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_Grid_GridLayout__WEBPACK_IMPORTED_MODULE_8__.GridLayout}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"grid-vs-flex-vs-box",children:"Grid vs. Flex vs. Box"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Flex"})," are built on top of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Box"}),", so they have access to all ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"BoxProps"}),". Additionally,\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Flex"})," have their own specific style props that map to CSS Grid and Flexbox properties,\nrespectively. When using these components to build layouts, it is not a matter of choosing ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"or"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Flex"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.em,{children:"or"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Box"}),", but rather deciding how to\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://css-tricks.com/css-grid-replace-flexbox/",target:"_blank",rel:"nofollow noopener noreferrer",children:"use them together"}),". They are intended to be\ncomplementary not exclusionary. With that said, here are general guidelines for when to use which:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," for ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"two-dimensional"})," layouts (rows AND columns)."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Flex"})," for ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"one-dimensional"})," layouts (a row OR a column)."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Box"})," for generic containers that don't need CSS Flexbox or Grid."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"component-api",children:"Component API"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"grid",children:"Grid"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," is a container component for creating two-dimensional layouts with CSS Grid. It has special\nstyle props that map to CSS Grid style properties to provide a common, ergonomic API for building\nlayouts."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:'<Grid gridTemplateColumns="1fr 2fr 1fr" gridGap={space.s}>\n  <div>Implicit grid item 1</div>\n  <div>Implicit grid item 2</div>\n  <div>Implicit grid item 3</div>\n</Grid>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"props",children:"Props"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"})," exposes\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/features-style-props--background-example#grid",children:"grid container style props"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Box"}),"\nstyle props."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"griditem",children:"Grid.Item"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," is a subcomponent of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid"}),". It is a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Box"})," component under the hood and exposes\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/docs/features-style-props--background-example#grid",children:"grid item style props"})," that map to CSS\nGrid Item properties. This provides greater control over how child components render in your layout."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:'<Grid gridGap={space.s}>\n  <Grid.Item gridColumn="1 / span 2">First item</Grid.Item>\n  <Grid.Item gridRow="1 / span 2">Second item</Grid.Item>\n  <Grid.Item gridColumn="1 / span 2" gridRow="2">\n    Third item\n  </Grid.Item>\n</Grid>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"props-1",children:"Props"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Grid.Item"})," exposes ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"/docs/features-style-props--grid-item-example",children:"grid item style props"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Box"}),"\nstyle props."]})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/react/layout/stories/examples/Grid/Basic.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Basic=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_layout=__webpack_require__("./modules/react/layout/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledHeading=(0,function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")).default)(_layout.Box.as("h3"))({..._tokens.type.levels.body.large,..._tokens.type.variants.inverse,margin:0,fontWeight:_tokens.type.properties.fontWeights.bold}),borderPadProps={borderRadius:"m",padding:"s"},Header=({children,...props})=>React.createElement(_layout.Grid,_extends({as:"header",gridArea:"Header",depth:1},props,borderPadProps),children);Header.displayName="Header";const BodyContent=({children,...props})=>React.createElement(_layout.Grid,_extends({as:"main",gridArea:"BodyContent",depth:1},props,borderPadProps),children);BodyContent.displayName="BodyContent";const SideBar=({children,...props})=>React.createElement(_layout.Grid,_extends({as:"aside",gridArea:"SideBar",depth:1},props,borderPadProps),children);SideBar.displayName="SideBar";const Footer=({children,...props})=>React.createElement(_layout.Grid,_extends({as:"footer",gridArea:"Footer",depth:1},props,borderPadProps),children);Footer.displayName="Footer";const Basic=()=>{const parentCont={gridTemplateAreas:"'Header Header Header Header' 'SideBar BodyContent BodyContent BodyContent' 'Footer Footer Footer Footer'",gridGap:"s",gridTemplateColumns:"3fr 9fr",gridTemplateRows:"auto 300px auto"};return React.createElement(_layout.Grid,{as:"section",padding:"s"},React.createElement(_layout.Grid,parentCont,React.createElement(Header,{backgroundColor:"blueberry400"},React.createElement(StyledHeading,null,"Header")),React.createElement(SideBar,{backgroundColor:"blueberry300"},React.createElement(StyledHeading,null,"SideBar")),React.createElement(BodyContent,{backgroundColor:"plum300"},React.createElement(StyledHeading,null,"Body Content")),React.createElement(Footer,{backgroundColor:"berrySmoothie300"},React.createElement(StyledHeading,null,"Footer"))))};exports.Basic=Basic,Basic.displayName="Basic",Basic.__RAW__='import * as React from \'react\';\nimport {Grid, GridProps, Box} from \'@workday/canvas-kit-react/layout\';\nimport {type} from \'@workday/canvas-kit-react/tokens\';\nimport styled from \'@emotion/styled\';\n\n// temporary placeholder until type components are added to canvas-kit\n\nconst StyledHeading = styled(Box.as(\'h3\'))({\n  ...type.levels.body.large,\n  ...type.variants.inverse,\n  margin: 0,\n  fontWeight: type.properties.fontWeights.bold,\n});\n\nconst borderPadProps = {\n  borderRadius: \'m\',\n  padding: \'s\',\n};\n\nconst Header = ({children, ...props}: GridProps) => (\n  <Grid as="header" gridArea="Header" depth={1} {...props} {...borderPadProps}>\n    {children}\n  </Grid>\n);\n\nconst BodyContent = ({children, ...props}: GridProps) => (\n  <Grid as="main" gridArea="BodyContent" depth={1} {...props} {...borderPadProps}>\n    {children}\n  </Grid>\n);\n\nconst SideBar = ({children, ...props}: GridProps) => (\n  <Grid as="aside" gridArea="SideBar" depth={1} {...props} {...borderPadProps}>\n    {children}\n  </Grid>\n);\n\nconst Footer = ({children, ...props}: GridProps) => (\n  <Grid as="footer" gridArea="Footer" depth={1} {...props} {...borderPadProps}>\n    {children}\n  </Grid>\n);\n\nexport const Basic = () => {\n  const parentCont = {\n    gridTemplateAreas:\n      "\'Header Header Header Header\' \'SideBar BodyContent BodyContent BodyContent\' \'Footer Footer Footer Footer\'",\n    gridGap: \'s\',\n    gridTemplateColumns: \'3fr 9fr\',\n    gridTemplateRows: \'auto 300px auto\',\n  };\n  return (\n    <Grid as="section" padding="s">\n      <Grid {...parentCont}>\n        <Header backgroundColor="blueberry400">\n          <StyledHeading>Header</StyledHeading>\n        </Header>\n        <SideBar backgroundColor="blueberry300">\n          <StyledHeading>SideBar</StyledHeading>\n        </SideBar>\n        <BodyContent backgroundColor="plum300">\n          <StyledHeading>Body Content</StyledHeading>\n        </BodyContent>\n        <Footer backgroundColor="berrySmoothie300">\n          <StyledHeading>Footer</StyledHeading>\n        </Footer>\n      </Grid>\n    </Grid>\n  );\n};\n'},"./modules/react/layout/stories/examples/Grid/GridLayout.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GridLayout=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_layout=__webpack_require__("./modules/react/layout/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const Cell=props=>React.createElement(_layout.Grid,{alignContent:"center",padding:"xs",justifyContent:"center",backgroundColor:"soap500",color:"blackPepper500",borderRadius:"m"},props.children);Cell.displayName="Cell";const CellItem=props=>React.createElement(_layout.Grid,{alignContent:"center",gridAutoColumns:"max-content",height:"100%",gridAutoFlow:"column",padding:"xs",justifyContent:"center",backgroundColor:"peach300",color:"blackPepper500",borderRadius:"m"},props.children);CellItem.displayName="CellItem";const GridLayout=()=>React.createElement(_layout.Box,{padding:"xs"},React.createElement(_layout.Grid,{gridTemplateColumns:"repeat(auto-fit, minmax(300px, 1fr))",padding:"xxs",border:"5px solid #c860d1",gridGap:"xs"},React.createElement(_layout.Grid.Item,{gridRowStart:"2"},React.createElement(_layout.Grid,{gridTemplateColumns:"repeat(auto-fit, minmax(300px, 1fr))",gridGap:"xxs"},React.createElement(Cell,null,"1"),React.createElement(Cell,null,"2"))),React.createElement(_layout.Grid.Item,{gridRowStart:"1"},React.createElement(_layout.Grid,{gridTemplateColumns:"repeat(auto-fit, minmax(100px, 1fr))",gridGap:"xxs"},React.createElement(CellItem,null,"3"),React.createElement(CellItem,null,"4"),React.createElement(CellItem,null,"5"),React.createElement(CellItem,null,"6"),React.createElement(CellItem,null,"7")))));exports.GridLayout=GridLayout,GridLayout.displayName="GridLayout",GridLayout.__RAW__='import * as React from \'react\';\nimport {Box, Grid} from \'@workday/canvas-kit-react/layout\';\n\nconst Cell = (props: {children: React.ReactNode}) => {\n  return (\n    <Grid\n      alignContent="center"\n      padding="xs"\n      justifyContent="center"\n      backgroundColor="soap500"\n      color="blackPepper500"\n      borderRadius="m"\n    >\n      {props.children}\n    </Grid>\n  );\n};\n\nconst CellItem = (props: {children: React.ReactNode}) => {\n  return (\n    <Grid\n      alignContent="center"\n      gridAutoColumns="max-content"\n      height="100%"\n      gridAutoFlow="column"\n      padding="xs"\n      justifyContent="center"\n      backgroundColor="peach300"\n      color="blackPepper500"\n      borderRadius="m"\n    >\n      {props.children}\n    </Grid>\n  );\n};\n\nexport const GridLayout = () => {\n  return (\n    <Box padding="xs">\n      <Grid\n        gridTemplateColumns="repeat(auto-fit, minmax(300px, 1fr))"\n        padding="xxs"\n        border="5px solid #c860d1"\n        gridGap="xs"\n      >\n        <Grid.Item gridRowStart="2">\n          <Grid gridTemplateColumns="repeat(auto-fit, minmax(300px, 1fr))" gridGap="xxs">\n            <Cell>1</Cell>\n            <Cell>2</Cell>\n          </Grid>\n        </Grid.Item>\n        <Grid.Item gridRowStart="1">\n          <Grid gridTemplateColumns="repeat(auto-fit, minmax(100px, 1fr))" gridGap="xxs">\n            <CellItem>3</CellItem>\n            <CellItem>4</CellItem>\n            <CellItem>5</CellItem>\n            <CellItem>6</CellItem>\n            <CellItem>7</CellItem>\n          </Grid>\n        </Grid.Item>\n      </Grid>\n    </Box>\n  );\n};\n'},"./modules/react/layout/stories/examples/Grid/GridLayoutInteractive.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GridLayoutInteractive=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_layout=__webpack_require__("./modules/react/layout/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const Cell=props=>_react.default.createElement(_layout.Grid,{alignContent:"center",padding:"xs",justifyContent:"center",backgroundColor:"soap500",color:"blackPepper500",borderRadius:"m"},props.children);Cell.displayName="Cell";const CellItem=props=>_react.default.createElement(_layout.Grid,{alignContent:"center",gridAutoColumns:"max-content",gridGap:"xs",height:"100%",gridAutoFlow:"column",padding:"xs",justifyContent:"center",backgroundColor:"peach300",color:"frenchVanilla100",borderRadius:"m"},props.children);CellItem.displayName="CellItem";const GridLayoutInteractive=()=>{const[rowCount,setRowCount]=(0,_react.useState)(1),[colCount,setColCount]=(0,_react.useState)(1),Prev=val=>{const ref=(0,_react.useRef)();return(0,_react.useEffect)((()=>{ref.current=val}),[val]),ref.current},prevRowCount=Prev(rowCount),prevColCount=Prev(colCount),plusMinus=(curr,prev)=>{if(curr<=2&&(!prev||prev<=2))return!0},incDec=(curr,prev,func)=>{plusMinus(curr,prev)?func(curr+1):func(curr-1)};return _react.default.createElement(_layout.Grid,{gridAutoFlow:"row",padding:"xs"},_react.default.createElement(_layout.Grid,{gridTemplateColumns:"repeat(3, 1fr)",gridTemplateRows:"repeat(3, 1fr)",gridGap:"xs",padding:"xs",border:"5px solid #c860d1"},_react.default.createElement(_layout.Grid.Item,{gridRowStart:rowCount,gridColumnStart:colCount},_react.default.createElement(CellItem,null,_react.default.createElement(_button.PrimaryButton,{size:"extraSmall",icon:plusMinus(rowCount,prevRowCount)?_canvasSystemIconsWeb.arrowDownIcon:_canvasSystemIconsWeb.arrowUpIcon,onClick:()=>{incDec(rowCount,prevRowCount,setRowCount)}},"Row: ",rowCount),_react.default.createElement(_button.PrimaryButton,{size:"extraSmall",icon:plusMinus(colCount,prevColCount)?_canvasSystemIconsWeb.arrowRightIcon:_canvasSystemIconsWeb.arrowLeftIcon,onClick:()=>{incDec(colCount,prevColCount,setColCount)}},"Col: ",colCount))),_react.default.createElement(Cell,null,"2"),_react.default.createElement(Cell,null,"3"),_react.default.createElement(Cell,null,"4"),_react.default.createElement(Cell,null,"5"),_react.default.createElement(Cell,null,"6"),_react.default.createElement(Cell,null,"7"),_react.default.createElement(Cell,null,"8"),_react.default.createElement(Cell,null,"9")))};exports.GridLayoutInteractive=GridLayoutInteractive,GridLayoutInteractive.displayName="GridLayoutInteractive",GridLayoutInteractive.__RAW__='import React, {useState, useEffect, useRef} from \'react\';\nimport {Grid} from \'@workday/canvas-kit-react/layout\';\nimport {PrimaryButton} from \'@workday/canvas-kit-react/button\';\n// eslint-disable-next-line no-duplicate-imports\nimport {\n  arrowDownIcon,\n  arrowLeftIcon,\n  arrowRightIcon,\n  arrowUpIcon,\n} from \'@workday/canvas-system-icons-web\';\n\nconst Cell = (props: {children: React.ReactNode}) => {\n  return (\n    <Grid\n      alignContent="center"\n      padding="xs"\n      justifyContent="center"\n      backgroundColor="soap500"\n      color="blackPepper500"\n      borderRadius="m"\n    >\n      {props.children}\n    </Grid>\n  );\n};\n\nconst CellItem = (props: {children: React.ReactNode}) => {\n  return (\n    <Grid\n      alignContent="center"\n      gridAutoColumns="max-content"\n      gridGap="xs"\n      height="100%"\n      gridAutoFlow="column"\n      padding="xs"\n      justifyContent="center"\n      backgroundColor="peach300"\n      color="frenchVanilla100"\n      borderRadius="m"\n    >\n      {props.children}\n    </Grid>\n  );\n};\n\nexport const GridLayoutInteractive = () => {\n  const [rowCount, setRowCount] = useState(1);\n  const [colCount, setColCount] = useState(1);\n\n  const Prev = val => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = val;\n    }, [val]);\n    return ref.current;\n  };\n\n  const prevRowCount = Prev(rowCount);\n  const prevColCount = Prev(colCount);\n\n  const plusMinus = (curr, prev) => {\n    if (curr <= 2 && (!prev || prev <= 2)) {\n      return true;\n    }\n  };\n\n  const incDec = (curr, prev, func) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    plusMinus(curr, prev) ? func(curr + 1) : func(curr - 1);\n  };\n\n  return (\n    <Grid gridAutoFlow="row" padding="xs">\n      <Grid\n        gridTemplateColumns="repeat(3, 1fr)"\n        gridTemplateRows="repeat(3, 1fr)"\n        gridGap="xs"\n        padding="xs"\n        border="5px solid #c860d1"\n      >\n        <Grid.Item gridRowStart={rowCount} gridColumnStart={colCount}>\n          <CellItem>\n            <PrimaryButton\n              size="extraSmall"\n              icon={plusMinus(rowCount, prevRowCount) ? arrowDownIcon : arrowUpIcon}\n              onClick={() => {\n                incDec(rowCount, prevRowCount, setRowCount);\n              }}\n            >\n              Row: {rowCount}\n            </PrimaryButton>\n            <PrimaryButton\n              size="extraSmall"\n              icon={plusMinus(colCount, prevColCount) ? arrowRightIcon : arrowLeftIcon}\n              onClick={() => {\n                incDec(colCount, prevColCount, setColCount);\n              }}\n            >\n              Col: {colCount}\n            </PrimaryButton>\n          </CellItem>\n        </Grid.Item>\n        <Cell>2</Cell>\n        <Cell>3</Cell>\n        <Cell>4</Cell>\n        <Cell>5</Cell>\n        <Cell>6</Cell>\n        <Cell>7</Cell>\n        <Cell>8</Cell>\n        <Cell>9</Cell>\n      </Grid>\n    </Grid>\n  );\n};\n'}}]);