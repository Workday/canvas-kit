"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[4497],{"./modules/react/avatar/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});var _Avatar=__webpack_require__("./modules/react/avatar/lib/Avatar.tsx");Object.keys(_Avatar).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_Avatar[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _Avatar[key]}}))}));const __docs=[];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/avatar/lib/Avatar.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Avatar=exports.avatarStencil=exports.AvatarVariant=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_icon=__webpack_require__("./modules/react/icon/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}let AvatarVariant;exports.AvatarVariant=AvatarVariant,function(AvatarVariant){AvatarVariant[AvatarVariant.Light=0]="Light",AvatarVariant[AvatarVariant.Dark=1]="Dark"}(AvatarVariant||(exports.AvatarVariant=AvatarVariant={}));const avatarStencil=(0,_canvasKitStyling.createStencil)({vars:{size:""},base:{name:"gnuv5e",styles:'box-sizing:border-box;background:var(--cnvs-sys-color-bg-caution-default);position:relative;display:flex;align-items:center;justify-content:center;padding:0;border:0;overflow:hidden;cursor:default;border-radius:var(--cnvs-sys-shape-round);width:var(--size-avatar-69cee0);height:var(--size-avatar-69cee0);&:focus-visible:not([disabled]), &.focus:not([disabled]){outline:none;box-shadow:0 0 0 2px var(--cnvs-base-palette-french-vanilla-100, rgba(255,255,255,1)), 0 0 0 4px var(--cnvs-brand-common-focus-outline, rgba(8,117,225,1));}:is(button){cursor:pointer;}& > [data-part="avatar-icon"]{transition:opacity 150ms linear;display:flex;align-items:center;justify-content:center;--size-svg-a30d66:calc(var(--size-avatar-69cee0) * 0.625);}& > [data-part="avatar-image"]{position:absolute;width:100%;height:100%;border-radius:999px;transition:opacity 150ms linear;}'},modifiers:{variant:{light:{name:"gnuv5f",styles:'background-color:var(--cnvs-sys-color-bg-alt-default);& [data-part="avatar-icon"]{--color-system-icon-212f69:var(--cnvs-sys-color-fg-default);}'},dark:{name:"gnuv5g",styles:'background-color:var(--cnvs-sys-color-bg-primary-default);& [data-part="avatar-icon"]{--color-system-icon-212f69:var(--cnvs-sys-color-fg-inverse);}'}},size:{extraSmall:{name:"gnuv5h",styles:'width:var(--cnvs-sys-space-x4);height:var(--cnvs-sys-space-x4);& [data-part="avatar-icon"]{--size-svg-a30d66:calc(var(--cnvs-sys-space-x4) * 0.625);}'},small:{name:"gnuv5i",styles:'width:var(--cnvs-sys-space-x6);height:var(--cnvs-sys-space-x6);& [data-part="avatar-icon"]{--size-svg-a30d66:calc(var(--cnvs-sys-space-x6) * 0.625);}'},medium:{name:"gnuv5j",styles:'width:var(--cnvs-sys-space-x8);height:var(--cnvs-sys-space-x8);& [data-part="avatar-icon"]{--size-svg-a30d66:calc(var(--cnvs-sys-space-x8) * 0.625);}'},large:{name:"gnuv5k",styles:'width:var(--cnvs-sys-space-x10);height:var(--cnvs-sys-space-x10);& [data-part="avatar-icon"]{--size-svg-a30d66:calc(var(--cnvs-sys-space-x10) * 0.625);}'},extraLarge:{name:"gnuv5l",styles:'width:var(--cnvs-sys-space-x16);height:var(--cnvs-sys-space-x16);& [data-part="avatar-icon"]{--size-svg-a30d66:calc(var(--cnvs-sys-space-x16) * 0.625);}'},extraExtraLarge:{name:"gnuv5m",styles:'width:calc(var(--cnvs-sys-space-x10) * 3);height:calc(var(--cnvs-sys-space-x10) * 3);& [data-part="avatar-icon"]{--size-svg-a30d66:calc(calc(var(--cnvs-sys-space-x10) * 3) * 0.625);}'}},objectFit:{contain:{name:"gnuv5n",styles:'& [data-part="avatar-image"]{object-fit:contain;}'},fill:{name:"gnuv5o",styles:'& [data-part="avatar-image"]{object-fit:fill;}'},cover:{name:"gnuv5p",styles:'& [data-part="avatar-image"]{object-fit:cover;}'},"scale-down":{name:"gnuv5q",styles:'& [data-part="avatar-image"]{object-fit:scale-down;}'},none:{name:"gnuv5r",styles:'& [data-part="avatar-image"]{object-fit:none;}'},"-moz-initial":{name:"gnuv5s",styles:'& [data-part="avatar-image"]{object-fit:-moz-initial;}'},initial:{name:"gnuv5t",styles:'& [data-part="avatar-image"]{object-fit:initial;}'},inherit:{name:"gnuv5u",styles:'& [data-part="avatar-image"]{object-fit:inherit;}'},revert:{name:"gnuv5v",styles:'& [data-part="avatar-image"]{object-fit:revert;}'},unset:{name:"gnuv5w",styles:'& [data-part="avatar-image"]{object-fit:unset;}'}},isImageLoaded:{true:{name:"gnuv5x",styles:'& [data-part="avatar-icon"]{opacity:0;}& [data-part="avatar-image"]{opacity:1;}'},false:{name:"gnuv5y",styles:'& [data-part="avatar-icon"]{opacity:1;}& [data-part="avatar-image"]{opacity:0;}'}}},defaultModifiers:{variant:"light",size:"medium",isImageLoaded:"false",objectFit:"contain"}},"avatar-69cee0");exports.avatarStencil=avatarStencil;const Avatar=(0,_common.createComponent)("button")({displayName:"Avatar",Component:({variant,size,altText="Avatar",url,objectFit,...elemProps},ref,Element)=>{const[imageLoaded,setImageLoaded]=(0,_react.useState)(!1);return _react.default.useLayoutEffect((()=>{setImageLoaded(!1)}),[url]),_react.default.createElement(Element,_extends({ref,"aria-label":altText,role:"button"===Element?"button":"img"},(0,_layout.mergeStyles)(elemProps,[avatarStencil({variant:variant===AvatarVariant.Light?"light":variant===AvatarVariant.Dark?"dark":variant,size:"number"==typeof size?(0,_canvasKitStyling.px2rem)(size):size,objectFit,isImageLoaded:imageLoaded})])),_react.default.createElement(_icon.SystemIcon,{icon:_canvasSystemIconsWeb.userIcon,"data-part":"avatar-icon"}),url&&_react.default.createElement("img",{"data-part":"avatar-image",src:url,alt:altText,onLoad:()=>{imageLoaded||setImageLoaded(!0)}}))},subComponents:{Variant:AvatarVariant,Size:_icon.SystemIconCircleSize}});exports.Avatar=Avatar;const __docs=[{name:"AvatarVariant",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx",description:"",declarations:[{name:"AvatarVariant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{deprecated:"`AvatarVariant` is deprecated and will be removed in a future major version. Update your types and values to use the string literal of either `light` or `dark`."},type:{kind:"object",typeParameters:[],properties:[{kind:"property",name:"Light",type:{kind:"number",value:0}},{kind:"property",name:"Dark",type:{kind:"number",value:1}}],callSignatures:[]}},{name:"AvatarProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx",description:"",declarations:[{name:"AvatarProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"variant",required:!1,type:{kind:"union",value:[{kind:"string",value:"light"},{kind:"string",value:"dark"},{kind:"symbol",name:"AvatarVariant",value:"AvatarVariant"}]},description:"The variant of the avatar. Use `light` on dark backgrounds and `dark` on light backgrounds.",declarations:[{name:"variant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:'"light"'}},{kind:"property",name:"size",required:!1,type:{kind:"union",value:[{kind:"string",value:"extraSmall"},{kind:"string",value:"small"},{kind:"string",value:"medium"},{kind:"string",value:"large"},{kind:"string",value:"extraLarge"},{kind:"string",value:"extraExtraLarge"},{kind:"parenthesis",value:{kind:"intersection",value:[{kind:"primitive",value:"string"},{kind:"object",properties:[]}]}},{kind:"symbol",name:"SystemIconCircleSize",value:"SystemIconCircleSize"},{kind:"primitive",value:"number"}]},description:"The size of the Avatar.\n- `extraExtraLarge`: 7.5rem x 7.5rem (120px  x 120px)\n- `extraLarge`: 4.5rem x 4.5rem (64px x 64px)\n- `large`: 2.5rem x 2.5rem (40px x 40px)\n- `medium`: 2rem x 2rem (32px x 32px)\n- `small`: 1.5rem x 1.5rem (24px x 24px)\n- `small`: 1rem x 1rem (16px x 16px)",declarations:[{name:"size",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:'"medium"'}},{kind:"property",name:"altText",required:!1,type:{kind:"primitive",value:"string"},description:"The alt text of the Avatar image. This prop is also used for the aria-label.",declarations:[{name:"altText",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:"Avatar"}},{kind:"property",name:"url",required:!1,type:{kind:"primitive",value:"string"},description:"The URL of the user's photo. For best fit, use square images.",declarations:[{name:"url",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{}},{kind:"property",name:"objectFit",required:!1,type:{kind:"external",name:"Property.ObjectFit",url:"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"},description:"An objectFit property that can customize how to resize your image to fit its container.",declarations:[{name:"objectFit",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:'"contain"'}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}},{name:"avatarStencil",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx",description:"",declarations:[{name:"avatarStencil",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{},type:{kind:"function",parameters:[{kind:"parameter",name:"options",type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"primitive",value:"never"}]},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",value:"ModifierValuesStencil<M, V>"},{kind:"generic",name:"VariableValuesStencil"}]},falseType:{kind:"conditional",check:{kind:"generic",name:"E"},extends:{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, V, E, ID>"},trueType:{kind:"intersection",value:[{kind:"symbol",name:"ModifierValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"ME"},{kind:"generic",name:"M"}]}],value:"ModifierValuesStencil<M, V>"},{kind:"symbol",name:"VariableValuesStencil",typeParameters:[{kind:"intersection",value:[{kind:"generic",name:"VE"},{kind:"generic",name:"V"}]}],value:"VariableValuesStencil<V>"}]},falseType:{kind:"primitive",value:"never"}}},required:!1,rest:!1,description:"",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],members:[{kind:"property",name:"vars",required:!0,type:{kind:"generic",name:"StencilDefaultVars"},description:"",declarations:[{name:"vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"base",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"base",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"modifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"infer",value:{kind:"typeParameter",name:"VE",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilModifierReturn",value:"StencilModifierReturn<ME & M, VE & V>"},falseType:{kind:"symbol",name:"StencilModifierReturn",typeParameters:[{kind:"generic",name:"M"},{kind:"generic",name:"V"}],value:"StencilModifierReturn<M, V>"}},description:"",declarations:[{name:"modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"defaultModifiers",required:!0,type:{kind:"conditional",check:{kind:"tuple",value:[{kind:"generic",name:"E"}]},extends:{kind:"tuple",value:[{kind:"symbol",name:"BaseStencil",typeParameters:[{kind:"infer",value:{kind:"typeParameter",name:"ME",required:!0}},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"},{kind:"primitive",value:"any"}],value:"BaseStencil<M, V, E, ID>"}]},trueType:{kind:"symbol",name:"StencilDefaultModifierReturn",value:"StencilDefaultModifierReturn<ME & M>"},falseType:{kind:"symbol",name:"StencilDefaultModifierReturn",typeParameters:[{kind:"generic",name:"M"}],value:"StencilDefaultModifierReturn<M>"}},description:"",declarations:[{name:"defaultModifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__extends",required:!1,type:{kind:"generic",name:"E"},description:"",declarations:[{name:"__extends",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__vars",required:!0,type:{kind:"generic",name:"V"},description:"",declarations:[{name:"__vars",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__modifiers",required:!0,type:{kind:"generic",name:"M"},description:"",declarations:[{name:"__modifiers",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"__id",required:!0,type:{kind:"generic",name:"ID"},description:"",declarations:[{name:"__id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}],returnType:{kind:"object",properties:[{kind:"property",name:"className",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"className",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"style",required:!1,type:{kind:"external",name:"Record",url:"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type",typeParameters:[{kind:"primitive",value:"string"},{kind:"primitive",value:"string"}]},description:"",declarations:[{name:"style",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}}},{name:"Avatar",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx",description:"",declarations:[{name:"Avatar",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Avatar",props:[{kind:"property",name:"variant",required:!1,type:{kind:"union",value:[{kind:"string",value:"light"},{kind:"string",value:"dark"},{kind:"symbol",name:"AvatarVariant",value:"AvatarVariant"}]},description:"The variant of the avatar. Use `light` on dark backgrounds and `dark` on light backgrounds.",declarations:[{name:"variant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:'"light"'},defaultValue:{kind:"string",value:"light"}},{kind:"property",name:"size",required:!1,type:{kind:"union",value:[{kind:"string",value:"extraSmall"},{kind:"string",value:"small"},{kind:"string",value:"medium"},{kind:"string",value:"large"},{kind:"string",value:"extraLarge"},{kind:"string",value:"extraExtraLarge"},{kind:"parenthesis",value:{kind:"intersection",value:[{kind:"primitive",value:"string"},{kind:"object",properties:[]}]}},{kind:"symbol",name:"SystemIconCircleSize",value:"SystemIconCircleSize"},{kind:"primitive",value:"number"}]},description:"The size of the Avatar.\n- `extraExtraLarge`: 7.5rem x 7.5rem (120px  x 120px)\n- `extraLarge`: 4.5rem x 4.5rem (64px x 64px)\n- `large`: 2.5rem x 2.5rem (40px x 40px)\n- `medium`: 2rem x 2rem (32px x 32px)\n- `small`: 1.5rem x 1.5rem (24px x 24px)\n- `small`: 1rem x 1rem (16px x 16px)",declarations:[{name:"size",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:'"medium"'},defaultValue:{kind:"string",value:"medium"}},{kind:"property",name:"altText",required:!1,type:{kind:"primitive",value:"string"},description:"The alt text of the Avatar image. This prop is also used for the aria-label.",declarations:[{name:"altText",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:"Avatar"},defaultValue:{kind:"string",value:"Avatar"}},{kind:"property",name:"url",required:!1,type:{kind:"primitive",value:"string"},description:"The URL of the user's photo. For best fit, use square images.",declarations:[{name:"url",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{}},{kind:"property",name:"objectFit",required:!1,type:{kind:"external",name:"Property.ObjectFit",url:"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"},description:"An objectFit property that can customize how to resize your image to fit its container.",declarations:[{name:"objectFit",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{default:'"contain"'},defaultValue:{kind:"string",value:"contain"}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"button",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"button",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"}}]}}],baseElement:{kind:"external",name:"button",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"},subComponents:[{name:"Variant",symbol:"AvatarVariant",description:"",declarations:[{name:"Variant",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"}],tags:{deprecated:"`Avatar.Variant` is deprecated and will be removed in a future major version. Use the string literal of `light` or `dark`."}},{name:"Size",symbol:"SystemIconCircleSize",description:"",declarations:[{name:"Size",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/avatar/lib/Avatar.tsx"},{name:"SystemIconCircleSize",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/icon/lib/SystemIconCircle.tsx"}],tags:{deprecated:"`Avatar.Size` is deprecated and will be removed in a future major version. Use the string literal values for size: 'extraSmall' | 'small | 'medium' | 'large' | 'extraLarge | 'extraExtraLarge' | (string & {})"}}]}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)}}]);