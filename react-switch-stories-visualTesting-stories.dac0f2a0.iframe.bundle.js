"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1458],{"./modules/react/switch/stories/visualTesting.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.SwitchThemedStates=exports.SwitchStates=void 0;(function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n})(__webpack_require__("./node_modules/react/index.js"));var _testing=__webpack_require__("./modules/react/testing/index.ts"),_storybook=__webpack_require__("./utils/storybook/index.ts"),_switch=__webpack_require__("./modules/react/switch/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}exports.default={title:"Testing/Inputs/Switch",component:_switch.Switch,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import * as React from 'react';\\nimport {\\n  ComponentStatesTable,\\n  permutateProps,\\n  StaticStates,\\n} from '@workday/canvas-kit-react/testing';\\nimport {customColorTheme} from '../../../../utils/storybook';\\n\\nimport {Switch} from '@workday/canvas-kit-react/switch';\\n\\nexport default {\\n  title: 'Testing/Inputs/Switch',\\n  component: Switch,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SwitchStates = () => (\\n  <StaticStates>\\n    <ComponentStatesTable\\n      rowProps={permutateProps(\\n        {\\n          checked: [\\n            {value: true, label: 'Checked'},\\n            {value: false, label: 'Unchecked'},\\n          ],\\n          error: [\\n            {value: undefined, label: ''},\\n            {value: Switch.ErrorType.Alert, label: 'Alert'},\\n            {value: Switch.ErrorType.Error, label: 'Error'},\\n          ],\\n        },\\n        props => {\\n          if (props.indeterminate && !props.checked) {\\n            return false;\\n          }\\n          return true;\\n        }\\n      )}\\n      columnProps={permutateProps(\\n        {\\n          className: [\\n            {label: 'Default', value: ''},\\n            {label: 'Hover', value: 'hover'},\\n            {label: 'Focus', value: 'focus'},\\n            {label: 'Focus Hover', value: 'focus hover'},\\n            {label: 'Active', value: 'active'},\\n            {label: 'Active Hover', value: 'active hover'},\\n          ],\\n          disabled: [\\n            {label: '', value: false},\\n            {label: 'Disabled', value: true},\\n          ],\\n        },\\n        props => {\\n          if (props.disabled && !['', 'hover'].includes(props.className)) {\\n            return false;\\n          }\\n          return true;\\n        }\\n      )}\\n    >\\n      {props => (\\n        <Switch\\n          {...props}\\n          onChange={() => {}} // eslint-disable-line no-empty-function\\n        />\\n      )}\\n    </ComponentStatesTable>\\n  </StaticStates>\\n);\\n\\nexport const SwitchThemedStates = () => <SwitchStates />;\\nSwitchThemedStates.parameters = {\\n  canvasProviderDecorator: {\\n    theme: customColorTheme,\\n  },\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"SwitchStates\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 21\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 74\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 21\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 74\n    }\n  },\n  \"SwitchThemedStates\": {\n    \"startLoc\": {\n      \"col\": 34,\n      \"line\": 76\n    },\n    \"endLoc\": {\n      \"col\": 56,\n      \"line\": 76\n    },\n    \"startBody\": {\n      \"col\": 34,\n      \"line\": 76\n    },\n    \"endBody\": {\n      \"col\": 56,\n      \"line\": 76\n    }\n  }\n};\n    \nimport * as React from 'react';\nimport {\n  ComponentStatesTable,\n  permutateProps,\n  StaticStates,\n} from '@workday/canvas-kit-react/testing';\nimport {customColorTheme} from '../../../../utils/storybook';\n\nimport {Switch} from '@workday/canvas-kit-react/switch';\n\nexport default {\n  title: 'Testing/Inputs/Switch',\n  component: Switch,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import * as React from 'react';\\nimport {\\n  ComponentStatesTable,\\n  permutateProps,\\n  StaticStates,\\n} from '@workday/canvas-kit-react/testing';\\nimport {customColorTheme} from '../../../../utils/storybook';\\n\\nimport {Switch} from '@workday/canvas-kit-react/switch';\\n\\nexport default {\\n  title: 'Testing/Inputs/Switch',\\n  component: Switch,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SwitchStates = () => (\\n  <StaticStates>\\n    <ComponentStatesTable\\n      rowProps={permutateProps(\\n        {\\n          checked: [\\n            {value: true, label: 'Checked'},\\n            {value: false, label: 'Unchecked'},\\n          ],\\n          error: [\\n            {value: undefined, label: ''},\\n            {value: Switch.ErrorType.Alert, label: 'Alert'},\\n            {value: Switch.ErrorType.Error, label: 'Error'},\\n          ],\\n        },\\n        props => {\\n          if (props.indeterminate && !props.checked) {\\n            return false;\\n          }\\n          return true;\\n        }\\n      )}\\n      columnProps={permutateProps(\\n        {\\n          className: [\\n            {label: 'Default', value: ''},\\n            {label: 'Hover', value: 'hover'},\\n            {label: 'Focus', value: 'focus'},\\n            {label: 'Focus Hover', value: 'focus hover'},\\n            {label: 'Active', value: 'active'},\\n            {label: 'Active Hover', value: 'active hover'},\\n          ],\\n          disabled: [\\n            {label: '', value: false},\\n            {label: 'Disabled', value: true},\\n          ],\\n        },\\n        props => {\\n          if (props.disabled && !['', 'hover'].includes(props.className)) {\\n            return false;\\n          }\\n          return true;\\n        }\\n      )}\\n    >\\n      {props => (\\n        <Switch\\n          {...props}\\n          onChange={() => {}} \\n        />\\n      )}\\n    </ComponentStatesTable>\\n  </StaticStates>\\n);\\n\\nexport const SwitchThemedStates = () => <SwitchStates />;\\nSwitchThemedStates.parameters = {\\n  canvasProviderDecorator: {\\n    theme: customColorTheme,\\n  },\\n};\\n\",\n    \"locationsMap\": {\n      \"switch-states\": {\n        \"startLoc\": {\n          \"col\": 28,\n          \"line\": 21\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 74\n        },\n        \"startBody\": {\n          \"col\": 28,\n          \"line\": 21\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 74\n        }\n      },\n      \"switch-themed-states\": {\n        \"startLoc\": {\n          \"col\": 34,\n          \"line\": 76\n        },\n        \"endLoc\": {\n          \"col\": 56,\n          \"line\": 76\n        },\n        \"startBody\": {\n          \"col\": 34,\n          \"line\": 76\n        },\n        \"endBody\": {\n          \"col\": 56,\n          \"line\": 76\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SwitchStates = () => (\n  <StaticStates>\n    <ComponentStatesTable\n      rowProps={permutateProps(\n        {\n          checked: [\n            {value: true, label: 'Checked'},\n            {value: false, label: 'Unchecked'},\n          ],\n          error: [\n            {value: undefined, label: ''},\n            {value: Switch.ErrorType.Alert, label: 'Alert'},\n            {value: Switch.ErrorType.Error, label: 'Error'},\n          ],\n        },\n        props => {\n          if (props.indeterminate && !props.checked) {\n            return false;\n          }\n          return true;\n        }\n      )}\n      columnProps={permutateProps(\n        {\n          className: [\n            {label: 'Default', value: ''},\n            {label: 'Hover', value: 'hover'},\n            {label: 'Focus', value: 'focus'},\n            {label: 'Focus Hover', value: 'focus hover'},\n            {label: 'Active', value: 'active'},\n            {label: 'Active Hover', value: 'active hover'},\n          ],\n          disabled: [\n            {label: '', value: false},\n            {label: 'Disabled', value: true},\n          ],\n        },\n        props => {\n          if (props.disabled && !['', 'hover'].includes(props.className)) {\n            return false;\n          }\n          return true;\n        }\n      )}\n    >\n      {props => (\n        <Switch\n          {...props}\n          onChange={() => {}} \n        />\n      )}\n    </ComponentStatesTable>\n  </StaticStates>\n);;\n\nexport const SwitchThemedStates = () => <SwitchStates />;\nSwitchThemedStates.parameters = {\n  canvasProviderDecorator: {\n    theme: customColorTheme,\n  },\n};\n",locationsMap:{"switch-states":{startLoc:{col:28,line:108},endLoc:{col:1,line:161},startBody:{col:28,line:108},endBody:{col:1,line:161}},"switch-themed-states":{startLoc:{col:34,line:163},endLoc:{col:56,line:163},startBody:{col:34,line:163},endBody:{col:56,line:163}}}},storySource:{source:"import * as React from 'react';\nimport {\n  ComponentStatesTable,\n  permutateProps,\n  StaticStates,\n} from '@workday/canvas-kit-react/testing';\nimport {customColorTheme} from '../../../../utils/storybook';\n\nimport {Switch} from '@workday/canvas-kit-react/switch';\n\nexport default {\n  title: 'Testing/Inputs/Switch',\n  component: Switch,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SwitchStates = () => (\n  <StaticStates>\n    <ComponentStatesTable\n      rowProps={permutateProps(\n        {\n          checked: [\n            {value: true, label: 'Checked'},\n            {value: false, label: 'Unchecked'},\n          ],\n          error: [\n            {value: undefined, label: ''},\n            {value: Switch.ErrorType.Alert, label: 'Alert'},\n            {value: Switch.ErrorType.Error, label: 'Error'},\n          ],\n        },\n        props => {\n          if (props.indeterminate && !props.checked) {\n            return false;\n          }\n          return true;\n        }\n      )}\n      columnProps={permutateProps(\n        {\n          className: [\n            {label: 'Default', value: ''},\n            {label: 'Hover', value: 'hover'},\n            {label: 'Focus', value: 'focus'},\n            {label: 'Focus Hover', value: 'focus hover'},\n            {label: 'Active', value: 'active'},\n            {label: 'Active Hover', value: 'active hover'},\n          ],\n          disabled: [\n            {label: '', value: false},\n            {label: 'Disabled', value: true},\n          ],\n        },\n        props => {\n          if (props.disabled && !['', 'hover'].includes(props.className)) {\n            return false;\n          }\n          return true;\n        }\n      )}\n    >\n      {props => (\n        <Switch\n          {...props}\n          onChange={() => {}} \n        />\n      )}\n    </ComponentStatesTable>\n  </StaticStates>\n);\n\nexport const SwitchThemedStates = () => <SwitchStates />;\nSwitchThemedStates.parameters = {\n  canvasProviderDecorator: {\n    theme: customColorTheme,\n  },\n};\n",locationsMap:{"switch-states":{startLoc:{col:28,line:21},endLoc:{col:1,line:74},startBody:{col:28,line:21},endBody:{col:1,line:74}},"switch-themed-states":{startLoc:{col:34,line:76},endLoc:{col:56,line:76},startBody:{col:34,line:76},endBody:{col:56,line:76}}}},chromatic:{disable:!1}}};const SwitchStates=()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:(0,_testing.permutateProps)({checked:[{value:!0,label:"Checked"},{value:!1,label:"Unchecked"}],error:[{value:void 0,label:""},{value:_switch.Switch.ErrorType.Alert,label:"Alert"},{value:_switch.Switch.ErrorType.Error,label:"Error"}]},(props=>!(props.indeterminate&&!props.checked))),columnProps:(0,_testing.permutateProps)({className:[{label:"Default",value:""},{label:"Hover",value:"hover"},{label:"Focus",value:"focus"},{label:"Focus Hover",value:"focus hover"},{label:"Active",value:"active"},{label:"Active Hover",value:"active hover"}],disabled:[{label:"",value:!1},{label:"Disabled",value:!0}]},(props=>!(props.disabled&&!["","hover"].includes(props.className)))),children:props=>(0,_jsxRuntime.jsx)(_switch.Switch,{...props,onChange:()=>{}})})});exports.SwitchStates=SwitchStates,SwitchStates.displayName="SwitchStates";const SwitchThemedStates=()=>(0,_jsxRuntime.jsx)(SwitchStates,{});exports.SwitchThemedStates=SwitchThemedStates,SwitchThemedStates.displayName="SwitchThemedStates",SwitchThemedStates.parameters={canvasProviderDecorator:{theme:_storybook.customColorTheme}},module.exports.__namedExportsOrder=["SwitchThemedStates","SwitchStates"]},"./modules/react/switch/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});var _Switch=__webpack_require__("./modules/react/switch/lib/Switch.tsx");Object.keys(_Switch).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_Switch[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _Switch[key]}}))}));const __docs=[];window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/switch/lib/Switch.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Switch=void 0;(function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n})(__webpack_require__("./node_modules/react/index.js"));var _common=__webpack_require__("./modules/react/common/index.ts"),_canvasKitStyling=__webpack_require__("./modules/styling/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const switchContainerStencil=(0,_canvasKitStyling.createStencil)({base:{name:"g3mnx",styles:"box-sizing:border-box;position:relative;height:var(--cnvs-sys-space-x6);width:var(--cnvs-sys-space-x8);"}},"switch-container-debbb0"),SwitchContainer=(0,_common.createComponent)("div")({displayName:"SwitchContainer",Component:({children,...elemProps},ref,Element)=>(0,_jsxRuntime.jsx)(Element,{ref,...(0,_layout.mergeStyles)(elemProps,switchContainerStencil()),children})}),switchInputStencil=(0,_canvasKitStyling.createStencil)({base:{name:"yhdzd",styles:"box-sizing:border-box;display:flex;position:absolute;height:var(--cnvs-sys-space-x6);width:var(--cnvs-sys-space-x8);margin:var(--cnvs-sys-space-zero);margin-left:var(--cnvs-sys-space-x1);border-radius:var(--cnvs-sys-shape-round);opacity:0;cursor:pointer;&:checked, &.checked{& ~ div:first-of-type{background-color:var(--cnvs-brand-primary-base);}&:disabled, &.disabled{& ~ div:first-of-type{opacity:var(--cnvs-sys-opacity-disabled);}}}&:disabled, &.disabled{cursor:not-allowed;& ~ div:first-of-type{opacity:var(--cnvs-sys-opacity-disabled);}}&:focus-visible, &:focus, &.focus{outline:none;& ~ div:first-of-type{box-shadow:0 0 0 2px var(--cnvs-base-palette-french-vanilla-100, rgba(255,255,255,1)), 0 0 0 4px var(--cnvs-brand-common-focus-outline, rgba(8,117,225,1));}}"},modifiers:{error:{error:{name:"beod4",styles:"& ~ div:first-of-type{box-shadow:\n              0 0 0 0.125rem var(--cnvs-sys-color-border-inverse),\n              0 0 0 var(--cnvs-sys-space-x1) var(--cnvs-brand-error-base),\n              0 0 0 0.3125rem transparent;}"},alert:{name:"26v4lm",styles:"& ~ div:first-of-type{box-shadow:\n          0 0 0 0.125rem var(--cnvs-sys-color-border-inverse),\n          0 0 0 var(--cnvs-sys-space-x1) var(--cnvs-brand-alert-base),\n          0 0 0 0.3125rem var(--cnvs-brand-alert-darkest);}"}}}},"switch-input-7f69d7"),SwitchInput=(0,_common.createComponent)("input")({displayName:"SwitchInput",Component:({error,...elemProps},ref,Element)=>(0,_jsxRuntime.jsx)(Element,{ref,...(0,_layout.mergeStyles)(elemProps,switchInputStencil({error}))})}),switchBackgroundStencil=(0,_canvasKitStyling.createStencil)({base:{name:"z14f4",styles:"box-sizing:border-box;position:absolute;display:flex;align-items:center;pointer-events:none;margin-top:var(--cnvs-sys-space-x1);width:var(--cnvs-sys-space-x8);height:var(--cnvs-sys-space-x4);border-radius:var(--cnvs-sys-shape-round);padding:var(--cnvs-sys-space-zero) 0.125rem;transition:background-color 200ms ease;background-color:var(--cnvs-sys-color-bg-muted-soft);"}},"switch-background-0e2846"),SwitchBackground=(0,_common.createComponent)("div")({displayName:"SwitchBackground",Component:({children,...elemProps},ref,Element)=>(0,_jsxRuntime.jsx)(Element,{ref,...(0,_layout.mergeStyles)(elemProps,switchBackgroundStencil()),children})}),switchCircleStencil=(0,_canvasKitStyling.createStencil)({base:{name:"415mxn",styles:"box-sizing:border-box;width:var(--cnvs-sys-space-x3);height:var(--cnvs-sys-space-x3);border-radius:var(--cnvs-sys-shape-round);box-shadow:var(--cnvs-sys-depth-1);transition:transform 150ms ease;pointer-events:none;background-color:var(--cnvs-brand-primary-accent);transform:translateX(var(--cnvs-sys-space-zero));"},modifiers:{checked:{true:{name:"2dzxin",styles:"transform:translateX(var(--cnvs-sys-space-x4));:dir(rtl){transform:translateX(calc(var(--cnvs-sys-space-x4) * -1));}"}}}},"switch-circle-780885"),SwitchCircle=(0,_common.createComponent)("div")({displayName:"SwitchCircle",Component:({checked,...elemProps},ref,Element)=>(0,_jsxRuntime.jsx)(Element,{ref,...(0,_layout.mergeStyles)(elemProps,switchCircleStencil({checked}))})}),__docs=(exports.Switch=(0,_common.createComponent)("input")({displayName:"Switch",Component:({checked=!1,id,disabled=!1,onChange,value,...elemProps},ref,Element)=>{const inputId=(0,_common.useUniqueId)(id);return(0,_jsxRuntime.jsxs)(SwitchContainer,{children:[(0,_jsxRuntime.jsx)(SwitchInput,{as:Element,checked,disabled,id:inputId,ref,onChange,role:"switch",type:"checkbox",value,...elemProps}),(0,_jsxRuntime.jsx)(SwitchBackground,{children:(0,_jsxRuntime.jsx)(SwitchCircle,{checked})})]})},subComponents:{ErrorType:_common.ErrorType}}),[{name:"SwitchProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx",description:"",declarations:[{name:"SwitchProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"checked",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the Switch to the on state.",declarations:[{name:"checked",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{default:"false"}},{kind:"property",name:"disabled",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the Switch to the disabled state.",declarations:[{name:"disabled",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{default:"false"}},{kind:"property",name:"id",required:!1,type:{kind:"primitive",value:"string"},description:"The HTML `id` of the underlying checkbox input element.",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{default:"A uniquely generated id"}},{kind:"property",name:"onChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"e",type:{kind:"symbol",name:"React.ChangeEvent",typeParameters:[{kind:"symbol",name:"HTMLInputElement",value:"HTMLInputElement"}],value:"ChangeEvent<T>"},required:!0,rest:!1,description:"",declarations:[{name:"e",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the Switch state changes.",declarations:[{name:"onChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the Switch.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Switch (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}}]}},{name:"Switch",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx",description:"",declarations:[{name:"Switch",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Switch",props:[{kind:"property",name:"checked",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the Switch to the on state.",declarations:[{name:"checked",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{default:"false"},defaultValue:{kind:"boolean",value:!1}},{kind:"property",name:"disabled",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the Switch to the disabled state.",declarations:[{name:"disabled",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{default:"false"},defaultValue:{kind:"boolean",value:!1}},{kind:"property",name:"id",required:!1,type:{kind:"primitive",value:"string"},description:"The HTML `id` of the underlying checkbox input element.",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{default:"A uniquely generated id"},defaultValue:{kind:"symbol",name:"A uniquely generated id",value:"A uniquely generated id"}},{kind:"property",name:"onChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"e",type:{kind:"symbol",name:"React.ChangeEvent",typeParameters:[{kind:"symbol",name:"HTMLInputElement",value:"HTMLInputElement"}],value:"ChangeEvent<T>"},required:!0,rest:!1,description:"",declarations:[{name:"e",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the Switch state changes.",declarations:[{name:"onChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the Switch.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Switch (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}}]}}],baseElement:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"},subComponents:[{name:"ErrorType",symbol:"ErrorType",description:"",declarations:[{name:"ErrorType",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/switch/lib/Switch.tsx"}],tags:{}}]}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)}}]);