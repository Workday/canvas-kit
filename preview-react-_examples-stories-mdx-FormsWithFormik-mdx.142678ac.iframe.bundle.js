"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1074],{"./modules/preview-react/_examples/stories/mdx/FormsWithFormik.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./modules/docs/index.ts"),_examples_SelectWithFormik__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./modules/preview-react/_examples/stories/mdx/examples/SelectWithFormik.tsx"),_examples_TextInputWithFormik__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/preview-react/_examples/stories/mdx/examples/TextInputWithFormik.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Examples/Preview/Forms/With Formik"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-examples",children:"Canvas Kit Examples"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"select-using-formik",children:"Select Using Formik"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_SelectWithFormik__WEBPACK_IMPORTED_MODULE_5__.VP}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"controlled-text-inputs-using-formik",children:"Controlled Text Inputs Using Formik"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_docs__WEBPACK_IMPORTED_MODULE_3__.ExampleCodeBlock,{code:_examples_TextInputWithFormik__WEBPACK_IMPORTED_MODULE_6__.w})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_4__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./modules/preview-react/_examples/stories/mdx/examples/SelectWithFormik.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.VP=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_formik=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),_select=__webpack_require__("./modules/react/select/index.ts"),_formField=__webpack_require__("./modules/react/form-field/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}const customOptionsMain=[{label:"Dessert Person by Claire Saffitz",serverId:1,icon:_canvasSystemIconsWeb.activityStreamIcon},{label:"Elements of Pizza by Ken Forkish",serverId:2,icon:_canvasSystemIconsWeb.avatarIcon},{label:"Flour Water Salt Yeast by Ken Forkish",serverId:3,icon:_canvasSystemIconsWeb.uploadCloudIcon},{label:"Mastering Pasta by Marc Verti",serverId:4,icon:_canvasSystemIconsWeb.userIcon}];const SelectWithFormik=()=>{const formik=(0,_formik.useFormik)({initialValues:{selectedBook:""},onSubmit:values=>{setTimeout((()=>{alert(JSON.stringify(values,null,2))}),0)}}),selectModel=(0,_select.useSelectModel)({items:customOptionsMain,getId:item=>item.serverId,getTextValue:item=>item.label});return React.createElement("form",{onSubmit:formik.handleSubmit,action:"."},React.createElement(_layout.Flex,{gap:"xs",flexDirection:"column",alignItems:"flex-start"},React.createElement(_formField.FormField,{orientation:"vertical",alignSelf:"stretch",alignItems:"normal"},React.createElement(_select.Select,{model:selectModel},React.createElement(_formField.FormField.Label,null,"Choose a book"),React.createElement(_formField.FormField.Input,{as:_select.Select.Input,name:"selectedBook",onChange:event=>formik.setFieldValue("selectedBook",event.currentTarget.value),value:formik.values.selectedBook,grow:!0}),React.createElement(_select.Select.Popper,null,React.createElement(_select.Select.Card,null,React.createElement(_select.Select.List,{maxHeight:200},(item=>React.createElement(_select.Select.Item,{"data-id":item.serverId,"data-text":item.label},React.createElement(_select.Select.Item.Icon,{icon:item.icon}),item.label))))))),React.createElement(_button.PrimaryButton,{type:"submit"},"Submit")))};exports.VP=SelectWithFormik,SelectWithFormik.displayName="SelectWithFormik",SelectWithFormik.__RAW__="import * as React from 'react';\nimport {useFormik} from 'formik';\nimport {Select, useSelectModel} from '@workday/canvas-kit-react/select';\nimport {FormField} from '@workday/canvas-kit-react/form-field';\nimport {Flex} from '@workday/canvas-kit-react/layout';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\nimport {\n  activityStreamIcon,\n  avatarIcon,\n  uploadCloudIcon,\n  userIcon,\n} from '@workday/canvas-system-icons-web';\n\nexport const customOptionsMain = [\n  {\n    label: 'Dessert Person by Claire Saffitz',\n    serverId: 1,\n    icon: activityStreamIcon,\n  },\n  {\n    label: 'Elements of Pizza by Ken Forkish',\n    serverId: 2,\n    icon: avatarIcon,\n  },\n  {\n    label: 'Flour Water Salt Yeast by Ken Forkish',\n    serverId: 3,\n    icon: uploadCloudIcon,\n  },\n  {label: 'Mastering Pasta by Marc Verti', serverId: 4, icon: userIcon},\n];\n\nexport const SelectWithFormik = () => {\n  const formik = useFormik({\n    initialValues: {\n      selectedBook: '',\n    },\n    onSubmit: values => {\n      // Send data to server\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n      }, 0);\n    },\n  });\n\n  const selectModel = useSelectModel({\n    items: customOptionsMain,\n    getId: item => {\n      return item.serverId;\n    },\n    getTextValue: item => item.label,\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} action=\".\">\n      <Flex gap=\"xs\" flexDirection=\"column\" alignItems=\"flex-start\">\n        <FormField orientation=\"vertical\" alignSelf=\"stretch\" alignItems=\"normal\">\n          <Select model={selectModel}>\n            <FormField.Label>Choose a book</FormField.Label>\n            <FormField.Input\n              as={Select.Input}\n              name=\"selectedBook\"\n              onChange={event => formik.setFieldValue('selectedBook', event.currentTarget.value)}\n              value={formik.values.selectedBook}\n              grow\n            />\n            <Select.Popper>\n              <Select.Card>\n                <Select.List maxHeight={200}>\n                  {item => {\n                    return (\n                      <Select.Item data-id={item.serverId} data-text={item.label}>\n                        <Select.Item.Icon icon={item.icon} />\n                        {item.label}\n                      </Select.Item>\n                    );\n                  }}\n                </Select.List>\n              </Select.Card>\n            </Select.Popper>\n          </Select>\n        </FormField>\n        <PrimaryButton type=\"submit\">Submit</PrimaryButton>\n      </Flex>\n    </form>\n  );\n};\n"},"./modules/preview-react/_examples/stories/mdx/examples/TextInputWithFormik.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{exports.w=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_formik=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),_yup=__webpack_require__("./node_modules/yup/es/index.js"),_textInput=__webpack_require__("./modules/preview-react/text-input/index.ts"),_layout=__webpack_require__("./modules/react/layout/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_common=__webpack_require__("./modules/react/common/index.ts");const passwordHint="Password should be of minimum 8 characters length",validationSchema=(0,_yup.object)({email:(0,_yup.string)().email("Enter a valid email").required("Email is required"),password:(0,_yup.string)().min(8,passwordHint).required("Password is required")}),TextInputWithFormik=()=>{const passwordRef=_react.default.useRef(null),[showPassword,setShowPassword]=_react.default.useState(!1),passwordId=(0,_common.useUniqueId)(),formik=(0,_formik.useFormik)({initialValues:{email:"example@baz.com",password:"foobarbaz"},validationSchema,onSubmit:values=>{setShowPassword(!1),setTimeout((()=>{alert(JSON.stringify(values,null,2))}),0)}});return _react.default.createElement("form",{onSubmit:formik.handleSubmit,action:"."},_react.default.createElement(_layout.Flex,{gap:"xs",flexDirection:"column",alignItems:"flex-start"},_react.default.createElement(_textInput.TextInput,{orientation:"vertical",isRequired:!0,error:formik.touched.email&&formik.errors.email?"error":void 0},_react.default.createElement(_textInput.TextInput.Label,null,"Email"),_react.default.createElement(_textInput.TextInput.Field,{name:"email",autoComplete:"username",placeholder:"yourName@example.com",onChange:formik.handleChange,onBlur:formik.handleBlur,value:formik.values.email}),_react.default.createElement(_textInput.TextInput.Hint,null,formik.touched.email&&formik.errors.email)),_react.default.createElement(_textInput.TextInput,{orientation:"vertical",id:passwordId,error:formik.touched.password&&formik.errors.password?"error":void 0,isRequired:!0},_react.default.createElement(_textInput.TextInput.Label,null,"Password"),_react.default.createElement(_layout.Flex,{gap:"xxs"},_react.default.createElement(_textInput.TextInput.Field,{type:showPassword?"text":"password",name:"password",autoComplete:"current-password",spellCheck:!1,ref:passwordRef,onChange:formik.handleChange,onBlur:formik.handleBlur,value:formik.values.password}),_react.default.createElement(_button.TertiaryButton,{type:"button",icon:showPassword?_canvasSystemIconsWeb.invisibleIcon:_canvasSystemIconsWeb.visibleIcon,"aria-label":showPassword?"Hide Password":"Show Password","aria-controls":`input-${passwordId}`,onClick:()=>{var _passwordRef$current;setShowPassword((state=>!state)),null===(_passwordRef$current=passwordRef.current)||void 0===_passwordRef$current||_passwordRef$current.focus()}})),_react.default.createElement(_textInput.TextInput.Hint,null,formik.touched.password&&formik.errors.password||passwordHint)),_react.default.createElement(_button.PrimaryButton,{type:"submit"},"Submit")))};exports.w=TextInputWithFormik,TextInputWithFormik.displayName="TextInputWithFormik",TextInputWithFormik.__RAW__="import React from 'react';\n\nimport {useFormik} from 'formik';\nimport {object, SchemaOf, string} from 'yup';\n\nimport {TextInput} from '@workday/canvas-kit-preview-react/text-input';\nimport {Flex} from '@workday/canvas-kit-react/layout';\nimport {TertiaryButton, PrimaryButton} from '@workday/canvas-kit-react/button';\nimport {visibleIcon, invisibleIcon} from '@workday/canvas-system-icons-web';\nimport {useUniqueId} from '@workday/canvas-kit-react/common';\n\ninterface LoginSchema {\n  email: string;\n  password: string;\n}\n\nconst passwordMinimum = 8;\nconst passwordHint = `Password should be of minimum ${passwordMinimum} characters length`;\nconst emailRequired = 'Email is required';\nconst passwordRequired = 'Password is required';\n\nconst validationSchema: SchemaOf<LoginSchema> = object({\n  email: string().email('Enter a valid email').required(emailRequired),\n  password: string().min(passwordMinimum, passwordHint).required(passwordRequired),\n});\n\nexport const TextInputWithFormik = () => {\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n  const [showPassword, setShowPassword] = React.useState(false);\n  const passwordId = useUniqueId();\n\n  const formik = useFormik({\n    initialValues: {\n      email: 'example@baz.com',\n      password: 'foobarbaz',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setShowPassword(false);\n      // Send data to server\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n      }, 0);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} action=\".\">\n      <Flex gap=\"xs\" flexDirection=\"column\" alignItems=\"flex-start\">\n        <TextInput\n          orientation=\"vertical\"\n          isRequired={true}\n          error={formik.touched.email && !!formik.errors.email ? 'error' : undefined}\n        >\n          <TextInput.Label>Email</TextInput.Label>\n          <TextInput.Field\n            name=\"email\"\n            autoComplete=\"username\"\n            placeholder=\"yourName@example.com\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          <TextInput.Hint>{formik.touched.email && formik.errors.email}</TextInput.Hint>\n        </TextInput>\n        <TextInput\n          orientation=\"vertical\"\n          id={passwordId}\n          error={formik.touched.password && !!formik.errors.password ? 'error' : undefined}\n          isRequired={true}\n        >\n          <TextInput.Label>Password</TextInput.Label>\n          <Flex gap=\"xxs\">\n            <TextInput.Field\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              autoComplete=\"current-password\"\n              spellCheck={false}\n              ref={passwordRef}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            <TertiaryButton\n              type=\"button\"\n              icon={showPassword ? invisibleIcon : visibleIcon}\n              aria-label={showPassword ? 'Hide Password' : 'Show Password'}\n              aria-controls={`input-${passwordId}`}\n              onClick={() => {\n                setShowPassword(state => !state);\n                passwordRef.current?.focus();\n              }}\n            />\n          </Flex>\n          <TextInput.Hint>\n            {(formik.touched.password && formik.errors.password) || passwordHint}\n          </TextInput.Hint>\n        </TextInput>\n\n        <PrimaryButton type=\"submit\">Submit</PrimaryButton>\n      </Flex>\n    </form>\n  );\n};\n"}}]);