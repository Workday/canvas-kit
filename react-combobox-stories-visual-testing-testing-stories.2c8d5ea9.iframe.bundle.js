"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[7429],{"./modules/react/combobox/stories/visual-testing/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.ComboboxStates=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_testing=__webpack_require__("./modules/react/testing/index.ts"),_combobox=__webpack_require__("./modules/react/combobox/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Combobox",component:_combobox.Combobox,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import React from \'react\';\\n\\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\\n\\nimport {Combobox, useComboboxModel} from \'@workday/canvas-kit-react/combobox\';\\n\\nexport default {\\n  title: \'Testing/Combobox\',\\n  component: Combobox,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const ComboboxStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          columnProps={[{label: \'Default\', props: {}}]}\\n          rowProps={[\\n            {\\n              label: \'Closed\',\\n              props: {visibility: \'hidden\'},\\n            },\\n            {\\n              label: \'Opened\',\\n              props: {visibility: \'visible\'},\\n            },\\n          ]}\\n        >\\n          {({visibility, ...props}) => {\\n            // Do this work to make the test look correct\\n            // eslint-disable-next-line react-hooks/rules-of-hooks\\n            const model = useComboboxModel({\\n              initialVisibility: visibility,\\n            });\\n            // eslint-disable-next-line react-hooks/rules-of-hooks\\n            React.useLayoutEffect(() => {\\n              if (visibility === \'visible\') {\\n                model.events.setWidth(model.state.inputRef.current.clientWidth);\\n              }\\n            }, [visibility, model.events, model.state.inputRef]);\\n            return (\\n              <Combobox model={model} {...props}>\\n                <Combobox.Input />\\n                <Combobox.Menu.Popper>\\n                  <Combobox.Menu.Card>\\n                    <Combobox.Menu.List maxHeight={200}>\\n                      <Combobox.Menu.Item className=\\"focus\\">Option 1</Combobox.Menu.Item>\\n                      <Combobox.Menu.Item>Option 2</Combobox.Menu.Item>\\n                      <Combobox.Menu.Item>Option 3</Combobox.Menu.Item>\\n                    </Combobox.Menu.List>\\n                  </Combobox.Menu.Card>\\n                </Combobox.Menu.Popper>\\n              </Combobox>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n        <div style={{height: 110}} /* Leave room for the menu */ />\\n      </StaticStates>\\n    );\\n  },\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "ComboboxStates": {\n    "startLoc": {\n      "col": 30,\n      "line": 17\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 66\n    },\n    "startBody": {\n      "col": 30,\n      "line": 17\n    },\n    "endBody": {\n      "col": 1,\n      "line": 66\n    }\n  }\n};\n    \nimport React from \'react\';\n\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\n\nimport {Combobox, useComboboxModel} from \'@workday/canvas-kit-react/combobox\';\n\nexport default {\n  title: \'Testing/Combobox\',\n  component: Combobox,\n  parameters: {\n  "storySource": {\n    "source": "import React from \'react\';\\n\\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\\n\\nimport {Combobox, useComboboxModel} from \'@workday/canvas-kit-react/combobox\';\\n\\nexport default {\\n  title: \'Testing/Combobox\',\\n  component: Combobox,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const ComboboxStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          columnProps={[{label: \'Default\', props: {}}]}\\n          rowProps={[\\n            {\\n              label: \'Closed\',\\n              props: {visibility: \'hidden\'},\\n            },\\n            {\\n              label: \'Opened\',\\n              props: {visibility: \'visible\'},\\n            },\\n          ]}\\n        >\\n          {({visibility, ...props}) => {\\n            // Do this work to make the test look correct\\n            \\n            const model = useComboboxModel({\\n              initialVisibility: visibility,\\n            });\\n            \\n            React.useLayoutEffect(() => {\\n              if (visibility === \'visible\') {\\n                model.events.setWidth(model.state.inputRef.current.clientWidth);\\n              }\\n            }, [visibility, model.events, model.state.inputRef]);\\n            return (\\n              <Combobox model={model} {...props}>\\n                <Combobox.Input />\\n                <Combobox.Menu.Popper>\\n                  <Combobox.Menu.Card>\\n                    <Combobox.Menu.List maxHeight={200}>\\n                      <Combobox.Menu.Item className=\\"focus\\">Option 1</Combobox.Menu.Item>\\n                      <Combobox.Menu.Item>Option 2</Combobox.Menu.Item>\\n                      <Combobox.Menu.Item>Option 3</Combobox.Menu.Item>\\n                    </Combobox.Menu.List>\\n                  </Combobox.Menu.Card>\\n                </Combobox.Menu.Popper>\\n              </Combobox>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n        <div style={{height: 110}} /* Leave room for the menu */ />\\n      </StaticStates>\\n    );\\n  },\\n};\\n",\n    "locationsMap": {\n      "combobox-states": {\n        "startLoc": {\n          "col": 30,\n          "line": 17\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 66\n        },\n        "startBody": {\n          "col": 30,\n          "line": 17\n        },\n        "endBody": {\n          "col": 1,\n          "line": 66\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const ComboboxStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          columnProps={[{label: \'Default\', props: {}}]}\n          rowProps={[\n            {\n              label: \'Closed\',\n              props: {visibility: \'hidden\'},\n            },\n            {\n              label: \'Opened\',\n              props: {visibility: \'visible\'},\n            },\n          ]}\n        >\n          {({visibility, ...props}) => {\n            // Do this work to make the test look correct\n            \n            const model = useComboboxModel({\n              initialVisibility: visibility,\n            });\n            \n            React.useLayoutEffect(() => {\n              if (visibility === \'visible\') {\n                model.events.setWidth(model.state.inputRef.current.clientWidth);\n              }\n            }, [visibility, model.events, model.state.inputRef]);\n            return (\n              <Combobox model={model} {...props}>\n                <Combobox.Input />\n                <Combobox.Menu.Popper>\n                  <Combobox.Menu.Card>\n                    <Combobox.Menu.List maxHeight={200}>\n                      <Combobox.Menu.Item className="focus">Option 1</Combobox.Menu.Item>\n                      <Combobox.Menu.Item>Option 2</Combobox.Menu.Item>\n                      <Combobox.Menu.Item>Option 3</Combobox.Menu.Item>\n                    </Combobox.Menu.List>\n                  </Combobox.Menu.Card>\n                </Combobox.Menu.Popper>\n              </Combobox>\n            );\n          }}\n        </ComponentStatesTable>\n        <div style={{height: 110}} /* Leave room for the menu */ />\n      </StaticStates>\n    );\n  },\n};\n',locationsMap:{"combobox-states":{startLoc:{col:30,line:68},endLoc:{col:1,line:117},startBody:{col:30,line:68},endBody:{col:1,line:117}}}},storySource:{source:"import React from 'react';\n\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\n\nimport {Combobox, useComboboxModel} from '@workday/canvas-kit-react/combobox';\n\nexport default {\n  title: 'Testing/Combobox',\n  component: Combobox,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const ComboboxStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          columnProps={[{label: 'Default', props: {}}]}\n          rowProps={[\n            {\n              label: 'Closed',\n              props: {visibility: 'hidden'},\n            },\n            {\n              label: 'Opened',\n              props: {visibility: 'visible'},\n            },\n          ]}\n        >\n          {({visibility, ...props}) => {\n            // Do this work to make the test look correct\n            \n            const model = useComboboxModel({\n              initialVisibility: visibility,\n            });\n            \n            React.useLayoutEffect(() => {\n              if (visibility === 'visible') {\n                model.events.setWidth(model.state.inputRef.current.clientWidth);\n              }\n            }, [visibility, model.events, model.state.inputRef]);\n            return (\n              <Combobox model={model} {...props}>\n                <Combobox.Input />\n                <Combobox.Menu.Popper>\n                  <Combobox.Menu.Card>\n                    <Combobox.Menu.List maxHeight={200}>\n                      <Combobox.Menu.Item className=\"focus\">Option 1</Combobox.Menu.Item>\n                      <Combobox.Menu.Item>Option 2</Combobox.Menu.Item>\n                      <Combobox.Menu.Item>Option 3</Combobox.Menu.Item>\n                    </Combobox.Menu.List>\n                  </Combobox.Menu.Card>\n                </Combobox.Menu.Popper>\n              </Combobox>\n            );\n          }}\n        </ComponentStatesTable>\n        <div style={{height: 110}} /* Leave room for the menu */ />\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"combobox-states":{startLoc:{col:30,line:17},endLoc:{col:1,line:66},startBody:{col:30,line:17},endBody:{col:1,line:66}}}},chromatic:{disable:!1}}};exports.ComboboxStates={render:()=>(0,_jsxRuntime.jsxs)(_testing.StaticStates,{children:[(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{columnProps:[{label:"Default",props:{}}],rowProps:[{label:"Closed",props:{visibility:"hidden"}},{label:"Opened",props:{visibility:"visible"}}],children:({visibility,...props})=>{const model=(0,_combobox.useComboboxModel)({initialVisibility:visibility});return _react.default.useLayoutEffect((()=>{"visible"===visibility&&model.events.setWidth(model.state.inputRef.current.clientWidth)}),[visibility,model.events,model.state.inputRef]),(0,_jsxRuntime.jsxs)(_combobox.Combobox,{model,...props,children:[(0,_jsxRuntime.jsx)(_combobox.Combobox.Input,{}),(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Popper,{children:(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Card,{children:(0,_jsxRuntime.jsxs)(_combobox.Combobox.Menu.List,{maxHeight:200,children:[(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Item,{className:"focus",children:"Option 1"}),(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Item,{children:"Option 2"}),(0,_jsxRuntime.jsx)(_combobox.Combobox.Menu.Item,{children:"Option 3"})]})})})]})}}),(0,_jsxRuntime.jsx)("div",{style:{height:110}})]})};module.exports.__namedExportsOrder=["ComboboxStates"]}}]);