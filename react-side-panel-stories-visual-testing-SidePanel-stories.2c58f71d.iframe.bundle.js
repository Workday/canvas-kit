"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1283],{"./modules/react/side-panel/stories/visual-testing/SidePanel.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SidePanelStates=exports.default=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_testing=__webpack_require__("./modules/react/testing/index.ts"),_sidePanel=__webpack_require__("./modules/react/side-panel/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var _default={title:"Testing/Containers/Side Panel",component:_sidePanel.SidePanel,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {\\n  SidePanel,\\n  SidePanelBackgroundColor,\\n  SidePanelOpenDirection,\\n} from '@workday/canvas-kit-react/side-panel';\\nimport {space} from '@workday/canvas-kit-react/tokens';\\n\\nexport default {\\n  title: 'Testing/Containers/Side Panel',\\n  component: SidePanel,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SidePanelStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Default', props: {open: true}},\\n          {\\n            label: 'With Heading',\\n            props: {header: 'Navigation', open: true},\\n          },\\n          {\\n            label: 'With Gray Background',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n            },\\n          },\\n          {\\n            label: 'With On Toggle Click',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n          {\\n            label: 'With open direction from right',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openDirection: SidePanelOpenDirection.Right,\\n            },\\n          },\\n          {\\n            label: 'With custom padding',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              padding: space.xxs,\\n            },\\n          },\\n          {\\n            label: 'With custom open width',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openWidth: 350,\\n            },\\n          },\\n          {\\n            label: 'When closed',\\n            props: {\\n              header: 'Navigation',\\n              open: false,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n        ]}\\n        columnProps={[{label: 'Default', props: {}}]}\\n      >\\n        {props => (\\n          <div style={{position: 'relative', height: 200}}>\\n            <SidePanel open={props.open} {...props}>\\n              Side Panel Content\\n            </SidePanel>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"SidePanelStates\": {\n    \"startLoc\": {\n      \"col\": 31,\n      \"line\": 20\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 98\n    },\n    \"startBody\": {\n      \"col\": 31,\n      \"line\": 20\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 98\n    }\n  }\n};\n    \nimport React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {\n  SidePanel,\n  SidePanelBackgroundColor,\n  SidePanelOpenDirection,\n} from '@workday/canvas-kit-react/side-panel';\nimport {space} from '@workday/canvas-kit-react/tokens';\n\nexport default {\n  title: 'Testing/Containers/Side Panel',\n  component: SidePanel,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\\nimport {\\n  SidePanel,\\n  SidePanelBackgroundColor,\\n  SidePanelOpenDirection,\\n} from '@workday/canvas-kit-react/side-panel';\\nimport {space} from '@workday/canvas-kit-react/tokens';\\n\\nexport default {\\n  title: 'Testing/Containers/Side Panel',\\n  component: SidePanel,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SidePanelStates = {\\n  render: () => (\\n    <StaticStates>\\n      <ComponentStatesTable\\n        rowProps={[\\n          {label: 'Default', props: {open: true}},\\n          {\\n            label: 'With Heading',\\n            props: {header: 'Navigation', open: true},\\n          },\\n          {\\n            label: 'With Gray Background',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n            },\\n          },\\n          {\\n            label: 'With On Toggle Click',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n          {\\n            label: 'With open direction from right',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openDirection: SidePanelOpenDirection.Right,\\n            },\\n          },\\n          {\\n            label: 'With custom padding',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              padding: space.xxs,\\n            },\\n          },\\n          {\\n            label: 'With custom open width',\\n            props: {\\n              header: 'Navigation',\\n              open: true,\\n              backgroundColor: SidePanelBackgroundColor.Gray,\\n              onToggleClick: () => console.log('click toggle button'),\\n              openWidth: 350,\\n            },\\n          },\\n          {\\n            label: 'When closed',\\n            props: {\\n              header: 'Navigation',\\n              open: false,\\n              onToggleClick: () => console.log('click toggle button'),\\n            },\\n          },\\n        ]}\\n        columnProps={[{label: 'Default', props: {}}]}\\n      >\\n        {props => (\\n          <div style={{position: 'relative', height: 200}}>\\n            <SidePanel open={props.open} {...props}>\\n              Side Panel Content\\n            </SidePanel>\\n          </div>\\n        )}\\n      </ComponentStatesTable>\\n    </StaticStates>\\n  ),\\n};\\n\",\n    \"locationsMap\": {\n      \"side-panel-states\": {\n        \"startLoc\": {\n          \"col\": 31,\n          \"line\": 20\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 98\n        },\n        \"startBody\": {\n          \"col\": 31,\n          \"line\": 20\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 98\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SidePanelStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Default', props: {open: true}},\n          {\n            label: 'With Heading',\n            props: {header: 'Navigation', open: true},\n          },\n          {\n            label: 'With Gray Background',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n            },\n          },\n          {\n            label: 'With On Toggle Click',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n          {\n            label: 'With open direction from right',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openDirection: SidePanelOpenDirection.Right,\n            },\n          },\n          {\n            label: 'With custom padding',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              padding: space.xxs,\n            },\n          },\n          {\n            label: 'With custom open width',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openWidth: 350,\n            },\n          },\n          {\n            label: 'When closed',\n            props: {\n              header: 'Navigation',\n              open: false,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n        ]}\n        columnProps={[{label: 'Default', props: {}}]}\n      >\n        {props => (\n          <div style={{position: 'relative', height: 200}}>\n            <SidePanel open={props.open} {...props}>\n              Side Panel Content\n            </SidePanel>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n",locationsMap:{"side-panel-states":{startLoc:{col:31,line:71},endLoc:{col:1,line:149},startBody:{col:31,line:71},endBody:{col:1,line:149}}}},storySource:{source:"import React from 'react';\nimport {ComponentStatesTable, StaticStates} from '@workday/canvas-kit-react/testing';\nimport {\n  SidePanel,\n  SidePanelBackgroundColor,\n  SidePanelOpenDirection,\n} from '@workday/canvas-kit-react/side-panel';\nimport {space} from '@workday/canvas-kit-react/tokens';\n\nexport default {\n  title: 'Testing/Containers/Side Panel',\n  component: SidePanel,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SidePanelStates = {\n  render: () => (\n    <StaticStates>\n      <ComponentStatesTable\n        rowProps={[\n          {label: 'Default', props: {open: true}},\n          {\n            label: 'With Heading',\n            props: {header: 'Navigation', open: true},\n          },\n          {\n            label: 'With Gray Background',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n            },\n          },\n          {\n            label: 'With On Toggle Click',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n          {\n            label: 'With open direction from right',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openDirection: SidePanelOpenDirection.Right,\n            },\n          },\n          {\n            label: 'With custom padding',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              padding: space.xxs,\n            },\n          },\n          {\n            label: 'With custom open width',\n            props: {\n              header: 'Navigation',\n              open: true,\n              backgroundColor: SidePanelBackgroundColor.Gray,\n              onToggleClick: () => console.log('click toggle button'),\n              openWidth: 350,\n            },\n          },\n          {\n            label: 'When closed',\n            props: {\n              header: 'Navigation',\n              open: false,\n              onToggleClick: () => console.log('click toggle button'),\n            },\n          },\n        ]}\n        columnProps={[{label: 'Default', props: {}}]}\n      >\n        {props => (\n          <div style={{position: 'relative', height: 200}}>\n            <SidePanel open={props.open} {...props}>\n              Side Panel Content\n            </SidePanel>\n          </div>\n        )}\n      </ComponentStatesTable>\n    </StaticStates>\n  ),\n};\n",locationsMap:{"side-panel-states":{startLoc:{col:31,line:20},endLoc:{col:1,line:98},startBody:{col:31,line:20},endBody:{col:1,line:98}}}},chromatic:{disable:!1}}};exports.default=_default;const SidePanelStates={render:()=>_react.default.createElement(_testing.StaticStates,null,_react.default.createElement(_testing.ComponentStatesTable,{rowProps:[{label:"Default",props:{open:!0}},{label:"With Heading",props:{header:"Navigation",open:!0}},{label:"With Gray Background",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray}},{label:"With On Toggle Click",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button")}},{label:"With open direction from right",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button"),openDirection:_sidePanel.SidePanelOpenDirection.Right}},{label:"With custom padding",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button"),padding:_tokens.space.xxs}},{label:"With custom open width",props:{header:"Navigation",open:!0,backgroundColor:_sidePanel.SidePanelBackgroundColor.Gray,onToggleClick:()=>console.log("click toggle button"),openWidth:350}},{label:"When closed",props:{header:"Navigation",open:!1,onToggleClick:()=>console.log("click toggle button")}}],columnProps:[{label:"Default",props:{}}]},(props=>_react.default.createElement("div",{style:{position:"relative",height:200}},_react.default.createElement(_sidePanel.SidePanel,_extends({open:props.open},props),"Side Panel Content")))))};exports.SidePanelStates=SidePanelStates,module.exports.__namedExportsOrder=["SidePanelStates"]},"./modules/react/side-panel/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});var _SidePanel=__webpack_require__("./modules/react/side-panel/lib/SidePanel.tsx");Object.keys(_SidePanel).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_SidePanel[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _SidePanel[key]}}))}));const __docs=[];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/side-panel/lib/SidePanel.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SidePanel=exports.SidePanelBackgroundColor=exports.SidePanelOpenDirection=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_button=__webpack_require__("./modules/react/button/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_text=__webpack_require__("./modules/react/text/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}let SidePanelOpenDirection,SidePanelBackgroundColor;exports.SidePanelOpenDirection=SidePanelOpenDirection,function(SidePanelOpenDirection){SidePanelOpenDirection[SidePanelOpenDirection.Left=0]="Left",SidePanelOpenDirection[SidePanelOpenDirection.Right=1]="Right"}(SidePanelOpenDirection||(exports.SidePanelOpenDirection=SidePanelOpenDirection={})),exports.SidePanelBackgroundColor=SidePanelBackgroundColor,function(SidePanelBackgroundColor){SidePanelBackgroundColor[SidePanelBackgroundColor.White=0]="White",SidePanelBackgroundColor[SidePanelBackgroundColor.Transparent=1]="Transparent",SidePanelBackgroundColor[SidePanelBackgroundColor.Gray=2]="Gray"}(SidePanelBackgroundColor||(exports.SidePanelBackgroundColor=SidePanelBackgroundColor={}));const closedWidth=_tokens.space.xxl,SidePanelContainer=(0,_styled.default)("div")({overflow:"hidden",height:"100%",boxSizing:"border-box",display:"flex",flexDirection:"column",transition:"width 200ms ease",position:"absolute"},(({open})=>({alignItems:open?void 0:"center",boxShadow:open?void 0:"0 8px 16px -8px rgba(0, 0, 0, 0.16)"})),(({open,backgroundColor})=>{let openBackgroundColor;switch(backgroundColor){case SidePanelBackgroundColor.Transparent:openBackgroundColor="transparent";break;case SidePanelBackgroundColor.Gray:openBackgroundColor=_tokens.colors.soap100;break;case SidePanelBackgroundColor.White:default:openBackgroundColor=_tokens.colors.frenchVanilla100}return{backgroundColor:open?openBackgroundColor:_tokens.colors.frenchVanilla100}}),(({open,openWidth})=>({width:open?openWidth:closedWidth})),(({open,padding})=>({padding:open?padding||_tokens.space.m:`${_tokens.space.s} 0`})),(({openDirection})=>({right:openDirection===SidePanelOpenDirection.Right?_tokens.space.zero:void 0,left:openDirection===SidePanelOpenDirection.Left?_tokens.space.zero:void 0}))),ChildrenContainer=(0,_styled.default)("div")({transition:"none",zIndex:1},(({open,openWidth})=>({width:open?openWidth:closedWidth}))),ToggleButton=(0,_styled.default)(_button.TertiaryButton,{shouldForwardProp:prop=>"openDirection"!==prop})({position:"absolute",bottom:_tokens.space.s},(({openDirection})=>({right:openDirection===SidePanelOpenDirection.Left?_tokens.space.s:"",left:openDirection===SidePanelOpenDirection.Right?_tokens.space.s:""}))),SidePanelFooter=(0,_styled.default)("div")({position:"absolute",bottom:"0",height:120,left:0,background:"linear-gradient(180deg, rgba(255, 255, 255, 0.0001) 0%, #FFFFFF 100%)"},(({open,openWidth})=>({width:open?openWidth:_tokens.space.xxl})));class SidePanel extends React.Component{constructor(props){super(props),_defineProperty(this,"state",{screenSize:"undefined"!=typeof window?window.innerWidth:0}),_defineProperty(this,"handleResize",(()=>{this.props.onBreakpointChange&&this.props.breakpoint&&(window.innerWidth>this.props.breakpoint&&!this.props.open&&this.props.onBreakpointChange(!0),window.innerWidth<=this.props.breakpoint&&this.props.open&&this.props.onBreakpointChange(!1))})),_defineProperty(this,"onToggleClick",(()=>{this.props.onToggleClick&&this.props.onToggleClick()})),_defineProperty(this,"toggleButtonDirection",((open,openDirection)=>openDirection!==SidePanelOpenDirection.Right?open?_canvasSystemIconsWeb.chevronLeftIcon:_canvasSystemIconsWeb.chevronRightIcon:open?_canvasSystemIconsWeb.chevronRightIcon:_canvasSystemIconsWeb.chevronLeftIcon)),this.handleResize=this.handleResize.bind(this)}componentDidMount(){window.addEventListener("resize",this.handleResize)}componentWillUnmount(){window.removeEventListener("resize",this.handleResize)}render(){const{backgroundColor=SidePanelBackgroundColor.White,openNavigationAriaLabel="open navigation",closeNavigationAriaLabel="close navigation",openDirection=SidePanelOpenDirection.Left,breakpoint=768,openWidth=300,header,onToggleClick,open,padding,onBreakpointChange,...elemProps}=this.props;return React.createElement(SidePanelContainer,_extends({role:"region",padding,openDirection,openWidth,backgroundColor,open},elemProps),React.createElement(ChildrenContainer,{open,openWidth},header&&open?React.createElement(_text.Heading,{as:"h2",size:"small",marginTop:"zero"},header):null,this.props.children),React.createElement(SidePanelFooter,{openWidth,open},onToggleClick&&React.createElement(ToggleButton,{openDirection,"aria-label":open?closeNavigationAriaLabel:openNavigationAriaLabel,onClick:this.onToggleClick,icon:this.toggleButtonDirection(open,openDirection)})))}}exports.SidePanel=SidePanel,_defineProperty(SidePanel,"OpenDirection",SidePanelOpenDirection),_defineProperty(SidePanel,"BackgroundColor",SidePanelBackgroundColor),SidePanel.displayName="SidePanel";const __docs=[{name:"SidePanelProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx",description:"",declarations:[{name:"SidePanelProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"open",required:!0,type:{kind:"primitive",value:"boolean"},description:"If true, set the SidePanel to the open state.",declarations:[{name:"open",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"false;"}},{kind:"property",name:"onToggleClick",required:!1,type:{kind:"function",parameters:[],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the toggle button is clicked. The toggle button is only shown if this prop is defined.",declarations:[{name:"onToggleClick",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"header",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"string"},{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}]},description:"The text or element to display as the SidePanel header.",declarations:[{name:"header",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"openDirection",required:!1,type:{kind:"symbol",name:"SidePanelOpenDirection",value:"SidePanelOpenDirection"},description:"The side from which the SidePanel opens. Accepts `Left` or `Right`.",declarations:[{name:"openDirection",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"SidePanelOpenDirection.Left"}},{kind:"property",name:"onBreakpointChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"aboveBreakpoint",type:{kind:"primitive",value:"boolean"},required:!0,rest:!1,description:"",declarations:[{name:"aboveBreakpoint",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the window width changes and reaches a width equivalent to `breakpoint`. For example, if the window is resized from a width of `1000px`, this will be called when the window reaches a width equivalent to `breakpoint`. The `aboveBreakpoint` argument passed to the callback function indicates whether the current window width is above or below `breakpoint` so you can control `open` based on the change.",declarations:[{name:"onBreakpointChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"padding",required:!1,type:{kind:"symbol",name:"CanvasSpaceValues",value:"CanvasSpaceValues"},description:"The padding of the SidePanel when it's open.",declarations:[{name:"padding",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"breakpoint",required:!1,type:{kind:"primitive",value:"number"},description:"The window width at which the SidePanel triggers `onBreakPointChange`.",declarations:[{name:"breakpoint",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"768px"}},{kind:"property",name:"openWidth",required:!1,type:{kind:"primitive",value:"number"},description:"The width of the SidePanel when it's open.",declarations:[{name:"openWidth",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"300px"}},{kind:"property",name:"backgroundColor",required:!1,type:{kind:"symbol",name:"SidePanelBackgroundColor",value:"SidePanelBackgroundColor"},description:"The background color of the SidePanel when it's open.",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"SidePanelBackgroundColor.White"}},{kind:"property",name:"closeNavigationAriaLabel",required:!1,type:{kind:"primitive",value:"string"},description:"The `aria-label` that describes closing the navigation.",declarations:[{name:"closeNavigationAriaLabel",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"'close navigation'"}},{kind:"property",name:"openNavigationAriaLabel",required:!1,type:{kind:"primitive",value:"string"},description:"The `aria-label` that describes opening the navigation.",declarations:[{name:"openNavigationAriaLabel",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"'open navigation'"}}]}},{name:"SidePanelState",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx",description:"",declarations:[{name:"SidePanelState",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"screenSize",required:!0,type:{kind:"primitive",value:"number"},description:"",declarations:[{name:"screenSize",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}}]}},{name:"SidePanelOpenDirection",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx",description:"",declarations:[{name:"SidePanelOpenDirection",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{},type:{kind:"object",typeParameters:[],properties:[{kind:"property",name:"Left",type:{kind:"number",value:0}},{kind:"property",name:"Right",type:{kind:"number",value:1}}],callSignatures:[]}},{name:"SidePanelBackgroundColor",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx",description:"",declarations:[{name:"SidePanelBackgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{},type:{kind:"object",typeParameters:[],properties:[{kind:"property",name:"White",type:{kind:"number",value:0}},{kind:"property",name:"Transparent",type:{kind:"number",value:1}},{kind:"property",name:"Gray",type:{kind:"number",value:2}}],callSignatures:[]}},{name:"SidePanel",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx",description:"",declarations:[{name:"SidePanel",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{},type:{kind:"component",props:[{kind:"property",name:"open",required:!0,type:{kind:"primitive",value:"boolean"},description:"If true, set the SidePanel to the open state.",declarations:[{name:"open",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"false;"},defaultValue:{kind:"symbol",name:"false;",value:"false;"}},{kind:"property",name:"onToggleClick",required:!1,type:{kind:"function",parameters:[],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the toggle button is clicked. The toggle button is only shown if this prop is defined.",declarations:[{name:"onToggleClick",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"header",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"string"},{kind:"external",name:"ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}]},description:"The text or element to display as the SidePanel header.",declarations:[{name:"header",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"openDirection",required:!1,type:{kind:"symbol",name:"SidePanelOpenDirection",value:"SidePanelOpenDirection"},description:"The side from which the SidePanel opens. Accepts `Left` or `Right`.",declarations:[{name:"openDirection",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"SidePanelOpenDirection.Left"},defaultValue:{kind:"symbol",name:"SidePanelOpenDirection.Left",value:"SidePanelOpenDirection.Left"}},{kind:"property",name:"onBreakpointChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"aboveBreakpoint",type:{kind:"primitive",value:"boolean"},required:!0,rest:!1,description:"",declarations:[{name:"aboveBreakpoint",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the window width changes and reaches a width equivalent to `breakpoint`. For example, if the window is resized from a width of `1000px`, this will be called when the window reaches a width equivalent to `breakpoint`. The `aboveBreakpoint` argument passed to the callback function indicates whether the current window width is above or below `breakpoint` so you can control `open` based on the change.",declarations:[{name:"onBreakpointChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"padding",required:!1,type:{kind:"symbol",name:"CanvasSpaceValues",value:"CanvasSpaceValues"},description:"The padding of the SidePanel when it's open.",declarations:[{name:"padding",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{}},{kind:"property",name:"breakpoint",required:!1,type:{kind:"primitive",value:"number"},description:"The window width at which the SidePanel triggers `onBreakPointChange`.",declarations:[{name:"breakpoint",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"768px"},defaultValue:{kind:"symbol",name:"768px",value:"768px"}},{kind:"property",name:"openWidth",required:!1,type:{kind:"primitive",value:"number"},description:"The width of the SidePanel when it's open.",declarations:[{name:"openWidth",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"300px"},defaultValue:{kind:"symbol",name:"300px",value:"300px"}},{kind:"property",name:"backgroundColor",required:!1,type:{kind:"symbol",name:"SidePanelBackgroundColor",value:"SidePanelBackgroundColor"},description:"The background color of the SidePanel when it's open.",declarations:[{name:"backgroundColor",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"SidePanelBackgroundColor.White"},defaultValue:{kind:"symbol",name:"SidePanelBackgroundColor.White",value:"SidePanelBackgroundColor.White"}},{kind:"property",name:"closeNavigationAriaLabel",required:!1,type:{kind:"primitive",value:"string"},description:"The `aria-label` that describes closing the navigation.",declarations:[{name:"closeNavigationAriaLabel",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"'close navigation'"},defaultValue:{kind:"symbol",name:"'close navigation'",value:"'close navigation'"}},{kind:"property",name:"openNavigationAriaLabel",required:!1,type:{kind:"primitive",value:"string"},description:"The `aria-label` that describes opening the navigation.",declarations:[{name:"openNavigationAriaLabel",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/side-panel/lib/SidePanel.tsx"}],tags:{default:"'open navigation'"},defaultValue:{kind:"symbol",name:"'open navigation'",value:"'open navigation'"}}]}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)}}]);