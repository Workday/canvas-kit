"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[1511],{"./modules/preview-react/select/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});var _exportNames={Option:!0,RenderableOption:!0,RenderOptionFunction:!0,RenderSelectedFunction:!0};Object.defineProperty(exports,"Option",{enumerable:!0,get:function(){return _SelectBase.Option}}),Object.defineProperty(exports,"RenderableOption",{enumerable:!0,get:function(){return _SelectBase.RenderableOption}}),Object.defineProperty(exports,"RenderOptionFunction",{enumerable:!0,get:function(){return _SelectBase.RenderOptionFunction}}),Object.defineProperty(exports,"RenderSelectedFunction",{enumerable:!0,get:function(){return _SelectBase.RenderSelectedFunction}});var _Select=__webpack_require__("./modules/preview-react/select/lib/Select.tsx");Object.keys(_Select).forEach((function(key){"default"!==key&&"__esModule"!==key&&(Object.prototype.hasOwnProperty.call(_exportNames,key)||key in exports&&exports[key]===_Select[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _Select[key]}}))}));var _SelectBase=__webpack_require__("./modules/preview-react/select/lib/SelectBase.tsx");const __docs=[];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/select/lib/Select.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Select=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_SelectMenu=__webpack_require__("./modules/preview-react/select/lib/SelectMenu.tsx"),_SelectBase=__webpack_require__("./modules/preview-react/select/lib/SelectBase.tsx"),_utils=__webpack_require__("./modules/preview-react/select/lib/utils.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class SelectContainer extends React.Component{constructor(props){super(props),_defineProperty(this,"state",{focusedOptionIndex:0,menuVisibility:"closed"}),_defineProperty(this,"localButtonRef",React.createRef()),_defineProperty(this,"inputRef",React.createRef()),_defineProperty(this,"menuRef",React.createRef()),_defineProperty(this,"keysSoFar",""),_defineProperty(this,"clearKeysSoFarTimeout",500),_defineProperty(this,"normalizedOptions",[]),_defineProperty(this,"areOptionsDefined",(()=>{const{options}=this.props;return!(!options||0===options.length)})),_defineProperty(this,"setNormalizedOptions",(()=>{const{options}=this.props;this.areOptionsDefined()&&(this.normalizedOptions=options.map((option=>{let disabled,id,label,value,data={};return"string"==typeof option?(disabled=!1,id=(0,_common.generateUniqueId)(),value=option,label=option):(data=option.data||data,disabled=!!option.disabled,id=option.id||(0,_common.generateUniqueId)(),value=option.value,label=option.label||option.value),{data,disabled,id,label,value}})))})),_defineProperty(this,"getIndexByStartString",((startIndex,startString,endIndex=this.normalizedOptions.length,ignoreDisabled=!0)=>{for(let i=startIndex;i<endIndex;i++){if(0===this.normalizedOptions[i].label.toLowerCase().indexOf(startString.toLowerCase())&&(!ignoreDisabled||ignoreDisabled&&!this.normalizedOptions[i].disabled))return i}return-1})),_defineProperty(this,"focusNextEnabledOption",((startIndex,direction)=>{if(0===direction)return;const numOptions=this.normalizedOptions.length;let currentIndex=startIndex;for(;currentIndex>=0&&currentIndex<numOptions&&this.normalizedOptions[currentIndex].disabled;)currentIndex+=direction;currentIndex>=0&&currentIndex<numOptions&&!this.normalizedOptions[currentIndex].disabled&&this.setState({focusedOptionIndex:currentIndex})})),_defineProperty(this,"updateStateFromValue",(()=>{this.setState({focusedOptionIndex:(0,_utils.getCorrectedIndexByValue)(this.normalizedOptions,this.props.value)})})),_defineProperty(this,"focusButton",(()=>{this.localButtonRef.current&&this.localButtonRef.current.focus()})),_defineProperty(this,"setMenuAnimationTimeout",(callback=>{this.menuAnimationTimer&&clearTimeout(this.menuAnimationTimer),this.menuAnimationTimer=setTimeout(callback,_SelectMenu.menuAnimationDuration)})),_defineProperty(this,"openMenu",(()=>{this.setState({menuVisibility:"opening"}),this.setMenuAnimationTimeout((()=>{this.setState({menuVisibility:"opened"})}))})),_defineProperty(this,"closeMenu",(()=>{this.setState({menuVisibility:"closing"}),this.setMenuAnimationTimeout((()=>{this.setState({focusedOptionIndex:(0,_utils.getCorrectedIndexByValue)(this.normalizedOptions,this.props.value),menuVisibility:"closed"})}))})),_defineProperty(this,"toggleMenu",(open=>{const{menuVisibility}=this.state;if(open)switch(menuVisibility){case"closed":this.setState({menuVisibility:"open"},this.openMenu);break;case"close":case"closing":this.openMenu()}else switch(menuVisibility){case"opened":this.setState({menuVisibility:"close"},this.closeMenu);break;case"open":case"opening":this.closeMenu()}})),_defineProperty(this,"fireChangeEvent",(value=>{if(this.inputRef&&this.inputRef.current){const nativeInputValue=Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.inputRef.current),"value");let event;nativeInputValue&&nativeInputValue.set&&nativeInputValue.set.call(this.inputRef.current,value),"function"==typeof Event?event=new Event("change",{bubbles:!0}):(event=document.createEvent("Event"),event.initEvent("change",!0,!0)),this.inputRef.current.dispatchEvent(event)}})),_defineProperty(this,"handleKeyboardTypeAhead",((key,numOptions)=>{if("closing"===this.state.menuVisibility)return;let matchIndex,start=0===this.keysSoFar.length?this.state.focusedOptionIndex+1:this.state.focusedOptionIndex;start=start===numOptions?0:start,this.keysSoFar+=key,this.startClearKeysSoFarTimer(),matchIndex=this.getIndexByStartString(start,this.keysSoFar),-1===matchIndex&&(matchIndex=this.getIndexByStartString(0,this.keysSoFar,start)),matchIndex>-1&&("closed"===this.state.menuVisibility?this.fireChangeEvent(this.normalizedOptions[matchIndex].value):this.setState({focusedOptionIndex:matchIndex}))})),_defineProperty(this,"startClearKeysSoFarTimer",(()=>{this.clearKeysSoFarTimer&&clearTimeout(this.clearKeysSoFarTimer),this.clearKeysSoFarTimer=setTimeout((()=>{this.keysSoFar=""}),this.clearKeysSoFarTimeout)})),_defineProperty(this,"handleClick",(event=>{const{menuVisibility}=this.state;switch(menuVisibility){case"close":case"closing":this.menuRef.current&&this.menuRef.current.focus(),this.toggleMenu(!0);break;case"closed":this.toggleMenu(!0);break;default:this.toggleMenu(!1)}})),_defineProperty(this,"handleOptionSelection",(index=>{this.normalizedOptions[index].disabled||(this.toggleMenu(!1),this.focusButton(),this.fireChangeEvent(this.normalizedOptions[index].value))})),_defineProperty(this,"handleMenuCloseOnKeyPress",(()=>{this.handleClose(),this.focusButton()})),_defineProperty(this,"handleClose",(()=>{this.toggleMenu(!1)})),_defineProperty(this,"handleKeyDown",(event=>{const{options}=this.props,numOptions=options.length,{focusedOptionIndex,menuVisibility}=this.state;let isShortcut=!1;if(1===event.key.length&&event.key.match(/\S/))isShortcut=!0,this.handleKeyboardTypeAhead(event.key,numOptions);else switch(event.key){case"ArrowUp":case"Up":case"ArrowDown":case"Down":if(isShortcut=!0,"closed"===menuVisibility||"closing"===menuVisibility)this.toggleMenu(!0);else{const direction="ArrowUp"===event.key||"Up"===event.key?-1:1,startIndex=focusedOptionIndex+direction;this.focusNextEnabledOption(startIndex,direction)}break;case"Home":case"End":isShortcut=!0;const direction="Home"===event.key?1:-1,startIndex="Home"===event.key?0:numOptions-1;this.focusNextEnabledOption(startIndex,direction);break;case"Tab":"closed"!==menuVisibility&&(isShortcut=!0,this.handleMenuCloseOnKeyPress());break;case"Spacebar":case" ":isShortcut=!0,""!==this.keysSoFar?this.handleKeyboardTypeAhead(" ",numOptions):"closed"===menuVisibility||"closing"===menuVisibility?this.toggleMenu(!0):this.handleOptionSelection(focusedOptionIndex);break;case"Enter":isShortcut=!0,"closed"===menuVisibility||"closing"===menuVisibility?isShortcut=!1:this.handleOptionSelection(focusedOptionIndex)}isShortcut&&(event.stopPropagation(),event.preventDefault())})),this.setNormalizedOptions(),this.forwardedButtonRef=(0,_common.useForkRef)(props.buttonRef,this.localButtonRef)}componentDidMount(){this.updateStateFromValue()}componentDidUpdate(prevProps){const{options,value}=this.props;options!==prevProps.options&&(this.setNormalizedOptions(),this.updateStateFromValue()),value!==prevProps.value&&this.updateStateFromValue()}componentWillUnmount(){this.menuAnimationTimer&&clearTimeout(this.menuAnimationTimer),this.clearKeysSoFarTimer&&clearTimeout(this.clearKeysSoFarTimer)}render(){const{value,buttonRef,options,onKeyDown,onBlur,...elemProps}=this.props,{focusedOptionIndex,menuVisibility}=this.state,eventHandlers=this.areOptionsDefined()?{onClick:this.handleClick,onKeyDown:this.handleKeyDown,onClose:this.handleClose,onOptionSelection:this.handleOptionSelection}:{};return React.createElement(_SelectBase.SelectBase,_extends({forwardedButtonRef:this.forwardedButtonRef,localButtonRef:this.localButtonRef,focusedOptionIndex,inputRef:this.inputRef,menuRef:this.menuRef,menuVisibility,options:this.normalizedOptions,value},eventHandlers,elemProps))}}_defineProperty(SelectContainer,"ErrorType",_common.ErrorType),SelectContainer.displayName="SelectContainer";const Select=(0,_common.createComponent)("button")({displayName:"Select",Component:(props,ref,Element)=>React.createElement(SelectContainer,_extends({as:Element,buttonRef:ref},props)),subComponents:{ErrorType:_common.ErrorType}});exports.Select=Select;const __docs=[{name:"SelectProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/Select.tsx",description:"",declarations:[{name:"SelectProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/Select.tsx"}],tags:{deprecated:"⚠️ `SelectProps` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"object",properties:[{kind:"property",name:"options",required:!0,type:{kind:"array",value:{kind:"parenthesis",value:{kind:"union",value:[{kind:"symbol",name:"Option",value:"Option"},{kind:"primitive",value:"string"}]}}},description:"The options of the Select. `options` may be an array of objects, an array of strings,\nor an array that contains both objects and strings.\n\nIf `options` includes objects, each included object must adhere to the `Option` interface:\n\n* `data: object` (optional)\n* `disabled: boolean` (optional)\n* `id: string` (optional, a random `id` will be assigned to the object if one isn't provided)\n* `label: string` (optional, analogous to the text content of an `<option>`)\n* `value: string` (required, analogous to the `value` attribute of an `<option>`)\n\nIf `label` is omitted, the `value` will be used to render the option.\n\nThe `data` object is carried over to the `option` passed into the `renderOption` function where it may then be used to customize how each option is rendered.",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/Select.tsx"}],tags:{}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Select (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"renderOption",required:!1,type:{kind:"symbol",name:"RenderOptionFunction",value:"RenderOptionFunction"},description:"The function called to render the content of each option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `focused: boolean` (set to `true` if the option has keyboard focus)\n* `id: string`\n* `label: string`\n* `selected: boolean` (set to `true` if the option is selected)\n* `value: string`\n\nIf you omit the `renderOption` prop, each option will be rendered using a `defaultRenderOption` function provided by the component.",declarations:[{name:"renderOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderOption"}},{kind:"property",name:"renderSelected",required:!1,type:{kind:"symbol",name:"RenderSelectedFunction",value:"RenderSelectedFunction"},description:"The function called to render the selected option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `id: string`\n* `label: string`\n* `value: string`\n\nIf you omit the `renderSelected` prop, each option will be rendered using a `defaultRenderSelected` function provided by the component.",declarations:[{name:"renderSelected",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderSelected"}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the Select.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}}]}},{name:"Select",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/Select.tsx",description:"",declarations:[{name:"Select",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/Select.tsx"}],tags:{deprecated:"⚠️ `Select` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"enhancedComponent",componentType:"regular",displayName:"Select",props:[{kind:"property",name:"options",required:!0,type:{kind:"array",value:{kind:"parenthesis",value:{kind:"union",value:[{kind:"symbol",name:"Option",value:"Option"},{kind:"primitive",value:"string"}]}}},description:"The options of the Select. `options` may be an array of objects, an array of strings,\nor an array that contains both objects and strings.\n\nIf `options` includes objects, each included object must adhere to the `Option` interface:\n\n* `data: object` (optional)\n* `disabled: boolean` (optional)\n* `id: string` (optional, a random `id` will be assigned to the object if one isn't provided)\n* `label: string` (optional, analogous to the text content of an `<option>`)\n* `value: string` (required, analogous to the `value` attribute of an `<option>`)\n\nIf `label` is omitted, the `value` will be used to render the option.\n\nThe `data` object is carried over to the `option` passed into the `renderOption` function where it may then be used to customize how each option is rendered.",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/Select.tsx"}],tags:{}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Select (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"renderOption",required:!1,type:{kind:"symbol",name:"RenderOptionFunction",value:"RenderOptionFunction"},description:"The function called to render the content of each option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `focused: boolean` (set to `true` if the option has keyboard focus)\n* `id: string`\n* `label: string`\n* `selected: boolean` (set to `true` if the option is selected)\n* `value: string`\n\nIf you omit the `renderOption` prop, each option will be rendered using a `defaultRenderOption` function provided by the component.",declarations:[{name:"renderOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderOption"},defaultValue:{kind:"symbol",name:"defaultRenderOption",value:"defaultRenderOption"}},{kind:"property",name:"renderSelected",required:!1,type:{kind:"symbol",name:"RenderSelectedFunction",value:"RenderSelectedFunction"},description:"The function called to render the selected option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `id: string`\n* `label: string`\n* `value: string`\n\nIf you omit the `renderSelected` prop, each option will be rendered using a `defaultRenderSelected` function provided by the component.",declarations:[{name:"renderSelected",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderSelected"},defaultValue:{kind:"symbol",name:"defaultRenderSelected",value:"defaultRenderSelected"}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the Select.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"button",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"button",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"}}]}}],baseElement:{kind:"external",name:"button",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"},subComponents:[{name:"ErrorType",symbol:"ErrorType",description:"",declarations:[{name:"ErrorType",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/Select.tsx"}],tags:{}}]}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/select/lib/SelectBase.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SelectBase=exports.buttonBorderWidth=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_icon=__webpack_require__("./modules/react/icon/index.ts"),_SelectMenu=__webpack_require__("./modules/preview-react/select/lib/SelectMenu.tsx"),_SelectOption=__webpack_require__("./modules/preview-react/select/lib/SelectOption.tsx"),_scrolling=__webpack_require__("./modules/preview-react/select/lib/scrolling.ts"),_utils=__webpack_require__("./modules/preview-react/select/lib/utils.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.buttonBorderWidth=1;const menuIconSize=_tokens.space.m,SelectButton=(0,_common.styled)("button")({..._tokens.type.levels.subtext.large,border:`1px solid ${_tokens.inputColors.border}`,cursor:"default",display:"block",backgroundColor:_tokens.inputColors.background,borderRadius:_tokens.borderRadius.m,boxSizing:"border-box",height:_tokens.space.xl,outline:"none",overflow:"hidden",padding:`calc(${_tokens.space.xxs} - 1px)`,paddingRight:`calc(${_tokens.space.xxs} + ${_tokens.space.m} + (${_tokens.space.xxs} + 1px))`,textAlign:"left",textOverflow:"ellipsis",transition:"0.2s box-shadow, 0.2s border-color",whiteSpace:"nowrap",width:`calc((${_tokens.space.xxxl} * 7) / 2)`,"&::placeholder":{color:_tokens.inputColors.placeholder},"&:disabled":{backgroundColor:_tokens.inputColors.disabled.background,borderColor:_tokens.inputColors.disabled.border,color:_tokens.inputColors.disabled.text,"&::placeholder":{color:_tokens.inputColors.disabled.text}}},(({error,menuVisibility,theme})=>{const themedFocusOutlineColor=theme.canvas.palette.common.focusOutline,buttonFocusStyles={borderColor:themedFocusOutlineColor,boxShadow:`inset 0 0 0 1px ${themedFocusOutlineColor}`};return void 0===error?"closed"===menuVisibility||"closing"===menuVisibility?{"&:focus:not([disabled])":{...buttonFocusStyles},"&:hover:not([disabled]):not(:focus)":{borderColor:_tokens.inputColors.hoverBorder}}:{...buttonFocusStyles}:{...(0,_common.errorRing)(error,theme)}}),(({grow})=>grow&&{width:"100%"})),SelectMenuIcon=(0,_common.styled)(_icon.SystemIcon)({position:"absolute",top:_tokens.space.xxxs,right:_tokens.space.xxxs,padding:_tokens.space.xxxs,pointerEvents:"none","& path":{transition:"100ms fill"}}),SelectInput=(0,_common.styled)("input")({display:"none"}),SelectWrapper=(0,_common.styled)("div")({position:"relative"},(({grow})=>({display:grow?"block":"inline-block"})),(({disabled})=>({"&:hover .menu-icon path":{fill:disabled?void 0:_tokens.colors.licorice500}}))),defaultRenderOption=option=>_react.default.createElement("div",null,defaultRenderSelected(option));defaultRenderOption.displayName="defaultRenderOption";const defaultRenderSelected=option=>option.label,SelectBase=({"aria-labelledby":ariaLabelledBy,"aria-required":ariaRequired,as,forwardedButtonRef,localButtonRef,disabled,error,focusedOptionIndex=0,grow,inputRef,menuPlacement="bottom",menuRef,menuVisibility="closed",onChange,onKeyDown,onBlur,onClose,onOptionSelection,options,renderOption=defaultRenderOption,renderSelected=defaultRenderSelected,required,shouldMenuAutoFlip=!0,shouldMenuAutoFocus=!0,value,...elemProps})=>{const focusedOptionRef=_react.default.useRef(null),menuId=(0,_common.useUniqueId)();(0,_react.useLayoutEffect)((()=>{const focusedOption=focusedOptionRef.current;if(focusedOption){const animateId=requestAnimationFrame((()=>{(0,_scrolling.scrollIntoViewIfNeeded)(focusedOption,!1)}));return()=>{cancelAnimationFrame(animateId)}}}),[focusedOptionIndex]),(0,_react.useLayoutEffect)((()=>{const focusedOption=focusedOptionRef.current;if(focusedOption&&("opening"===menuVisibility||"opened"===menuVisibility)){const animateId=requestAnimationFrame((()=>{(0,_scrolling.scrollIntoViewIfNeeded)(focusedOption,!0)}));return()=>{cancelAnimationFrame(animateId)}}}),[menuVisibility]);const hasOptions=options.length>0,selectedOption=hasOptions?options[(0,_utils.getCorrectedIndexByValue)(options,value)]:null,selectedOptionValue=selectedOption?selectedOption.value:"";return _react.default.createElement(SelectWrapper,{grow,disabled},_react.default.createElement(SelectButton,_extends({"aria-expanded":"closed"!==menuVisibility?"true":void 0,"aria-haspopup":"listbox","aria-controls":"closed"!==menuVisibility?menuId:void 0,as,disabled,error,grow,menuVisibility,onKeyDown,onBlur:event=>{"closed"===menuVisibility?null==onBlur||onBlur(event):(event.preventDefault(),event.stopPropagation())},onKeyUp:e=>{e.preventDefault()},ref:forwardedButtonRef,type:"button",value:selectedOptionValue},elemProps),!!selectedOption&&renderSelected(selectedOption)),_react.default.createElement(SelectInput,{onChange,ref:inputRef,type:"text",value:selectedOptionValue}),hasOptions&&"closed"!==menuVisibility&&_react.default.createElement(_SelectMenu.SelectMenu,{"aria-activedescendant":options[focusedOptionIndex].id,"aria-labelledby":ariaLabelledBy,"aria-required":!(!ariaRequired&&!required)||void 0,buttonRef:localButtonRef,id:menuId,error,menuRef,onKeyDown,onClose,placement:menuPlacement,shouldAutoFlip:shouldMenuAutoFlip,shouldAutoFocus:shouldMenuAutoFocus,visibility:menuVisibility},(renderOption=>{const selectedOptionIndex=(0,_utils.getCorrectedIndexByValue)(options,value);return options.map(((option,index)=>{const optionProps={"aria-disabled":!!option.disabled||void 0,"aria-selected":selectedOptionIndex===index||void 0,error,focused:focusedOptionIndex===index,id:option.id,interactive:"opening"===menuVisibility||"opened"===menuVisibility,key:option.id,optionRef:focusedOptionIndex===index?focusedOptionRef:void 0,value:option.value,...onOptionSelection?{onClick:event=>{event.preventDefault(),onOptionSelection(index)}}:{}},normalizedOption={...option,focused:optionProps.focused,selected:!!optionProps["aria-selected"]};return _react.default.createElement(_SelectOption.SelectOption,optionProps,renderOption(normalizedOption))}))})(renderOption)),_react.default.createElement(SelectMenuIcon,{className:"menu-icon",icon:_canvasSystemIconsWeb.caretDownSmallIcon,color:disabled?_tokens.colors.licorice100:_tokens.colors.licorice200,colorHover:disabled?_tokens.colors.licorice100:_tokens.colors.licorice500,size:`${menuIconSize}rem`}))};exports.SelectBase=SelectBase,SelectBase.displayName="SelectBase";const __docs=[{name:"Option",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"Option",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `Option` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"object",properties:[{kind:"property",name:"data",required:!1,type:{kind:"object",properties:[],indexSignature:{kind:"indexSignature",name:"key",type:{kind:"primitive",value:"string"},value:{kind:"primitive",value:"any"}}},description:"",declarations:[{name:"data",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"disabled",required:!1,type:{kind:"primitive",value:"boolean"},description:"",declarations:[{name:"disabled",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"id",required:!1,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"label",required:!1,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"label",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"value",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}]}},{name:"NormalizedOption",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"NormalizedOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `NormalizedOption` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"object",properties:[{kind:"property",name:"data",required:!0,type:{kind:"object",properties:[],indexSignature:{kind:"indexSignature",name:"key",type:{kind:"primitive",value:"string"},value:{kind:"primitive",value:"any"}}},description:"",declarations:[{name:"data",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"disabled",required:!0,type:{kind:"primitive",value:"boolean"},description:"",declarations:[{name:"disabled",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"id",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"label",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"label",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"value",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}]}},{name:"RenderSelectedFunction",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"RenderSelectedFunction",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `RenderSelectedFunction` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"unknown",value:"unknown",text:"export interface RenderSelectedFunction {\n  (option: NormalizedOption): React.ReactNode;\n}"}},{name:"RenderableOption",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"RenderableOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `RenderableOption` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"object",properties:[{kind:"property",name:"focused",required:!0,type:{kind:"primitive",value:"boolean"},description:"",declarations:[{name:"focused",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"selected",required:!0,type:{kind:"primitive",value:"boolean"},description:"",declarations:[{name:"selected",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"data",required:!0,type:{kind:"object",properties:[],indexSignature:{kind:"indexSignature",name:"key",type:{kind:"primitive",value:"string"},value:{kind:"primitive",value:"any"}}},description:"",declarations:[{name:"data",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"disabled",required:!0,type:{kind:"primitive",value:"boolean"},description:"",declarations:[{name:"disabled",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"id",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"label",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"label",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"value",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}]}},{name:"RenderOptionFunction",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"RenderOptionFunction",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `RenderOptionFunction` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"unknown",value:"unknown",text:"export interface RenderOptionFunction {\n  (option: RenderableOption): React.ReactNode;\n}"}},{name:"CoreSelectBaseProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"CoreSelectBaseProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `CoreSelectBaseProps` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"object",properties:[{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Select (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"renderOption",required:!1,type:{kind:"symbol",name:"RenderOptionFunction",value:"RenderOptionFunction"},description:"The function called to render the content of each option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `focused: boolean` (set to `true` if the option has keyboard focus)\n* `id: string`\n* `label: string`\n* `selected: boolean` (set to `true` if the option is selected)\n* `value: string`\n\nIf you omit the `renderOption` prop, each option will be rendered using a `defaultRenderOption` function provided by the component.",declarations:[{name:"renderOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderOption"}},{kind:"property",name:"renderSelected",required:!1,type:{kind:"symbol",name:"RenderSelectedFunction",value:"RenderSelectedFunction"},description:"The function called to render the selected option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `id: string`\n* `label: string`\n* `value: string`\n\nIf you omit the `renderSelected` prop, each option will be rendered using a `defaultRenderSelected` function provided by the component.",declarations:[{name:"renderSelected",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderSelected"}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the Select.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}}]}},{name:"SelectBaseProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"SelectBaseProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `SelectBaseProps` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"object",properties:[{kind:"property",name:"forwardedButtonRef",required:!1,type:{kind:"external",name:"Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"symbol",name:"HTMLButtonElement",value:"HTMLButtonElement"}]},description:"The ref to be forwarded to the underlying button element. Use this to imperatively manipulate the button.",declarations:[{name:"forwardedButtonRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"localButtonRef",required:!1,type:{kind:"symbol",name:"React.RefObject",typeParameters:[{kind:"symbol",name:"HTMLButtonElement",value:"HTMLButtonElement"}],value:"RefObject<T>"},description:"The local ref to the underlying button element. Can be used in situations where RefObject is required (such as the Popper Menu).",declarations:[{name:"localButtonRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"focusedOptionIndex",required:!1,type:{kind:"primitive",value:"number"},description:"The index of the focused option in the SelectBase.",declarations:[{name:"focusedOptionIndex",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"0"}},{kind:"property",name:"inputRef",required:!1,type:{kind:"external",name:"Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"symbol",name:"HTMLInputElement",value:"HTMLInputElement"}]},description:"The ref to the underlying (hidden) text input element. Use this to imperatively manipulate the input.",declarations:[{name:"inputRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"menuPlacement",required:!1,type:{kind:"symbol",name:"MenuPlacement",value:"MenuPlacement"},description:"The placement of the SelectBase menu relative to its corresponding SelectButton.",declarations:[{name:"menuPlacement",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"'bottom'"}},{kind:"property",name:"menuRef",required:!1,type:{kind:"symbol",name:"React.RefObject",typeParameters:[{kind:"symbol",name:"HTMLUListElement",value:"HTMLUListElement"}],value:"RefObject<T>"},description:"The ref to the underlying menu element. Use this to imperatively manipulate the menu.",declarations:[{name:"menuRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"menuVisibility",required:!1,type:{kind:"symbol",name:"MenuVisibility",value:"MenuVisibility"},description:"The visibility state of the SelectBase menu.",declarations:[{name:"menuVisibility",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"'closed'"}},{kind:"property",name:"onKeyDown",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"event",type:{kind:"symbol",name:"React.KeyboardEvent",typeParameters:[{kind:"symbol",name:"HTMLElement",value:"HTMLElement"}],value:"KeyboardEvent<T>"},required:!0,rest:!1,description:"",declarations:[{name:"event",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when a key is pressed down while the SelectBase button or menu has focus.",declarations:[{name:"onKeyDown",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"onClose",required:!1,type:{kind:"function",parameters:[],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the menu is closed.",declarations:[{name:"onClose",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"onOptionSelection",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"index",type:{kind:"primitive",value:"number"},required:!0,rest:!1,description:"",declarations:[{name:"index",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when an option in the SelectBase is selected via a click or a keyboard shortcut. The `index` passed to the callback function represents the index of the option which was selected.",declarations:[{name:"onOptionSelection",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"options",required:!0,type:{kind:"array",value:{kind:"symbol",name:"NormalizedOption",value:"NormalizedOption"}},description:"The options of the SelectBase. `options` is an array of objects, each object adhering to the `NormalizedOption` interface:\n\n* `value: string` (required, analagous to the `value` attribute of an `<option>`)\n* `disabled: boolean` (required)\n* `id: string` (required)\n* `label: string` (required, analagous to the text content of an `<option>`)",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"shouldMenuAutoFlip",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, automatically flip the SelectBase menu to keep it visible if necessary (e.g., if the the menu would otherwise display below the visible area of the viewport).",declarations:[{name:"shouldMenuAutoFlip",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"true"}},{kind:"property",name:"shouldMenuAutoFocus",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, focus the SelectBase menu when it's shown. Set to false if you don't want to focus the menu automatically (for visual testing purposes, for example).",declarations:[{name:"shouldMenuAutoFocus",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"true"}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Select (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"renderOption",required:!1,type:{kind:"symbol",name:"RenderOptionFunction",value:"RenderOptionFunction"},description:"The function called to render the content of each option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `focused: boolean` (set to `true` if the option has keyboard focus)\n* `id: string`\n* `label: string`\n* `selected: boolean` (set to `true` if the option is selected)\n* `value: string`\n\nIf you omit the `renderOption` prop, each option will be rendered using a `defaultRenderOption` function provided by the component.",declarations:[{name:"renderOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderOption"}},{kind:"property",name:"renderSelected",required:!1,type:{kind:"symbol",name:"RenderSelectedFunction",value:"RenderSelectedFunction"},description:"The function called to render the selected option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `id: string`\n* `label: string`\n* `value: string`\n\nIf you omit the `renderSelected` prop, each option will be rendered using a `defaultRenderSelected` function provided by the component.",declarations:[{name:"renderSelected",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderSelected"}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the Select.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}},{kind:"property",name:"as",required:!1,type:{kind:"symbol",name:"React.ElementType",value:"ElementType<P, Tag>"},description:"",declarations:[{name:"as",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/utils/components.ts"}],tags:{}}]}},{name:"buttonBorderWidth",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"buttonBorderWidth",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{},type:{kind:"number",value:1}},{name:"SelectBase",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx",description:"",declarations:[{name:"SelectBase",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{deprecated:"⚠️ `SelectBase` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"component",props:[{kind:"property",name:"forwardedButtonRef",required:!1,type:{kind:"external",name:"Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"symbol",name:"HTMLButtonElement",value:"HTMLButtonElement"}]},description:"The ref to be forwarded to the underlying button element. Use this to imperatively manipulate the button.",declarations:[{name:"forwardedButtonRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"localButtonRef",required:!1,type:{kind:"symbol",name:"React.RefObject",typeParameters:[{kind:"symbol",name:"HTMLButtonElement",value:"HTMLButtonElement"}],value:"RefObject<T>"},description:"The local ref to the underlying button element. Can be used in situations where RefObject is required (such as the Popper Menu).",declarations:[{name:"localButtonRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"focusedOptionIndex",required:!1,type:{kind:"primitive",value:"number"},description:"The index of the focused option in the SelectBase.",declarations:[{name:"focusedOptionIndex",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"0"},defaultValue:{kind:"number",value:0}},{kind:"property",name:"inputRef",required:!1,type:{kind:"external",name:"Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"symbol",name:"HTMLInputElement",value:"HTMLInputElement"}]},description:"The ref to the underlying (hidden) text input element. Use this to imperatively manipulate the input.",declarations:[{name:"inputRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"menuPlacement",required:!1,type:{kind:"symbol",name:"MenuPlacement",value:"MenuPlacement"},description:"The placement of the SelectBase menu relative to its corresponding SelectButton.",declarations:[{name:"menuPlacement",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"'bottom'"},defaultValue:{kind:"string",value:"bottom"}},{kind:"property",name:"menuRef",required:!1,type:{kind:"symbol",name:"React.RefObject",typeParameters:[{kind:"symbol",name:"HTMLUListElement",value:"HTMLUListElement"}],value:"RefObject<T>"},description:"The ref to the underlying menu element. Use this to imperatively manipulate the menu.",declarations:[{name:"menuRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"menuVisibility",required:!1,type:{kind:"symbol",name:"MenuVisibility",value:"MenuVisibility"},description:"The visibility state of the SelectBase menu.",declarations:[{name:"menuVisibility",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"'closed'"},defaultValue:{kind:"string",value:"closed"}},{kind:"property",name:"onKeyDown",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"event",type:{kind:"symbol",name:"React.KeyboardEvent",typeParameters:[{kind:"symbol",name:"HTMLElement",value:"HTMLElement"}],value:"KeyboardEvent<T>"},required:!0,rest:!1,description:"",declarations:[{name:"event",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when a key is pressed down while the SelectBase button or menu has focus.",declarations:[{name:"onKeyDown",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"onClose",required:!1,type:{kind:"function",parameters:[],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the menu is closed.",declarations:[{name:"onClose",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"onOptionSelection",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"index",type:{kind:"primitive",value:"number"},required:!0,rest:!1,description:"",declarations:[{name:"index",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when an option in the SelectBase is selected via a click or a keyboard shortcut. The `index` passed to the callback function represents the index of the option which was selected.",declarations:[{name:"onOptionSelection",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"options",required:!0,type:{kind:"array",value:{kind:"symbol",name:"NormalizedOption",value:"NormalizedOption"}},description:"The options of the SelectBase. `options` is an array of objects, each object adhering to the `NormalizedOption` interface:\n\n* `value: string` (required, analagous to the `value` attribute of an `<option>`)\n* `disabled: boolean` (required)\n* `id: string` (required)\n* `label: string` (required, analagous to the text content of an `<option>`)",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"shouldMenuAutoFlip",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, automatically flip the SelectBase menu to keep it visible if necessary (e.g., if the the menu would otherwise display below the visible area of the viewport).",declarations:[{name:"shouldMenuAutoFlip",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"true"},defaultValue:{kind:"boolean",value:!0}},{kind:"property",name:"shouldMenuAutoFocus",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, focus the SelectBase menu when it's shown. Set to false if you don't want to focus the menu automatically (for visual testing purposes, for example).",declarations:[{name:"shouldMenuAutoFocus",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"true"},defaultValue:{kind:"boolean",value:!0}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Select (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"renderOption",required:!1,type:{kind:"symbol",name:"RenderOptionFunction",value:"RenderOptionFunction"},description:"The function called to render the content of each option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `focused: boolean` (set to `true` if the option has keyboard focus)\n* `id: string`\n* `label: string`\n* `selected: boolean` (set to `true` if the option is selected)\n* `value: string`\n\nIf you omit the `renderOption` prop, each option will be rendered using a `defaultRenderOption` function provided by the component.",declarations:[{name:"renderOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderOption"},defaultValue:{kind:"symbol",name:"defaultRenderOption",value:"defaultRenderOption"}},{kind:"property",name:"renderSelected",required:!1,type:{kind:"symbol",name:"RenderSelectedFunction",value:"RenderSelectedFunction"},description:"The function called to render the selected option.\n\nThe `option` argument passed to the function is an object which contains the following:\n\n* `data: object` (data object carried over from the corresponding option originally passed into the component)\n* `disabled: boolean`\n* `id: string`\n* `label: string`\n* `value: string`\n\nIf you omit the `renderSelected` prop, each option will be rendered using a `defaultRenderSelected` function provided by the component.",declarations:[{name:"renderSelected",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{default:"defaultRenderSelected"},defaultValue:{kind:"symbol",name:"defaultRenderSelected",value:"defaultRenderSelected"}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the Select.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}},{kind:"property",name:"as",required:!1,type:{kind:"symbol",name:"React.ElementType",value:"ElementType<P, Tag>"},description:"",declarations:[{name:"as",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/utils/components.ts"}],tags:{}}]}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/select/lib/SelectMenu.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SelectMenu=exports.menuAnimationDuration=void 0;var _react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_popup=__webpack_require__("./modules/react/popup/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}exports.menuAnimationDuration=200;const menuBorderStyles=(theme,error)=>{let borderColor=theme.canvas.palette.common.focusOutline,dividerBorderColor=borderColor,dividerBorderWidth=1;error===_common.ErrorType.Error?(borderColor=theme.canvas.palette.error.main,dividerBorderColor=borderColor):error===_common.ErrorType.Alert&&(borderColor=theme.canvas.palette.alert.darkest,dividerBorderColor=theme.canvas.palette.alert.main,dividerBorderWidth=2);const dividerBorder=`${dividerBorderWidth}px solid ${dividerBorderColor}`;return{borderColor,"&:before":{backgroundColor:_tokens.colors.soap400,borderLeft:dividerBorder,borderRight:dividerBorder,boxSizing:"border-box",content:'""',display:"block",height:1,position:"absolute",width:"100%",'[data-popper-placement="bottom"] &':{top:0},'[data-popper-placement="top"] &':{bottom:0}}}},menuListBorderStyles=(theme,error)=>{let borderColor=theme.canvas.palette.common.focusOutline,borderWidth=1;error===_common.ErrorType.Error?borderColor=theme.canvas.palette.error.main:error===_common.ErrorType.Alert&&(borderColor=theme.canvas.palette.alert.main,borderWidth=2);const border=`${borderWidth}px solid ${borderColor}`;return{borderLeft:border,borderRight:border,'[data-popper-placement="bottom"] &':{borderBottom:border},'[data-popper-placement="top"] &':{borderTop:border}}},Menu=(0,_common.styled)("div")({backgroundColor:_tokens.colors.frenchVanilla100,border:`1px solid ${_tokens.inputColors.border}`,boxSizing:"border-box",position:"relative",transition:"opacity 200ms",'[data-popper-placement="bottom"] &':{borderRadius:`0 0 ${_tokens.borderRadius.m} ${_tokens.borderRadius.m}`,borderTop:0},'[data-popper-placement="top"] &':{borderRadius:`${_tokens.borderRadius.m} ${_tokens.borderRadius.m} 0 0`,borderBottom:0}},(({error,theme})=>({...menuBorderStyles(theme,error)})),(({visibility})=>({opacity:"opening"===visibility||"opened"===visibility||"close"===visibility?1:0})),(({width})=>({width}))),MenuList=(0,_common.styled)("ul")({listStyle:"none",margin:0,maxHeight:200,outline:"none",overflowY:"auto",padding:0},(({error,theme})=>({...menuListBorderStyles(theme,error)}))),generatePopperOptions=props=>{const{menuRef,placement,shouldAutoFlip,shouldAutoFocus}=props;let fallbackPlacements=[];shouldAutoFlip&&(fallbackPlacements="top"===placement?["bottom"]:["top"]);return{modifiers:[{name:"flip",options:{fallbackPlacements}},{name:"offset",options:{offset:()=>[0,-parseInt(_tokens.borderRadius.m,10)]}},{name:"preventOverflow",options:{mainAxis:!1}},{name:"fallbackModifier",enabled:!1}],onFirstUpdate:()=>{shouldAutoFocus&&menuRef&&menuRef.current&&menuRef.current.focus()}}},SelectMenu=({buttonRef,children,error,menuRef,onClose,placement="bottom",shouldAutoFlip=!0,shouldAutoFocus=!0,visibility="closed",...elemProps})=>{const model=(0,_popup.usePopupModel)({initialVisibility:"visible",returnFocusRef:buttonRef,onHide:onClose}),[width,setWidth]=(0,_react.useState)(0),handleWidthChange=(0,_react.useCallback)((()=>{if(buttonRef&&buttonRef.current&&"closed"!==visibility){const newMenuWidth=buttonRef.current.clientWidth+2;setWidth(newMenuWidth)}}),[buttonRef,visibility]);return(0,_react.useLayoutEffect)((()=>{handleWidthChange()}),[handleWidthChange]),(0,_react.useEffect)((()=>(window.addEventListener("resize",handleWidthChange),()=>{window.removeEventListener("resize",handleWidthChange)})),[handleWidthChange]),(0,_popup.useCloseOnEscape)(model),(0,_popup.useCloseOnOutsideClick)(model),(0,_popup.useReturnFocus)(model),(0,_popup.useTransferOnFullscreenExit)(model),_react.default.createElement(_popup.Popper,{placement,anchorElement:buttonRef,popperOptions:generatePopperOptions({menuRef,placement,shouldAutoFlip,shouldAutoFocus}),ref:model.state.stackRef},_react.default.createElement(Menu,{error,visibility,width},_react.default.createElement(MenuList,_extends({error,ref:menuRef,role:"listbox",tabIndex:-1},elemProps),children)))};exports.SelectMenu=SelectMenu,SelectMenu.displayName="SelectMenu";const __docs=[{name:"menuAnimationDuration",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx",description:"",declarations:[{name:"menuAnimationDuration",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{},type:{kind:"number",value:200}},{name:"SelectMenu",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx",description:"",declarations:[{name:"SelectMenu",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{deprecated:"⚠️ `SelectMenu` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"component",props:[{kind:"property",name:"buttonRef",required:!1,type:{kind:"symbol",name:"React.RefObject",typeParameters:[{kind:"symbol",name:"HTMLButtonElement",value:"HTMLButtonElement"}],value:"RefObject<T>"},description:"The ref to the anchor button element. Required to anchor the menu.",declarations:[{name:"buttonRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{}},{kind:"property",name:"menuRef",required:!1,type:{kind:"symbol",name:"React.RefObject",typeParameters:[{kind:"symbol",name:"HTMLUListElement",value:"HTMLUListElement"}],value:"RefObject<T>"},description:"The ref to the underlying menu/listbox element. Use this to imperatively manipulate the menu.",declarations:[{name:"menuRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{}},{kind:"property",name:"onClose",required:!1,type:{kind:"function",parameters:[],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the menu is closed.",declarations:[{name:"onClose",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{}},{kind:"property",name:"placement",required:!1,type:{kind:"symbol",name:"MenuPlacement",value:"MenuPlacement"},description:"The placement of the SelectMenu relative to its corresponding button.",declarations:[{name:"placement",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{default:"'bottom'"},defaultValue:{kind:"string",value:"bottom"}},{kind:"property",name:"shouldAutoFlip",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, automatically flip the SelectMenu to keep it visible if necessary (e.g., if the the SelectMenu would otherwise display below the visible area of the viewport).",declarations:[{name:"shouldAutoFlip",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{default:"true"},defaultValue:{kind:"boolean",value:!0}},{kind:"property",name:"shouldAutoFocus",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, focus the SelectMenu when it's shown. Set to false if you don't want to focus the SelectMenu automatically (for visual testing purposes, for example).",declarations:[{name:"shouldAutoFocus",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{default:"true"},defaultValue:{kind:"boolean",value:!0}},{kind:"property",name:"visibility",required:!1,type:{kind:"symbol",name:"MenuVisibility",value:"MenuVisibility"},description:"The visibility state of the SelectMenu.",declarations:[{name:"visibility",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectMenu.tsx"}],tags:{default:"'closed'"},defaultValue:{kind:"string",value:"closed"}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the Select (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectBase.tsx"}],tags:{}}]}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/select/lib/SelectOption.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SelectOption=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const activeStyles=theme=>{const activeBgColor=theme.canvas.palette.primary.main;return{backgroundColor:activeBgColor,color:(0,_common.pickForegroundColor)(activeBgColor)}},Option=(0,_common.styled)("li")({..._tokens.type.levels.subtext.large,cursor:"default",listStyle:"none",minHeight:_tokens.type.levels.subtext.large.lineHeight,textAlign:"left"},(({"aria-disabled":disabled,focused,interactive,theme})=>{if(disabled)return{color:_tokens.colors.licorice100};if(focused)return{...activeStyles(theme)};{const selectedBgColor=theme.canvas.palette.primary.lightest,selectedStyles={'&[aria-selected="true"]':{backgroundColor:selectedBgColor,color:(0,_common.pickForegroundColor)(selectedBgColor)}};return{...interactive?{"&:hover":{backgroundColor:_tokens.commonColors.hoverBackground},'&:active, &:active[aria-selected="true"]':{...activeStyles(theme)}}:{},...selectedStyles}}}),(({error})=>({padding:`6px ${error===_common.ErrorType.Alert?5:6}px`}))),SelectOption=({children,focused=!1,interactive=!0,optionRef,value,...elemProps})=>React.createElement(Option,_extends({"data-value":value,focused,interactive,ref:optionRef,role:"option"},elemProps),children);exports.SelectOption=SelectOption,SelectOption.displayName="SelectOption";const __docs=[{name:"SelectOptionProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx",description:"",declarations:[{name:"SelectOptionProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{deprecated:"⚠️ `SelectOptionProps` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"object",properties:[{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the SelectOption (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"focused",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the SelectOption to the focused state.",declarations:[{name:"focused",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{default:"false"}},{kind:"property",name:"id",required:!1,type:{kind:"primitive",value:"string"},description:"The HTML `id` of the SelectOption.",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"interactive",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the SelectOption to the interactive state. Non-interactive SelectOptions should not give any visual cues that they are interactive (e.g., remove hover styling).",declarations:[{name:"interactive",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{default:"true"}},{kind:"property",name:"optionRef",required:!1,type:{kind:"external",name:"Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"symbol",name:"HTMLLIElement",value:"HTMLLIElement"}]},description:"The ref to the list item that the styled component renders. Use this to imperatively manipulate the SelectOption (e.g., to scroll to it if it's out of view in the Select menu).",declarations:[{name:"optionRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the SelectOption.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}}]}},{name:"SelectOption",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx",description:"",declarations:[{name:"SelectOption",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{deprecated:"⚠️ `SelectOption` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"component",props:[{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the SelectOption (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"focused",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the SelectOption to the focused state.",declarations:[{name:"focused",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{default:"false"},defaultValue:{kind:"boolean",value:!1}},{kind:"property",name:"id",required:!1,type:{kind:"primitive",value:"string"},description:"The HTML `id` of the SelectOption.",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"interactive",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the SelectOption to the interactive state. Non-interactive SelectOptions should not give any visual cues that they are interactive (e.g., remove hover styling).",declarations:[{name:"interactive",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{default:"true"},defaultValue:{kind:"boolean",value:!0}},{kind:"property",name:"optionRef",required:!1,type:{kind:"external",name:"Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"symbol",name:"HTMLLIElement",value:"HTMLLIElement"}]},description:"The ref to the list item that the styled component renders. Use this to imperatively manipulate the SelectOption (e.g., to scroll to it if it's out of view in the Select menu).",declarations:[{name:"optionRef",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the SelectOption.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/SelectOption.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}}]}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/select/lib/scrolling.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.scrollIntoViewIfNeeded=void 0;exports.scrollIntoViewIfNeeded=(elem,centerIfNeeded=!0)=>{const parent=elem.parentElement;if(elem&&parent){const parentComputedStyle=window.getComputedStyle(parent,null),parentBorderTopWidth=parseInt(parentComputedStyle.getPropertyValue("border-top-width"),10),overTop=elem.offsetTop<parent.scrollTop+parentBorderTopWidth,overBottom=elem.offsetTop+elem.offsetHeight>parent.scrollTop+parentBorderTopWidth+parent.clientHeight;(overTop||overBottom)&&centerIfNeeded&&(parent.scrollTop=Math.floor(elem.offsetTop-parent.clientHeight/2-parentBorderTopWidth+elem.clientHeight/2)),!overTop&&!overBottom||centerIfNeeded||(parent.scrollTop=overBottom?elem.clientHeight-(parent.clientHeight+parentBorderTopWidth-elem.offsetTop):elem.offsetTop-parentBorderTopWidth)}};const __docs=[{name:"scrollIntoViewIfNeeded",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/scrolling.ts",description:"",declarations:[{name:"scrollIntoViewIfNeeded",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/scrolling.ts"}],tags:{deprecated:"⚠️ `scrollIntoViewIfNeeded` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"function",parameters:[{kind:"parameter",name:"elem",type:{kind:"symbol",name:"HTMLElement",value:"HTMLElement"},required:!0,rest:!1,description:"",declarations:[{name:"elem",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/scrolling.ts"}],tags:{}},{kind:"parameter",name:"centerIfNeeded",defaultValue:{kind:"boolean",value:!0},type:{kind:"primitive",value:"boolean"},required:!1,rest:!1,description:"",declarations:[{name:"centerIfNeeded",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/scrolling.ts"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/preview-react/select/lib/utils.ts":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getCorrectedIndexByValue=exports.getIndexByValue=void 0;const getIndexByValue=(options,value)=>{if(!options||void 0===value)return-1;for(let i=0;i<options.length;i++)if(options[i].value===value)return i;return-1};exports.getIndexByValue=getIndexByValue;exports.getCorrectedIndexByValue=(options,value)=>{const indexByValue=getIndexByValue(options,value);return-1===indexByValue?0:indexByValue};const __docs=[{name:"getIndexByValue",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts",description:"",declarations:[{name:"getIndexByValue",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts"}],tags:{deprecated:"⚠️ `getIndexByValue` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"function",parameters:[{kind:"parameter",name:"options",type:{kind:"array",value:{kind:"symbol",name:"NormalizedOption",value:"NormalizedOption"}},required:!0,rest:!1,description:"",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts"}],tags:{}},{kind:"parameter",name:"value",type:{kind:"union",value:[{kind:"primitive",value:"string"},{kind:"primitive",value:"undefined"}]},required:!1,rest:!1,description:"",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"number"}}},{name:"getCorrectedIndexByValue",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts",description:"",declarations:[{name:"getCorrectedIndexByValue",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts"}],tags:{deprecated:"⚠️ `getCorrectedIndexByValue` in Preview has been deprecated and will be removed in a future major version. Please use [`Select` in Main](https://workday.github.io/canvas-kit/?path=/docs/components-inputs-select--basic) instead."},type:{kind:"function",parameters:[{kind:"parameter",name:"options",type:{kind:"array",value:{kind:"symbol",name:"NormalizedOption",value:"NormalizedOption"}},required:!0,rest:!1,description:"",declarations:[{name:"options",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts"}],tags:{}},{kind:"parameter",name:"value",type:{kind:"union",value:[{kind:"primitive",value:"string"},{kind:"primitive",value:"undefined"}]},required:!1,rest:!1,description:"",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/preview-react/select/lib/utils.ts"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"number"}}}];var _window$__updateDocs,_window;window.__updateDocs?null===(_window$__updateDocs=(_window=window).__updateDocs)||void 0===_window$__updateDocs||_window$__updateDocs.call(_window,__docs):window.__docs=(window.__docs||[]).concat(__docs)}}]);