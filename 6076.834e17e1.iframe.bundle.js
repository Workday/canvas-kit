"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[6076],{"./modules/react/color-picker/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});var _ColorInput=__webpack_require__("./modules/react/color-picker/lib/ColorInput.tsx");Object.keys(_ColorInput).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_ColorInput[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _ColorInput[key]}}))}));var _ColorPreview=__webpack_require__("./modules/react/color-picker/lib/ColorPreview.tsx");Object.keys(_ColorPreview).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_ColorPreview[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _ColorPreview[key]}}))}));var _ColorSwatch=__webpack_require__("./modules/react/color-picker/lib/parts/ColorSwatch.tsx");Object.keys(_ColorSwatch).forEach((function(key){"default"!==key&&"__esModule"!==key&&(key in exports&&exports[key]===_ColorSwatch[key]||Object.defineProperty(exports,key,{enumerable:!0,get:function(){return _ColorSwatch[key]}}))}));const __docs=[];window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/color-picker/lib/ColorInput.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ColorInput=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_tokens=__webpack_require__("./modules/react/tokens/index.ts"),_textInput=__webpack_require__("./modules/react/text-input/index.ts"),_ColorSwatch=__webpack_require__("./modules/react/color-picker/lib/parts/ColorSwatch.tsx");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const CustomHexInput=(0,_common.styled)(_textInput.TextInput)({boxSizing:"border-box",minWidth:116,width:116,fontFamily:_tokens.type.properties.fontFamilies.monospace,"&:focus::placeholder":{color:"transparent"}},(({grow})=>grow&&{minWidth:"100%",width:"100%"}),(({disabled})=>({backgroundColor:disabled?_tokens.colors.soap200:""})),(({theme})=>({paddingLeft:theme.canvas.direction===_common.ContentDirection.LTR?"46px":"calc(100% - 86px) /* @noflip */"}))),ColorInputContainer=(0,_common.styled)("div")({position:"relative",width:116},(({grow})=>grow&&{minWidth:"100%",width:"100%"})),PoundSignPrefix=(0,_common.styled)("span")({position:"absolute",top:10,..._tokens.type.levels.subtext.large,fontFamily:_tokens.type.properties.fontFamilies.monospace},(({disabled})=>({color:disabled?_tokens.inputColors.disabled.text:void 0})),(({theme})=>({left:theme.canvas.direction===_common.ContentDirection.LTR?"36px":"88px"}))),SwatchTile=(0,_common.styled)(_ColorSwatch.ColorSwatch)({position:"absolute",top:"10px",left:_tokens.space.xxs,boxShadow:"inset 0 0 0 1px rgba(0,0,0,0.25)",pointerEvents:"none"}),isValidHex=value=>/(^#?[0-9A-F]{3}$)|(^#?[0-9A-F]{6}$)/i.test(value),formatValue=value=>value.replace(/#/g,"").substring(0,6),__docs=(exports.ColorInput=(0,_common.createComponent)("input")({displayName:"ColorInput",Component:({placeholder="FFFFFF",value="",showCheck,onChange,onValidColorChange,disabled,error,grow,...elemProps},ref,Element)=>{const formattedValue=formatValue(value);return React.createElement(ColorInputContainer,{grow},React.createElement(CustomHexInput,_extends({dir:"ltr",ref,as:Element,onChange:e=>{const value=formatValue(e.currentTarget.value);onChange&&onChange(e),isValidHex(value)&&onValidColorChange&&onValidColorChange(`#${(0,_common.expandHex)(value)}`)},type:"text",placeholder:value?void 0:placeholder,value:formattedValue,error,spellCheck:!1,disabled,grow,maxLength:7},elemProps)),React.createElement(SwatchTile,{showCheck,color:isValidHex(formattedValue)?`#${formattedValue}`:""}),React.createElement(PoundSignPrefix,{"aria-hidden":!0,disabled},"#"))}}),[{name:"ColorInputProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx",description:"",declarations:[{name:"ColorInputProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the ColorInput.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"''"}},{kind:"property",name:"showCheck",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, show a checkmark in the swatch tile when a custom hex color is entered in the ColorInput.",declarations:[{name:"showCheck",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"false"}},{kind:"property",name:"placeholder",required:!1,type:{kind:"primitive",value:"string"},description:"The placeholder text of the ColorInput.",declarations:[{name:"placeholder",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"FFFFFF"}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the ColorInput (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}},{kind:"property",name:"disabled",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the ColorInput to the disabled state.",declarations:[{name:"disabled",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"false"}},{kind:"property",name:"onChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"event",type:{kind:"symbol",name:"React.ChangeEvent",typeParameters:[{kind:"symbol",name:"HTMLInputElement",value:"HTMLInputElement"}],value:"ChangeEvent<T>"},required:!0,rest:!1,description:"",declarations:[{name:"event",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the ColorInput state changes.",declarations:[{name:"onChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}},{kind:"property",name:"onValidColorChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"color",type:{kind:"primitive",value:"string"},required:!0,rest:!1,description:"",declarations:[{name:"color",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when a valid hex value is entered in the ColorInput. The `color` argument passed to the callback function is prefixed with a hash and expanded if necessary (e.g., `03F` is converted to `#0033FF`).",declarations:[{name:"onValidColorChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the TextInput.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/text-input/lib/TextInput.tsx"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}},{name:"ColorInput",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx",description:"",declarations:[{name:"ColorInput",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"ColorInput",props:[{kind:"property",name:"value",required:!1,type:{kind:"primitive",value:"string"},description:"The value of the ColorInput.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"''"},defaultValue:{kind:"string",value:""}},{kind:"property",name:"showCheck",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, show a checkmark in the swatch tile when a custom hex color is entered in the ColorInput.",declarations:[{name:"showCheck",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"false"},defaultValue:{kind:"boolean",value:!1}},{kind:"property",name:"placeholder",required:!1,type:{kind:"primitive",value:"string"},description:"The placeholder text of the ColorInput.",declarations:[{name:"placeholder",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"FFFFFF"},defaultValue:{kind:"string",value:"FFFFFF"}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the ColorInput (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}},{kind:"property",name:"disabled",required:!1,type:{kind:"primitive",value:"boolean"},description:"If true, set the ColorInput to the disabled state.",declarations:[{name:"disabled",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{default:"false"},defaultValue:{kind:"boolean",value:!1}},{kind:"property",name:"onChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"event",type:{kind:"symbol",name:"React.ChangeEvent",typeParameters:[{kind:"symbol",name:"HTMLInputElement",value:"HTMLInputElement"}],value:"ChangeEvent<T>"},required:!0,rest:!1,description:"",declarations:[{name:"event",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when the ColorInput state changes.",declarations:[{name:"onChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}},{kind:"property",name:"onValidColorChange",required:!1,type:{kind:"function",parameters:[{kind:"parameter",name:"color",type:{kind:"primitive",value:"string"},required:!0,rest:!1,description:"",declarations:[{name:"color",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}}],members:[],returnType:{kind:"primitive",value:"void"}},description:"The function called when a valid hex value is entered in the ColorInput. The `color` argument passed to the callback function is prefixed with a hash and expanded if necessary (e.g., `03F` is converted to `#0033FF`).",declarations:[{name:"onValidColorChange",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorInput.tsx"}],tags:{}},{kind:"property",name:"theme",required:!1,type:{kind:"symbol",name:"EmotionCanvasTheme",value:"EmotionCanvasTheme"},description:"",declarations:[{name:"theme",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/theming/types.ts"}],tags:{}},{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the TextInput.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/text-input/lib/TextInput.tsx"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}}]}}],baseElement:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/color-picker/lib/ColorPreview.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ColorPreview=void 0;var React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_ColorInput=__webpack_require__("./modules/react/color-picker/lib/ColorInput.tsx"),_common=__webpack_require__("./modules/react/common/index.ts"),_styled=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_tokens=__webpack_require__("./modules/react/tokens/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const StyledColorPreview=(0,_styled.default)(_ColorInput.ColorInput)({backgroundColor:_tokens.colors.frenchVanilla100,borderColor:_tokens.colors.frenchVanilla100,pointerEvents:"none"}),__docs=(exports.ColorPreview=(0,_common.createComponent)("input")({displayName:"ColorPreview",Component:({id,value,...elemProps},ref,Element)=>React.createElement(StyledColorPreview,_extends({ref,as:Element,id,value,readOnly:!0,placeholder:""},elemProps))}),[{name:"ColorPreviewProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx",description:"",declarations:[{name:"ColorPreviewProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"value",required:!0,type:{kind:"primitive",value:"string"},description:"The value of the ColorPreview.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx"}],tags:{}},{kind:"property",name:"id",required:!1,type:{kind:"primitive",value:"string"},description:"The HTML `id` of the underlying text input element.",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx"}],tags:{}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the TextInput (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/text-input/lib/TextInput.tsx"}],tags:{}},{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the TextInput.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/text-input/lib/TextInput.tsx"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}}]}},{name:"ColorPreview",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx",description:"",declarations:[{name:"ColorPreview",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx"}],tags:{},type:{kind:"enhancedComponent",componentType:"regular",displayName:"ColorPreview",props:[{kind:"property",name:"value",required:!0,type:{kind:"primitive",value:"string"},description:"The value of the ColorPreview.",declarations:[{name:"value",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx"}],tags:{}},{kind:"property",name:"id",required:!1,type:{kind:"primitive",value:"string"},description:"The HTML `id` of the underlying text input element.",declarations:[{name:"id",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/ColorPreview.tsx"}],tags:{}},{kind:"property",name:"error",required:!1,type:{kind:"symbol",name:"ErrorType",value:"ErrorType"},description:"The type of error associated with the TextInput (if applicable).",declarations:[{name:"error",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/text-input/lib/TextInput.tsx"}],tags:{}},{kind:"property",name:"width",required:!1,type:{kind:"union",value:[{kind:"primitive",value:"number"},{kind:"primitive",value:"string"}]},description:"The width of the TextInput.",declarations:[{name:"width",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/text-input/lib/TextInput.tsx"}],tags:{}},{kind:"property",name:"grow",required:!1,type:{kind:"primitive",value:"boolean"},description:"True if the component should grow to its container's width. False otherwise.",declarations:[{name:"grow",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/common/lib/types.ts"}],tags:{}},{kind:"property",name:"cs",required:!1,type:{kind:"symbol",name:"CSToPropsInput",value:"CSToPropsInput"},description:"The `cs` prop takes in a single value or an array of values. You can pass the CSS class name\nreturned by {@link createStyles}, or the result of {@link createVars} and\n{@link createModifiers}. If you're extending a component already using `cs`, you can merge that\nprop in as well. Any style that is passed to the `cs` prop will override style props. If you\nwish to have styles that are overridden by the `css` prop, or styles added via the `styled`\nAPI, use {@link handleCsProp} wherever `elemProps` is used. If your component needs to also\nhandle style props, use {@link mergeStyles } instead.\n\n\n```tsx\nimport {handleCsProp} from '@workday/canvas-kit-styling';\nimport {mergeStyles} from '@workday/canvas-kit-react/layout';\n\n// ...\n\n// `handleCsProp` handles compat mode with Emotion's runtime APIs. `mergeStyles` has the same\n// function signature, but adds support for style props.\n\nreturn (\n <Element\n   {...handleCsProp(elemProps, [\n     myStyles,\n     myModifiers({ size: 'medium' }),\n     myVars({ backgroundColor: 'red' })\n   ])}\n >\n   {children}\n </Element>\n)\n```",declarations:[{name:"cs",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/styling/lib/cs.ts"}],tags:{}},{kind:"property",name:"children",description:"",tags:{},declarations:[],type:{kind:"external",name:"React.ReactNode",url:"https://reactjs.org/docs/rendering-elements.html"}},{kind:"property",name:"as",description:"Optional override of the default element used by the component. Any valid tag or Component. If you provided a Component, this component should forward the ref using `React.forwardRef`and spread extra props to a root element.\n\n**Note:** Not all elements make sense and some elements may cause accessibility issues. Change this value with care.",tags:{},declarations:[],type:{kind:"external",name:"React.ElementType",url:"https://developer.mozilla.org/en-US/docs/Web/API/element"},defaultValue:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}},{kind:"property",name:"ref",description:"Optional ref. If the component represents an element, this ref will be a reference to the real DOM element of the component. If `as` is set to an element, it will be that element. If `as` is a component, the reference will be to that component (or element if the component uses `React.forwardRef`).",tags:{},declarations:[],type:{kind:"external",name:"React.Ref",url:"https://reactjs.org/docs/refs-and-the-dom.html",typeParameters:[{kind:"typeParameter",name:"R",required:!0,defaultValue:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}}]}}],baseElement:{kind:"external",name:"input",url:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"}}}]);window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)},"./modules/react/color-picker/lib/parts/ColorSwatch.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ColorSwatch=void 0;var _tokens=__webpack_require__("./modules/react/tokens/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_chromaJs=_interopRequireDefault(__webpack_require__("./node_modules/chroma-js/dist/chroma.cjs")),React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_styled=_interopRequireDefault(__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js")),_canvasSystemIconsWeb=__webpack_require__("./node_modules/@workday/canvas-system-icons-web/dist/es6/index.js"),_icon=__webpack_require__("./modules/react/icon/index.ts");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Container=(0,_styled.default)("div")({width:20,height:20,borderRadius:_tokens.borderRadius.s,display:"flex",alignItems:"center",justifyContent:"center","& > *":{margin:-2}},(({color,showCheck})=>{return{backgroundColor:color,boxShadow:showCheck||(color1=color,color2=_tokens.colors.frenchVanilla100,_chromaJs.default.valid(color1)&&_chromaJs.default.valid(color2)&&(0,_chromaJs.default)(color1).hex()===(0,_chromaJs.default)(color2).hex())?"inset 0px 0px 0px 1px rgba(0, 0, 0, 0.25)":void 0};var color1,color2})),ColorSwatch=({color,showCheck=!1,...elemProps})=>React.createElement(Container,_extends({color,showCheck},elemProps),showCheck&&React.createElement(_icon.SystemIcon,{fill:(0,_common.pickForegroundColor)(color),fillHover:(0,_common.pickForegroundColor)(color),icon:_canvasSystemIconsWeb.checkSmallIcon,color}));exports.ColorSwatch=ColorSwatch,ColorSwatch.displayName="ColorSwatch";const __docs=[{name:"ColorSwatchProps",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx",description:"",declarations:[{name:"ColorSwatchProps",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx"}],tags:{},type:{kind:"object",properties:[{kind:"property",name:"color",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"color",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx"}],tags:{}},{kind:"property",name:"showCheck",required:!1,type:{kind:"primitive",value:"boolean"},description:"",declarations:[{name:"showCheck",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx"}],tags:{}}]}},{name:"ColorSwatch",fileName:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx",description:"",declarations:[{name:"ColorSwatch",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx"}],tags:{},type:{kind:"component",props:[{kind:"property",name:"color",required:!0,type:{kind:"primitive",value:"string"},description:"",declarations:[{name:"color",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx"}],tags:{}},{kind:"property",name:"showCheck",required:!1,type:{kind:"primitive",value:"boolean"},description:"",declarations:[{name:"showCheck",filePath:"/home/runner/work/canvas-kit/canvas-kit/modules/react/color-picker/lib/parts/ColorSwatch.tsx"}],tags:{},defaultValue:{kind:"boolean",value:!1}}]}}];window.__updateDocs?window.__updateDocs?.(__docs):window.__docs=(window.__docs||[]).concat(__docs)}}]);