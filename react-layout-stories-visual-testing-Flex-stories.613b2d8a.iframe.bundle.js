"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[9733],{"./modules/react/layout/stories/visual-testing/Flex.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.FlexRTLStates=exports.FlexLTRStates=void 0;(function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}})(__webpack_require__("./node_modules/react/index.js"));var _layout=__webpack_require__("./modules/react/layout/index.ts"),_common=__webpack_require__("./modules/react/common/index.ts"),_testing=__webpack_require__("./modules/react/testing/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Layout/Flex",component:_layout.Flex,parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = "import React from \'react\';\\n\\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\\nimport {ContentDirection} from \'@workday/canvas-kit-react/common\';\\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\\n\\nexport default {\\n  title: \'Testing/Layout/Flex\',\\n  component: Flex,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const FlexLTRStates = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Flex LTR States</h2>\\n        <StaticStates theme={{canvas: {direction: ContentDirection.LTR}}}>\\n          <ComponentStatesTable\\n            columnProps={[{label: \'Default\', props: {}}]}\\n            rowProps={[\\n              {\\n                label: \'Row\',\\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\\n              },\\n              {\\n                label: \'Row Reverse\',\\n                props: {\\n                  flexDirection: \'row-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column\',\\n                props: {\\n                  flexDirection: \'column\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column Reverse\',\\n                props: {\\n                  flexDirection: \'column-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n            ]}\\n          >\\n            {props => {\\n              return (\\n                <Flex {...props}>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    1\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    2\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    3\\n                  </Flex>\\n                </Flex>\\n              );\\n            }}\\n          </ComponentStatesTable>\\n        </StaticStates>\\n      </>\\n    );\\n  },\\n};\\n\\nexport const FlexRTLStates = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Flex RTL States</h2>\\n        <StaticStates theme={{canvas: {direction: ContentDirection.RTL}}}>\\n          <ComponentStatesTable\\n            columnProps={[{label: \'Default\', props: {}}]}\\n            rowProps={[\\n              {\\n                label: \'Row\',\\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\\n              },\\n              {\\n                label: \'Row-Reverse\',\\n                props: {\\n                  flexDirection: \'row-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column\',\\n                props: {\\n                  flexDirection: \'column\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column-Reverse\',\\n                props: {\\n                  flexDirection: \'column-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n            ]}\\n          >\\n            {props => {\\n              return (\\n                <Flex {...props}>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    1\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    2\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    3\\n                  </Flex>\\n                </Flex>\\n              );\\n            }}\\n          </ComponentStatesTable>\\n        </StaticStates>\\n      </>\\n    );\\n  },\\n};\\n";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  "FlexLTRStates": {\n    "startLoc": {\n      "col": 29,\n      "line": 17\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 103\n    },\n    "startBody": {\n      "col": 29,\n      "line": 17\n    },\n    "endBody": {\n      "col": 1,\n      "line": 103\n    }\n  },\n  "FlexRTLStates": {\n    "startLoc": {\n      "col": 29,\n      "line": 105\n    },\n    "endLoc": {\n      "col": 1,\n      "line": 191\n    },\n    "startBody": {\n      "col": 29,\n      "line": 105\n    },\n    "endBody": {\n      "col": 1,\n      "line": 191\n    }\n  }\n};\n    \nimport React from \'react\';\n\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\nimport {ContentDirection} from \'@workday/canvas-kit-react/common\';\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\n\nexport default {\n  title: \'Testing/Layout/Flex\',\n  component: Flex,\n  parameters: {\n  "storySource": {\n    "source": "import React from \'react\';\\n\\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\\nimport {ContentDirection} from \'@workday/canvas-kit-react/common\';\\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\\n\\nexport default {\\n  title: \'Testing/Layout/Flex\',\\n  component: Flex,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const FlexLTRStates = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Flex LTR States</h2>\\n        <StaticStates theme={{canvas: {direction: ContentDirection.LTR}}}>\\n          <ComponentStatesTable\\n            columnProps={[{label: \'Default\', props: {}}]}\\n            rowProps={[\\n              {\\n                label: \'Row\',\\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\\n              },\\n              {\\n                label: \'Row Reverse\',\\n                props: {\\n                  flexDirection: \'row-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column\',\\n                props: {\\n                  flexDirection: \'column\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column Reverse\',\\n                props: {\\n                  flexDirection: \'column-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n            ]}\\n          >\\n            {props => {\\n              return (\\n                <Flex {...props}>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    1\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    2\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    3\\n                  </Flex>\\n                </Flex>\\n              );\\n            }}\\n          </ComponentStatesTable>\\n        </StaticStates>\\n      </>\\n    );\\n  },\\n};\\n\\nexport const FlexRTLStates = {\\n  render: () => {\\n    return (\\n      <>\\n        <h2>Flex RTL States</h2>\\n        <StaticStates theme={{canvas: {direction: ContentDirection.RTL}}}>\\n          <ComponentStatesTable\\n            columnProps={[{label: \'Default\', props: {}}]}\\n            rowProps={[\\n              {\\n                label: \'Row\',\\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\\n              },\\n              {\\n                label: \'Row-Reverse\',\\n                props: {\\n                  flexDirection: \'row-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column\',\\n                props: {\\n                  flexDirection: \'column\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n              {\\n                label: \'Column-Reverse\',\\n                props: {\\n                  flexDirection: \'column-reverse\',\\n                  border: \'solid 2px\',\\n                  borderColor: \'blackPepper500\',\\n                },\\n              },\\n            ]}\\n          >\\n            {props => {\\n              return (\\n                <Flex {...props}>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    1\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    2\\n                  </Flex>\\n                  <Flex\\n                    flex=\\"1 1 auto\\"\\n                    border=\\"solid 2px\\"\\n                    alignItems=\\"center\\"\\n                    justifyContent=\\"center\\"\\n                    borderColor=\\"cinnamon500\\"\\n                    margin=\\"xxs\\"\\n                    paddingY=\\"xxs\\"\\n                    paddingX=\\"s\\"\\n                  >\\n                    3\\n                  </Flex>\\n                </Flex>\\n              );\\n            }}\\n          </ComponentStatesTable>\\n        </StaticStates>\\n      </>\\n    );\\n  },\\n};\\n",\n    "locationsMap": {\n      "flex-ltr-states": {\n        "startLoc": {\n          "col": 29,\n          "line": 17\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 103\n        },\n        "startBody": {\n          "col": 29,\n          "line": 17\n        },\n        "endBody": {\n          "col": 1,\n          "line": 103\n        }\n      },\n      "flex-rtl-states": {\n        "startLoc": {\n          "col": 29,\n          "line": 105\n        },\n        "endLoc": {\n          "col": 1,\n          "line": 191\n        },\n        "startBody": {\n          "col": 29,\n          "line": 105\n        },\n        "endBody": {\n          "col": 1,\n          "line": 191\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const FlexLTRStates = {\n  render: () => {\n    return (\n      <>\n        <h2>Flex LTR States</h2>\n        <StaticStates theme={{canvas: {direction: ContentDirection.LTR}}}>\n          <ComponentStatesTable\n            columnProps={[{label: \'Default\', props: {}}]}\n            rowProps={[\n              {\n                label: \'Row\',\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\n              },\n              {\n                label: \'Row Reverse\',\n                props: {\n                  flexDirection: \'row-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column\',\n                props: {\n                  flexDirection: \'column\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column Reverse\',\n                props: {\n                  flexDirection: \'column-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n            ]}\n          >\n            {props => {\n              return (\n                <Flex {...props}>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    1\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    2\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    3\n                  </Flex>\n                </Flex>\n              );\n            }}\n          </ComponentStatesTable>\n        </StaticStates>\n      </>\n    );\n  },\n};;\n\nexport const FlexRTLStates = {\n  render: () => {\n    return (\n      <>\n        <h2>Flex RTL States</h2>\n        <StaticStates theme={{canvas: {direction: ContentDirection.RTL}}}>\n          <ComponentStatesTable\n            columnProps={[{label: \'Default\', props: {}}]}\n            rowProps={[\n              {\n                label: \'Row\',\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\n              },\n              {\n                label: \'Row-Reverse\',\n                props: {\n                  flexDirection: \'row-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column\',\n                props: {\n                  flexDirection: \'column\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column-Reverse\',\n                props: {\n                  flexDirection: \'column-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n            ]}\n          >\n            {props => {\n              return (\n                <Flex {...props}>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    1\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    2\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    3\n                  </Flex>\n                </Flex>\n              );\n            }}\n          </ComponentStatesTable>\n        </StaticStates>\n      </>\n    );\n  },\n};\n',locationsMap:{"flex-ltr-states":{startLoc:{col:29,line:104},endLoc:{col:1,line:190},startBody:{col:29,line:104},endBody:{col:1,line:190}},"flex-rtl-states":{startLoc:{col:29,line:192},endLoc:{col:1,line:278},startBody:{col:29,line:192},endBody:{col:1,line:278}}}},storySource:{source:'import React from \'react\';\n\nimport {Flex} from \'@workday/canvas-kit-react/layout\';\nimport {ContentDirection} from \'@workday/canvas-kit-react/common\';\nimport {StaticStates, ComponentStatesTable} from \'@workday/canvas-kit-react/testing\';\n\nexport default {\n  title: \'Testing/Layout/Flex\',\n  component: Flex,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const FlexLTRStates = {\n  render: () => {\n    return (\n      <>\n        <h2>Flex LTR States</h2>\n        <StaticStates theme={{canvas: {direction: ContentDirection.LTR}}}>\n          <ComponentStatesTable\n            columnProps={[{label: \'Default\', props: {}}]}\n            rowProps={[\n              {\n                label: \'Row\',\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\n              },\n              {\n                label: \'Row Reverse\',\n                props: {\n                  flexDirection: \'row-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column\',\n                props: {\n                  flexDirection: \'column\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column Reverse\',\n                props: {\n                  flexDirection: \'column-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n            ]}\n          >\n            {props => {\n              return (\n                <Flex {...props}>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    1\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    2\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    3\n                  </Flex>\n                </Flex>\n              );\n            }}\n          </ComponentStatesTable>\n        </StaticStates>\n      </>\n    );\n  },\n};\n\nexport const FlexRTLStates = {\n  render: () => {\n    return (\n      <>\n        <h2>Flex RTL States</h2>\n        <StaticStates theme={{canvas: {direction: ContentDirection.RTL}}}>\n          <ComponentStatesTable\n            columnProps={[{label: \'Default\', props: {}}]}\n            rowProps={[\n              {\n                label: \'Row\',\n                props: {flexDirection: \'row\', border: \'solid 2px\', borderColor: \'blackPepper500\'},\n              },\n              {\n                label: \'Row-Reverse\',\n                props: {\n                  flexDirection: \'row-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column\',\n                props: {\n                  flexDirection: \'column\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n              {\n                label: \'Column-Reverse\',\n                props: {\n                  flexDirection: \'column-reverse\',\n                  border: \'solid 2px\',\n                  borderColor: \'blackPepper500\',\n                },\n              },\n            ]}\n          >\n            {props => {\n              return (\n                <Flex {...props}>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    1\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    2\n                  </Flex>\n                  <Flex\n                    flex="1 1 auto"\n                    border="solid 2px"\n                    alignItems="center"\n                    justifyContent="center"\n                    borderColor="cinnamon500"\n                    margin="xxs"\n                    paddingY="xxs"\n                    paddingX="s"\n                  >\n                    3\n                  </Flex>\n                </Flex>\n              );\n            }}\n          </ComponentStatesTable>\n        </StaticStates>\n      </>\n    );\n  },\n};\n',locationsMap:{"flex-ltr-states":{startLoc:{col:29,line:17},endLoc:{col:1,line:103},startBody:{col:29,line:17},endBody:{col:1,line:103}},"flex-rtl-states":{startLoc:{col:29,line:105},endLoc:{col:1,line:191},startBody:{col:29,line:105},endBody:{col:1,line:191}}}},chromatic:{disable:!1}}};exports.FlexLTRStates={render:()=>(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)("h2",{children:"Flex LTR States"}),(0,_jsxRuntime.jsx)(_testing.StaticStates,{theme:{canvas:{direction:_common.ContentDirection.LTR}},children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{columnProps:[{label:"Default",props:{}}],rowProps:[{label:"Row",props:{flexDirection:"row",border:"solid 2px",borderColor:"blackPepper500"}},{label:"Row Reverse",props:{flexDirection:"row-reverse",border:"solid 2px",borderColor:"blackPepper500"}},{label:"Column",props:{flexDirection:"column",border:"solid 2px",borderColor:"blackPepper500"}},{label:"Column Reverse",props:{flexDirection:"column-reverse",border:"solid 2px",borderColor:"blackPepper500"}}],children:props=>(0,_jsxRuntime.jsxs)(_layout.Flex,{...props,children:[(0,_jsxRuntime.jsx)(_layout.Flex,{flex:"1 1 auto",border:"solid 2px",alignItems:"center",justifyContent:"center",borderColor:"cinnamon500",margin:"xxs",paddingY:"xxs",paddingX:"s",children:"1"}),(0,_jsxRuntime.jsx)(_layout.Flex,{flex:"1 1 auto",border:"solid 2px",alignItems:"center",justifyContent:"center",borderColor:"cinnamon500",margin:"xxs",paddingY:"xxs",paddingX:"s",children:"2"}),(0,_jsxRuntime.jsx)(_layout.Flex,{flex:"1 1 auto",border:"solid 2px",alignItems:"center",justifyContent:"center",borderColor:"cinnamon500",margin:"xxs",paddingY:"xxs",paddingX:"s",children:"3"})]})})})]})},exports.FlexRTLStates={render:()=>(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)("h2",{children:"Flex RTL States"}),(0,_jsxRuntime.jsx)(_testing.StaticStates,{theme:{canvas:{direction:_common.ContentDirection.RTL}},children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{columnProps:[{label:"Default",props:{}}],rowProps:[{label:"Row",props:{flexDirection:"row",border:"solid 2px",borderColor:"blackPepper500"}},{label:"Row-Reverse",props:{flexDirection:"row-reverse",border:"solid 2px",borderColor:"blackPepper500"}},{label:"Column",props:{flexDirection:"column",border:"solid 2px",borderColor:"blackPepper500"}},{label:"Column-Reverse",props:{flexDirection:"column-reverse",border:"solid 2px",borderColor:"blackPepper500"}}],children:props=>(0,_jsxRuntime.jsxs)(_layout.Flex,{...props,children:[(0,_jsxRuntime.jsx)(_layout.Flex,{flex:"1 1 auto",border:"solid 2px",alignItems:"center",justifyContent:"center",borderColor:"cinnamon500",margin:"xxs",paddingY:"xxs",paddingX:"s",children:"1"}),(0,_jsxRuntime.jsx)(_layout.Flex,{flex:"1 1 auto",border:"solid 2px",alignItems:"center",justifyContent:"center",borderColor:"cinnamon500",margin:"xxs",paddingY:"xxs",paddingX:"s",children:"2"}),(0,_jsxRuntime.jsx)(_layout.Flex,{flex:"1 1 auto",border:"solid 2px",alignItems:"center",justifyContent:"center",borderColor:"cinnamon500",margin:"xxs",paddingY:"xxs",paddingX:"s",children:"3"})]})})})]})};module.exports.__namedExportsOrder=["FlexRTLStates","FlexLTRStates"]}}]);