"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[2003],{"./modules/preview-react/side-panel/stories/testingVisual.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SidePanelStates=exports.default=void 0;var _react=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__("./node_modules/react/index.js")),_testing=__webpack_require__("./modules/react/testing/index.ts"),_index=__webpack_require__("./modules/preview-react/side-panel/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var _default={title:"Testing/Preview/Side Panel",component:_index.SidePanel,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\n\\nimport {\\n  ComponentStatesTable,\\n  permutateProps,\\n  StaticStates,\\n} from '@workday/canvas-kit-react/testing';\\nimport {SidePanel} from '../index';\\n\\nexport default {\\n  title: 'Testing/Preview/Side Panel',\\n  component: SidePanel,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SidePanelStates = () => (\\n  <StaticStates>\\n    <ComponentStatesTable\\n      rowProps={[\\n        {label: 'Standard Variant', props: {variant: 'standard'}},\\n        {label: 'Alternate Variant', props: {variant: 'alternate'}},\\n      ]}\\n      columnProps={permutateProps(\\n        {\\n          expanded: [\\n            {label: 'Collapsed', value: false},\\n            {label: 'Expanded', value: true},\\n            {label: '', value: undefined},\\n          ],\\n          origin: [\\n            {label: '(left)', value: 'left'},\\n            {label: '(right)', value: 'right'},\\n          ],\\n        },\\n        ({expanded, defaultExpanded}) => {\\n          // Don't show permutations of both values being defined (expanded prop always wins over defaultExpanded)\\n          if (expanded !== undefined && defaultExpanded !== undefined) {\\n            return false;\\n          }\\n          // Don't show if both are undefined\\n          if (expanded === undefined && defaultExpanded === undefined) {\\n            return false;\\n          }\\n          return true;\\n        }\\n      )}\\n    >\\n      {props => (\\n        <div style={{height: 480}}>\\n          <SidePanel {...props} touched={false}>\\n            <SidePanel.ToggleButton aria-label=\\\"toggle button\\\" />\\n          </SidePanel>\\n        </div>\\n      )}\\n    </ComponentStatesTable>\\n  </StaticStates>\\n);\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"SidePanelStates\": {\n    \"startLoc\": {\n      \"col\": 31,\n      \"line\": 20\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 61\n    },\n    \"startBody\": {\n      \"col\": 31,\n      \"line\": 20\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 61\n    }\n  }\n};\n    \nimport React from 'react';\n\nimport {\n  ComponentStatesTable,\n  permutateProps,\n  StaticStates,\n} from '@workday/canvas-kit-react/testing';\nimport {SidePanel} from '../index';\n\nexport default {\n  title: 'Testing/Preview/Side Panel',\n  component: SidePanel,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\n\\nimport {\\n  ComponentStatesTable,\\n  permutateProps,\\n  StaticStates,\\n} from '@workday/canvas-kit-react/testing';\\nimport {SidePanel} from '../index';\\n\\nexport default {\\n  title: 'Testing/Preview/Side Panel',\\n  component: SidePanel,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const SidePanelStates = () => (\\n  <StaticStates>\\n    <ComponentStatesTable\\n      rowProps={[\\n        {label: 'Standard Variant', props: {variant: 'standard'}},\\n        {label: 'Alternate Variant', props: {variant: 'alternate'}},\\n      ]}\\n      columnProps={permutateProps(\\n        {\\n          expanded: [\\n            {label: 'Collapsed', value: false},\\n            {label: 'Expanded', value: true},\\n            {label: '', value: undefined},\\n          ],\\n          origin: [\\n            {label: '(left)', value: 'left'},\\n            {label: '(right)', value: 'right'},\\n          ],\\n        },\\n        ({expanded, defaultExpanded}) => {\\n          // Don't show permutations of both values being defined (expanded prop always wins over defaultExpanded)\\n          if (expanded !== undefined && defaultExpanded !== undefined) {\\n            return false;\\n          }\\n          // Don't show if both are undefined\\n          if (expanded === undefined && defaultExpanded === undefined) {\\n            return false;\\n          }\\n          return true;\\n        }\\n      )}\\n    >\\n      {props => (\\n        <div style={{height: 480}}>\\n          <SidePanel {...props} touched={false}>\\n            <SidePanel.ToggleButton aria-label=\\\"toggle button\\\" />\\n          </SidePanel>\\n        </div>\\n      )}\\n    </ComponentStatesTable>\\n  </StaticStates>\\n);\\n\",\n    \"locationsMap\": {\n      \"side-panel-states\": {\n        \"startLoc\": {\n          \"col\": 31,\n          \"line\": 20\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 61\n        },\n        \"startBody\": {\n          \"col\": 31,\n          \"line\": 20\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 61\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SidePanelStates = () => (\n  <StaticStates>\n    <ComponentStatesTable\n      rowProps={[\n        {label: 'Standard Variant', props: {variant: 'standard'}},\n        {label: 'Alternate Variant', props: {variant: 'alternate'}},\n      ]}\n      columnProps={permutateProps(\n        {\n          expanded: [\n            {label: 'Collapsed', value: false},\n            {label: 'Expanded', value: true},\n            {label: '', value: undefined},\n          ],\n          origin: [\n            {label: '(left)', value: 'left'},\n            {label: '(right)', value: 'right'},\n          ],\n        },\n        ({expanded, defaultExpanded}) => {\n          // Don't show permutations of both values being defined (expanded prop always wins over defaultExpanded)\n          if (expanded !== undefined && defaultExpanded !== undefined) {\n            return false;\n          }\n          // Don't show if both are undefined\n          if (expanded === undefined && defaultExpanded === undefined) {\n            return false;\n          }\n          return true;\n        }\n      )}\n    >\n      {props => (\n        <div style={{height: 480}}>\n          <SidePanel {...props} touched={false}>\n            <SidePanel.ToggleButton aria-label=\"toggle button\" />\n          </SidePanel>\n        </div>\n      )}\n    </ComponentStatesTable>\n  </StaticStates>\n);\n",locationsMap:{"side-panel-states":{startLoc:{col:31,line:71},endLoc:{col:1,line:112},startBody:{col:31,line:71},endBody:{col:1,line:112}}}},storySource:{source:"import React from 'react';\n\nimport {\n  ComponentStatesTable,\n  permutateProps,\n  StaticStates,\n} from '@workday/canvas-kit-react/testing';\nimport {SidePanel} from '../index';\n\nexport default {\n  title: 'Testing/Preview/Side Panel',\n  component: SidePanel,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const SidePanelStates = () => (\n  <StaticStates>\n    <ComponentStatesTable\n      rowProps={[\n        {label: 'Standard Variant', props: {variant: 'standard'}},\n        {label: 'Alternate Variant', props: {variant: 'alternate'}},\n      ]}\n      columnProps={permutateProps(\n        {\n          expanded: [\n            {label: 'Collapsed', value: false},\n            {label: 'Expanded', value: true},\n            {label: '', value: undefined},\n          ],\n          origin: [\n            {label: '(left)', value: 'left'},\n            {label: '(right)', value: 'right'},\n          ],\n        },\n        ({expanded, defaultExpanded}) => {\n          // Don't show permutations of both values being defined (expanded prop always wins over defaultExpanded)\n          if (expanded !== undefined && defaultExpanded !== undefined) {\n            return false;\n          }\n          // Don't show if both are undefined\n          if (expanded === undefined && defaultExpanded === undefined) {\n            return false;\n          }\n          return true;\n        }\n      )}\n    >\n      {props => (\n        <div style={{height: 480}}>\n          <SidePanel {...props} touched={false}>\n            <SidePanel.ToggleButton aria-label=\"toggle button\" />\n          </SidePanel>\n        </div>\n      )}\n    </ComponentStatesTable>\n  </StaticStates>\n);\n",locationsMap:{"side-panel-states":{startLoc:{col:31,line:20},endLoc:{col:1,line:61},startBody:{col:31,line:20},endBody:{col:1,line:61}}}},chromatic:{disable:!1}}};exports.default=_default;const SidePanelStates=()=>_react.default.createElement(_testing.StaticStates,null,_react.default.createElement(_testing.ComponentStatesTable,{rowProps:[{label:"Standard Variant",props:{variant:"standard"}},{label:"Alternate Variant",props:{variant:"alternate"}}],columnProps:(0,_testing.permutateProps)({expanded:[{label:"Collapsed",value:!1},{label:"Expanded",value:!0},{label:"",value:void 0}],origin:[{label:"(left)",value:"left"},{label:"(right)",value:"right"}]},(({expanded,defaultExpanded})=>(void 0===expanded||void 0===defaultExpanded)&&(void 0!==expanded||void 0!==defaultExpanded)))},(props=>_react.default.createElement("div",{style:{height:480}},_react.default.createElement(_index.SidePanel,_extends({},props,{touched:!1}),_react.default.createElement(_index.SidePanel.ToggleButton,{"aria-label":"toggle button"}))))));exports.SidePanelStates=SidePanelStates,SidePanelStates.displayName="SidePanelStates",module.exports.__namedExportsOrder=["SidePanelStates"]},"./node_modules/react-innertext/index.js":module=>{var reduceJsxToString=function(previous,current){return previous+innerText(current)},innerText=function(jsx){return null===jsx||"boolean"==typeof jsx||void 0===jsx?"":"number"==typeof jsx?jsx.toString():"string"==typeof jsx?jsx:Array.isArray(jsx)?jsx.reduce(reduceJsxToString,""):function(jsx){return Object.prototype.hasOwnProperty.call(jsx,"props")}(jsx)&&Object.prototype.hasOwnProperty.call(jsx.props,"children")?innerText(jsx.props.children):""};innerText.default=innerText,module.exports=innerText}}]);