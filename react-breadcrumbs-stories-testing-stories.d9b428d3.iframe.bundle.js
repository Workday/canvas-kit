"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[3818],{"./modules/react/breadcrumbs/stories/testing.stories.tsx":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WithOverflowMenuHavingTwoItems=exports.WithOverflowMenu=exports.RTLStates=exports.DefaultStates=void 0;var _react=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(__webpack_require__("./node_modules/react/index.js")),_common=__webpack_require__("./modules/react/common/index.ts"),_testing=__webpack_require__("./modules/react/testing/index.ts"),_breadcrumbs=__webpack_require__("./modules/react/breadcrumbs/index.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.default={title:"Testing/Navigation/Breadcrumbs",component:_breadcrumbs.Breadcrumbs,parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import React from 'react';\\n\\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\\n\\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\\n\\nexport default {\\n  title: 'Testing/Navigation/Breadcrumbs',\\n  component: Breadcrumbs,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const DefaultStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\">Home</Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                      Breakfast Menus\\n                    </Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                    House Specialty Pies\\n                  </Breadcrumbs.CurrentItem>\\n                </Breadcrumbs.List>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenu = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [items] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Third Link', link: '#'},\\n      {id: '4', text: 'Fourth Link', link: '#'},\\n      {id: '5', text: 'Fifth Link', link: '#'},\\n      {id: '6', text: 'Sixth Link', link: '#'},\\n      {id: '7', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Lowest level', props: {maxWidth: 150}},\\n            {label: '2 items displayed', props: {maxWidth: 250}},\\n            {label: '3 items displayed', props: {maxWidth: 350}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenuHavingTwoItems = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [twoItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Current'},\\n    ]);\\n\\n    const [threeItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={props.items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const RTLStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\\n                <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                  <Breadcrumbs.List>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\">תנ״ך</Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                        משלי\\n                      </Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\\n                    </Breadcrumbs.CurrentItem>\\n                  </Breadcrumbs.List>\\n                </Breadcrumbs>\\n              </CanvasProvider>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"DefaultStates\": {\n    \"startLoc\": {\n      \"col\": 29,\n      \"line\": 18\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 52\n    },\n    \"startBody\": {\n      \"col\": 29,\n      \"line\": 18\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 52\n    }\n  },\n  \"WithOverflowMenu\": {\n    \"startLoc\": {\n      \"col\": 32,\n      \"line\": 54\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 115\n    },\n    \"startBody\": {\n      \"col\": 32,\n      \"line\": 54\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 115\n    }\n  },\n  \"WithOverflowMenuHavingTwoItems\": {\n    \"startLoc\": {\n      \"col\": 46,\n      \"line\": 117\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 178\n    },\n    \"startBody\": {\n      \"col\": 46,\n      \"line\": 117\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 178\n    }\n  },\n  \"RTLStates\": {\n    \"startLoc\": {\n      \"col\": 25,\n      \"line\": 180\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 216\n    },\n    \"startBody\": {\n      \"col\": 25,\n      \"line\": 180\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 216\n    }\n  }\n};\n    \nimport React from 'react';\n\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\n\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\n\nexport default {\n  title: 'Testing/Navigation/Breadcrumbs',\n  component: Breadcrumbs,\n  parameters: {\n  \"storySource\": {\n    \"source\": \"import React from 'react';\\n\\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\\n\\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\\n\\nexport default {\\n  title: 'Testing/Navigation/Breadcrumbs',\\n  component: Breadcrumbs,\\n  parameters: {\\n    chromatic: {\\n      disable: false,\\n    },\\n  },\\n};\\n\\nexport const DefaultStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\">Home</Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.Item>\\n                    <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                      Breakfast Menus\\n                    </Breadcrumbs.Link>\\n                  </Breadcrumbs.Item>\\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                    House Specialty Pies\\n                  </Breadcrumbs.CurrentItem>\\n                </Breadcrumbs.List>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenu = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [items] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Third Link', link: '#'},\\n      {id: '4', text: 'Fourth Link', link: '#'},\\n      {id: '5', text: 'Fifth Link', link: '#'},\\n      {id: '6', text: 'Sixth Link', link: '#'},\\n      {id: '7', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Lowest level', props: {maxWidth: 150}},\\n            {label: '2 items displayed', props: {maxWidth: 250}},\\n            {label: '3 items displayed', props: {maxWidth: 350}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const WithOverflowMenuHavingTwoItems = {\\n  render: () => {\\n    interface Breadcrumb {\\n      id: string;\\n      link?: string;\\n      text: string;\\n    }\\n\\n    const [twoItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Current'},\\n    ]);\\n\\n    const [threeItems] = React.useState<Breadcrumb[]>([\\n      {id: '1', text: 'Home', link: '/'},\\n      {id: '2', text: 'Second Link', link: '#'},\\n      {id: '3', text: 'Current'},\\n    ]);\\n\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <Breadcrumbs items={props.items} aria-label=\\\"Breadcrumbs\\\">\\n                <Breadcrumbs.List\\n                  maxWidth={props.maxWidth}\\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\\\"More links\\\" />}\\n                >\\n                  {item =>\\n                    item.link ? (\\n                      <Breadcrumbs.Item>\\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\\n                      </Breadcrumbs.Item>\\n                    ) : (\\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\\n                    )\\n                  }\\n                </Breadcrumbs.List>\\n                <Breadcrumbs.Menu.Popper>\\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\\n                    <Breadcrumbs.Menu.List>\\n                      {(item: Breadcrumb) => (\\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\\n                      )}\\n                    </Breadcrumbs.Menu.List>\\n                  </Breadcrumbs.Menu.Card>\\n                </Breadcrumbs.Menu.Popper>\\n              </Breadcrumbs>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\\nexport const RTLStates = {\\n  render: () => {\\n    return (\\n      <StaticStates>\\n        <ComponentStatesTable\\n          rowProps={[\\n            {label: 'Without truncation', props: {}},\\n            {label: 'With Truncated items', props: {isTruncated: true}},\\n          ]}\\n          columnProps={[{label: 'Default', props: {}}]}\\n        >\\n          {props => {\\n            return (\\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\\n                <Breadcrumbs aria-label=\\\"Breadcrumbs\\\">\\n                  <Breadcrumbs.List>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\">תנ״ך</Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.Item>\\n                      <Breadcrumbs.Link href=\\\"#\\\" maxWidth={props.isTruncated ? 100 : undefined}>\\n                        משלי\\n                      </Breadcrumbs.Link>\\n                    </Breadcrumbs.Item>\\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\\n                    </Breadcrumbs.CurrentItem>\\n                  </Breadcrumbs.List>\\n                </Breadcrumbs>\\n              </CanvasProvider>\\n            );\\n          }}\\n        </ComponentStatesTable>\\n      </StaticStates>\\n    );\\n  },\\n};\\n\",\n    \"locationsMap\": {\n      \"default-states\": {\n        \"startLoc\": {\n          \"col\": 29,\n          \"line\": 18\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 52\n        },\n        \"startBody\": {\n          \"col\": 29,\n          \"line\": 18\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 52\n        }\n      },\n      \"with-overflow-menu\": {\n        \"startLoc\": {\n          \"col\": 32,\n          \"line\": 54\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 115\n        },\n        \"startBody\": {\n          \"col\": 32,\n          \"line\": 54\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 115\n        }\n      },\n      \"with-overflow-menu-having-two-items\": {\n        \"startLoc\": {\n          \"col\": 46,\n          \"line\": 117\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 178\n        },\n        \"startBody\": {\n          \"col\": 46,\n          \"line\": 117\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 178\n        }\n      },\n      \"rtl-states\": {\n        \"startLoc\": {\n          \"col\": 25,\n          \"line\": 180\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 216\n        },\n        \"startBody\": {\n          \"col\": 25,\n          \"line\": 180\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 216\n        }\n      }\n    }\n  }\n,\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const DefaultStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\">Home</Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                      Breakfast Menus\n                    </Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                    House Specialty Pies\n                  </Breadcrumbs.CurrentItem>\n                </Breadcrumbs.List>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};;\n\nexport const WithOverflowMenu = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [items] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Third Link', link: '#'},\n      {id: '4', text: 'Fourth Link', link: '#'},\n      {id: '5', text: 'Fifth Link', link: '#'},\n      {id: '6', text: 'Sixth Link', link: '#'},\n      {id: '7', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Lowest level', props: {maxWidth: 150}},\n            {label: '2 items displayed', props: {maxWidth: 250}},\n            {label: '3 items displayed', props: {maxWidth: 350}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};;\n\nexport const WithOverflowMenuHavingTwoItems = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [twoItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Current'},\n    ]);\n\n    const [threeItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={props.items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};;\n\nexport const RTLStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n                <Breadcrumbs aria-label=\"Breadcrumbs\">\n                  <Breadcrumbs.List>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\">תנ״ך</Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                        משלי\n                      </Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\n                    </Breadcrumbs.CurrentItem>\n                  </Breadcrumbs.List>\n                </Breadcrumbs>\n              </CanvasProvider>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"default-states":{startLoc:{col:29,line:177},endLoc:{col:1,line:211},startBody:{col:29,line:177},endBody:{col:1,line:211}},"with-overflow-menu":{startLoc:{col:32,line:213},endLoc:{col:1,line:274},startBody:{col:32,line:213},endBody:{col:1,line:274}},"with-overflow-menu-having-two-items":{startLoc:{col:46,line:276},endLoc:{col:1,line:337},startBody:{col:46,line:276},endBody:{col:1,line:337}},"rtl-states":{startLoc:{col:25,line:339},endLoc:{col:1,line:375},startBody:{col:25,line:339},endBody:{col:1,line:375}}}},storySource:{source:"import React from 'react';\n\nimport {CanvasProvider, ContentDirection} from '@workday/canvas-kit-react/common';\nimport {StaticStates, ComponentStatesTable} from '@workday/canvas-kit-react/testing';\n\nimport {Breadcrumbs} from '@workday/canvas-kit-react/breadcrumbs';\n\nexport default {\n  title: 'Testing/Navigation/Breadcrumbs',\n  component: Breadcrumbs,\n  parameters: {\n    chromatic: {\n      disable: false,\n    },\n  },\n};\n\nexport const DefaultStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\">Home</Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.Item>\n                    <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                      Breakfast Menus\n                    </Breadcrumbs.Link>\n                  </Breadcrumbs.Item>\n                  <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                    House Specialty Pies\n                  </Breadcrumbs.CurrentItem>\n                </Breadcrumbs.List>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n\nexport const WithOverflowMenu = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [items] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Third Link', link: '#'},\n      {id: '4', text: 'Fourth Link', link: '#'},\n      {id: '5', text: 'Fifth Link', link: '#'},\n      {id: '6', text: 'Sixth Link', link: '#'},\n      {id: '7', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Lowest level', props: {maxWidth: 150}},\n            {label: '2 items displayed', props: {maxWidth: 250}},\n            {label: '3 items displayed', props: {maxWidth: 350}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n\nexport const WithOverflowMenuHavingTwoItems = {\n  render: () => {\n    interface Breadcrumb {\n      id: string;\n      link?: string;\n      text: string;\n    }\n\n    const [twoItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Current'},\n    ]);\n\n    const [threeItems] = React.useState<Breadcrumb[]>([\n      {id: '1', text: 'Home', link: '/'},\n      {id: '2', text: 'Second Link', link: '#'},\n      {id: '3', text: 'Current'},\n    ]);\n\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Overflow with only 2 items total', props: {maxWidth: 150, items: twoItems}},\n            {label: 'Overflow with only 3 items total', props: {maxWidth: 250, items: threeItems}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <Breadcrumbs items={props.items} aria-label=\"Breadcrumbs\">\n                <Breadcrumbs.List\n                  maxWidth={props.maxWidth}\n                  overflowButton={<Breadcrumbs.OverflowButton aria-label=\"More links\" />}\n                >\n                  {item =>\n                    item.link ? (\n                      <Breadcrumbs.Item>\n                        <Breadcrumbs.Link href={item.link}>{item.text}</Breadcrumbs.Link>\n                      </Breadcrumbs.Item>\n                    ) : (\n                      <Breadcrumbs.CurrentItem>{item.text}</Breadcrumbs.CurrentItem>\n                    )\n                  }\n                </Breadcrumbs.List>\n                <Breadcrumbs.Menu.Popper>\n                  <Breadcrumbs.Menu.Card maxWidth={300} maxHeight={200}>\n                    <Breadcrumbs.Menu.List>\n                      {(item: Breadcrumb) => (\n                        <Breadcrumbs.Menu.Item>{item.text}</Breadcrumbs.Menu.Item>\n                      )}\n                    </Breadcrumbs.Menu.List>\n                  </Breadcrumbs.Menu.Card>\n                </Breadcrumbs.Menu.Popper>\n              </Breadcrumbs>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n\nexport const RTLStates = {\n  render: () => {\n    return (\n      <StaticStates>\n        <ComponentStatesTable\n          rowProps={[\n            {label: 'Without truncation', props: {}},\n            {label: 'With Truncated items', props: {isTruncated: true}},\n          ]}\n          columnProps={[{label: 'Default', props: {}}]}\n        >\n          {props => {\n            return (\n              <CanvasProvider theme={{canvas: {direction: ContentDirection.RTL}}}>\n                <Breadcrumbs aria-label=\"Breadcrumbs\">\n                  <Breadcrumbs.List>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\">תנ״ך</Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.Item>\n                      <Breadcrumbs.Link href=\"#\" maxWidth={props.isTruncated ? 100 : undefined}>\n                        משלי\n                      </Breadcrumbs.Link>\n                    </Breadcrumbs.Item>\n                    <Breadcrumbs.CurrentItem maxWidth={props.isTruncated ? 100 : undefined}>\n                      בני תורתי אל־תשכח ומצותי יצר לבך׃\n                    </Breadcrumbs.CurrentItem>\n                  </Breadcrumbs.List>\n                </Breadcrumbs>\n              </CanvasProvider>\n            );\n          }}\n        </ComponentStatesTable>\n      </StaticStates>\n    );\n  },\n};\n",locationsMap:{"default-states":{startLoc:{col:29,line:18},endLoc:{col:1,line:52},startBody:{col:29,line:18},endBody:{col:1,line:52}},"with-overflow-menu":{startLoc:{col:32,line:54},endLoc:{col:1,line:115},startBody:{col:32,line:54},endBody:{col:1,line:115}},"with-overflow-menu-having-two-items":{startLoc:{col:46,line:117},endLoc:{col:1,line:178},startBody:{col:46,line:117},endBody:{col:1,line:178}},"rtl-states":{startLoc:{col:25,line:180},endLoc:{col:1,line:216},startBody:{col:25,line:180},endBody:{col:1,line:216}}}},chromatic:{disable:!1}}};exports.DefaultStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Without truncation",props:{}},{label:"With Truncated items",props:{isTruncated:!0}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs,{"aria-label":"Breadcrumbs",children:(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs.List,{children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",children:"Home"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",maxWidth:props.isTruncated?100:void 0,children:"Breakfast Menus"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{maxWidth:props.isTruncated?100:void 0,children:"House Specialty Pies"})]})})})})},exports.WithOverflowMenu={render:()=>{const[items]=_react.default.useState([{id:"1",text:"Home",link:"/"},{id:"2",text:"Second Link",link:"#"},{id:"3",text:"Third Link",link:"#"},{id:"4",text:"Fourth Link",link:"#"},{id:"5",text:"Fifth Link",link:"#"},{id:"6",text:"Sixth Link",link:"#"},{id:"7",text:"Current"}]);return(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Lowest level",props:{maxWidth:150}},{label:"2 items displayed",props:{maxWidth:250}},{label:"3 items displayed",props:{maxWidth:350}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs,{items,"aria-label":"Breadcrumbs",children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.List,{maxWidth:props.maxWidth,overflowButton:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.OverflowButton,{"aria-label":"More links"}),children:item=>item.link?(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:item.link,children:item.text})}):(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{children:item.text})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Popper,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Card,{maxWidth:300,maxHeight:200,children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.List,{children:item=>(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Item,{children:item.text})})})})]})})})}},exports.WithOverflowMenuHavingTwoItems={render:()=>{const[twoItems]=_react.default.useState([{id:"1",text:"Home",link:"/"},{id:"2",text:"Current"}]),[threeItems]=_react.default.useState([{id:"1",text:"Home",link:"/"},{id:"2",text:"Second Link",link:"#"},{id:"3",text:"Current"}]);return(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Overflow with only 2 items total",props:{maxWidth:150,items:twoItems}},{label:"Overflow with only 3 items total",props:{maxWidth:250,items:threeItems}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs,{items:props.items,"aria-label":"Breadcrumbs",children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.List,{maxWidth:props.maxWidth,overflowButton:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.OverflowButton,{"aria-label":"More links"}),children:item=>item.link?(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:item.link,children:item.text})}):(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{children:item.text})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Popper,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Card,{maxWidth:300,maxHeight:200,children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.List,{children:item=>(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Menu.Item,{children:item.text})})})})]})})})}},exports.RTLStates={render:()=>(0,_jsxRuntime.jsx)(_testing.StaticStates,{children:(0,_jsxRuntime.jsx)(_testing.ComponentStatesTable,{rowProps:[{label:"Without truncation",props:{}},{label:"With Truncated items",props:{isTruncated:!0}}],columnProps:[{label:"Default",props:{}}],children:props=>(0,_jsxRuntime.jsx)(_common.CanvasProvider,{theme:{canvas:{direction:_common.ContentDirection.RTL}},children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs,{"aria-label":"Breadcrumbs",children:(0,_jsxRuntime.jsxs)(_breadcrumbs.Breadcrumbs.List,{children:[(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",children:"תנ״ך"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Item,{children:(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.Link,{href:"#",maxWidth:props.isTruncated?100:void 0,children:"משלי"})}),(0,_jsxRuntime.jsx)(_breadcrumbs.Breadcrumbs.CurrentItem,{maxWidth:props.isTruncated?100:void 0,children:"בני תורתי אל־תשכח ומצותי יצר לבך׃"})]})})})})})};module.exports.__namedExportsOrder=["WithOverflowMenuHavingTwoItems","WithOverflowMenu","RTLStates","DefaultStates"]}}]);