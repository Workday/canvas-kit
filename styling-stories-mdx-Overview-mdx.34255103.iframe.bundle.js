"use strict";(globalThis.webpackChunkcanvas_kit=globalThis.webpackChunkcanvas_kit||[]).push([[2533],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W8:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.W8});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./modules/styling/stories/mdx/Overview.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./modules/preview-react/information-highlight/index.ts"),_workday_canvas_kit_react_button__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./modules/react/button/index.ts"),_workday_canvas_tokens_web__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@workday/canvas-tokens-web/dist/es6/system/index.js");function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2",p:"p",ul:"ul",li:"li",a:"a",code:"code",pre:"pre",h3:"h3",ol:"ol",blockquote:"blockquote",strong:"strong"},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.RP)(),props.components);return _workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight||_missingMdxReference("InformationHighlight",!1),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Body||_missingMdxReference("InformationHighlight.Body",!0),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Heading||_missingMdxReference("InformationHighlight.Heading",!0),_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Icon||_missingMdxReference("InformationHighlight.Icon",!0),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.W8,{title:"Styling/Getting Started/Overview"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"canvas-kit-styling",children:"Canvas Kit Styling"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"introduction",children:"Introduction"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Canvas Kit styling is a custom CSS-in-JS solution that provides both a runtime for development and a\nstatic parsing process for build time. This system offers several key benefits:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"TypeScript autocomplete for enhanced developer experience"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Low runtime overhead for better performance"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Static CSS compilation for optimized builds"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Dynamic styling with CSS Variables for flexible design"}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The motivation behind this custom styling solution stems from the need to move beyond IE11 support\nand implement performance improvements using static styling methods. For more details, refer to the\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://workday.github.io/canvas-kit/?path=/docs/styling-why-canvas-styling--docs",target:"_blank",rel:"nofollow noopener noreferrer",children:"Why Canvas Kit Styling"}),"\nsection."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"overview",children:"Overview"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The Canvas Kit styling system consists of two main packages:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@workday/canvas-kit-styling"})," - Core styling utilities for runtime use"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@workday/canvas-kit-styling-transform"})," - Build-time optimization tools"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"These packages work together to provide a CSS-in-JS experience during development while enabling\noptimized static CSS in production."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"installation",children:"Installation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-sh",children:"yarn add @workday/canvas-kit-styling\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import React from 'react';\nimport {createRoot} from 'react-dom/client';\n\nimport {createStyles} from '@workday/canvas-kit-styling';\n\nconst myStyles = createStyles({\n  backgroundColor: 'red',\n}); // returns the CSS class name created for this style\n\nmyStyles; // something like \"css-{hash}\"\n\nconst domNode = document.getElementById('root');\nconst root = createRoot(domNode);\n\nroot.render(<div className={myStyles}>Hello!</div>);\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"style-merging",children:"Style Merging"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@workday/canvas-kit-styling"})," package uses ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/css"})," to inject styles during JavaScript\nevaluation time rather than ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/react"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/styled"})," injecting when a component is\nrendered. This means the Emotion cache needs to be known before any style is created. In order to\nproperly merge styles with components using either dynamic styling package, the Emotion cache must\nbe changed on any React application. Without this, styles will not be merged correctly when static\nand dynamic styles are used on the same element."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["If you're using Canvas Kit React, you should use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<CanvasProvider>"})," which includes Emotion's\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<CacheProvider>"})," with the proper cache already set. If you're not using Canvas Kit React, you\nshould use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<CacheProvider>"}),":"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// ONLY use if not using the <CanvasProvider>\nimport {getCache} from '@workday/canvas-kit-styling';\n\n// in your application bootstrap\nconst root = React.createRoot(document.getElementById('root'));\n\nroot.render(\n  <CacheProvider value={getCache()}>\n    <App />\n  </CacheProvider>\n);\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"known-issues",children:"Known issues"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"hot-reloading",children:"Hot Reloading"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Style merging works by using CSS specificity rather than JavaScript runtime. This can cause problems\nduring hot reloading. If you specify all styles in the same file, hot reloading shouldn't result in\nany style merging problems. But if you use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"extends"})," in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStencil"})," that references another\nfile, you may run into style merge issues."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"For example:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-ts",children:"// base.tsx file\nexport const baseStencil = createStencil({\n  base: {\n    color: 'red',\n  },\n});\n\n// extended.tsx file\nimport {baseStencil} from './base';\n\nexport const extendedStencil = createStencil({\n  extends: baseStencil,\n  base: {\n    color: 'blue',\n  },\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["This will render correctly until you change ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"color"})," in ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"base.tsx"})," and get a hot reload:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// base.tsx file\nexport const baseStencil = createStencil({\n  base: {\n    color: 'purple',\n  },\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The hot reload will evaluate this update and inject a new style."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"development",children:"Development"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Canvas Kit Styling comes with a runtime that doesn't need anything special for development. The\nruntime uses ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/css"})," to include your styles on the page. If you plan to use static\ncompilation, we recommend enabling in production as well so you can fix static compilation errors as\nyou develop rather than get errors only in production builds."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"static-compilation",children:"Static compilation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@workday/canvas-kit-styling-transform"})," package can to pre-build styles. This process takes\nstyle objects and turns them into CSS strings. This process moves serialization and hashing to build\ntime rather than browser runtime when ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/css"})," is processing styles. This will speed up\nproduction builds at runtime."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Static compilation has stricter requirements than when doing runtime styling. The static compiler\nuses the TypeScript type system to statically analyze style values and thus requires value types to\nbe known by TypeScript. See ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"#restrictions",children:"Restrictions"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Static compilation may be required for server side rendering (SSR), especially when using React\nServer Components."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"hash-generation",children:"Hash generation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Emotion generates hashes based on the serialized style object. This means a style should always give\nthe same hash. Static styling hashes differently. Every ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStyles"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStencil"})," call will\ngenerate a unique hash even if the style object is the same. This is required for proper style\nmerging because static styling doesn't give single class names, but rather merges styles using CSS\nspecificity."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["For runtime development, the hash is always unique. For static compilation, the hash is based on the\nstart and end character count in the source file of the style block. This is required for SSR so\nthat the server and client agree on the same value during hydration. This means that while\ndebugging, the hash depends on any code before it. If you add a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"console.log"})," for example, the\ncharacter index of a style block could shift which will generate a new hash."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"restrictions",children:"Restrictions"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The static compiler uses the TypeScript type checker. The easiest way to think of these restrictions\nis if TypeScript knows the exact value, the static compiler will also know. A simple example:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-ts",children:"// won't work - `value` is a type of `string` because `let` allows a value to be mutated\nlet value = 'absolute'; // `string`\n\nconst myStyles = createStyles({\n  position: value, // error - `string` isn't specific enough.\n});\n\n// will work - `value` is a type of `'absolute'` because `const` restricts to a string literal\nconst value = 'absolute'; // `'absolute'`\n\nconst myStyles = createStyles({\n  position: value, // works. If you mouse over `value` in your editor, you'll see the type is `'absolute'`\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"More complex examples may be objects:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-ts",children:"// won't work. TypeScript will not understand that the position will only be `'absolute'` and makes it a `string` instead\nconst reusableStyles = {\n  position: 'absolute',\n}; // `{ position: string }`\n\nconst myStyles = createStyles({\n  ...reusableStyles, // error - `position` is a `string` and not specific enough\n});\n\n// will work. Adding `as const` tells TypeScript the object is readonly and therefore no values can change\nconst reusableStyles = {\n  position: 'absolute',\n} as const; // `{ readonly position: 'absolute' }`\n\nconst myStyles = createStyles({\n  ...reusableStyles, // works. If you mouse over, the position is a string literal `'absolute'`\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Functions are a little more tricky and may require generics."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-ts",children:"// generic makes the type be statically knowable\nfunction getPosition<V extends 'relative' | 'absolute'>(value: V): {position: V} {\n  return {position: value};\n}\n\n// mouse over `position` in your editor an the type will be `{ position: 'absolute' }`\nconst position = getPosition('absolute'); // { position: 'absolute' }\n\nconst myStyles = createStyles({\n  ...getPosition('absolute'), // works - `{ position: 'absolute' }`\n});\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"webpack",children:"Webpack"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@webpack/canvas-kit-styling-transform"})," package comes with a webpack loader that can be added to\ndevelopment and/or production."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-js",children:"// import the transform - CJS and ESM are supported\nimport {StylingWebpackPlugin} from '@workday/canvas-kit-styling-transform';\n\n// somewhere only once. For static webpack config files, this can be near the top.\n// If inside Storybook, Gatsby, Next.js, etc configs, put inside the function that is called that\n// returns a webpack config\nconst tsPlugin = const tsPlugin = new StylingWebpackPlugin({\n  tsconfigPath: path.resolve(__dirname, '../tsconfig.json'), // allows your TS config to be used\n  // A different tsconfig could be used if you want to use TS to transpile to something like ES2019 and\n  // also have Babel process the file.\n});\n\n// However you need to define rules.\n// This is different for using webpack directly or in Storybook/Gatsby/Next.js/etc\n{\n  rules: [\n    //...\n    {\n      test: /.\\.tsx?$/,\n      use: [\n        {\n          loader: require.resolve('@workday/canvas-kit-styling-transform/webpack-loader'),\n          options: tsPlugin.getLoaderOptions(),\n        },\n      ],\n      enforce: 'pre'\n    },\n  ];\n  // We need to pass the plugin to Webpack's plugin list. Failure to do this will result in a\n  // production build hanging\n  plugins: [tsPlugin]\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"core-styling-approaches-for-static-styling",children:"Core Styling Approaches for Static Styling"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"For proper static styling there's two methods that you can use to apply styles."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Using ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStyles"})," for simple object base styles."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Using ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStencil"})," for dynamic styles and reusable components."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Both approaches are intended to be used in tandem with the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop when applying styles to our\ncomponents."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.h3,{id:"cs-prop",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," Prop"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop takes in a single, or an array of values that are created by the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," function, a\nstring representing a CSS class name, or the return of the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createVars"})," function. It merges\neverything together and applies ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"className"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"style"})," attributes to a React element. Most of our\ncomponents extend the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop so that you can statically apply styles to them."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"Important"}),": While the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop accepts a style object, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"this will not"})," be considered\nstatically styling an element and you will lose the performance benefits. We plan on providing a\nbabel plugin to extract these styles statically in a future version."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {system} from '@workday/canvas-tokens-webs';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\n\nconst styles = createStyles({color: system.color.static.red.default});\n\nfunction MyComponent() {\n  return <PrimaryButton cs={styles}>Text</PrimaryButton>;\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"createstyles",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStyles"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The primary utility function is the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStyles"})," function. It makes a call to the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"css"})," function\nfrom ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@emotion/css"}),". Emotion still does most of the heavy lifting by handling the serialization,\nhashing, caching, and style injection."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"// Bad example (inside render function)\nimport {system} from '@workday/canvas-tokens-webs';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\n\nfunction MyComponent() {\n  const styles = createStyles({color: system.color.static.red.default}); // Don't do this\n  return <PrimaryButton cs={styles}>Text</PrimaryButton>;\n}\n\n// Good example (outside render function)\nimport {system} from '@workday/canvas-tokens-webs';\nimport {PrimaryButton} from '@workday/canvas-kit-react/button';\n\nconst styles = createStyles({color: system.color.static.red.default});\n\nfunction MyComponent() {\n  return <PrimaryButton cs={styles}>Text</PrimaryButton>;\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Most of our components support using the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cs"})," prop to apply the static styles. It merges everything\ntogether and applies ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"className"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"style"})," attributes to a React element."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight,{className:"sb-unstyled",cs:{marginBlock:_workday_canvas_tokens_web__WEBPACK_IMPORTED_MODULE_5__.space.x4},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Icon,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Heading,{children:"Information"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Body,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["For a more in depth overview, please view our ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_react_button__WEBPACK_IMPORTED_MODULE_6__.Hyperlink,{src:"https://workday.github.io/canvas-kit/?path=/docs/styling-getting-started-create-styles--docs",children:" Create Styles "})," docs."]})})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"createstencil",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStencil"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"createStencil"})," is a function for creating reusable, complex component styling systems. It manages\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"base"})," styles, ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"parts"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"modifiers"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"variables"}),", and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"compound"})," modifiers. Most of our components\nalso export their own Stencil that might expose CSS variables in order to modify the component."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In the example below, we leverage ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"parts"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"vars"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"base"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"modifiers"})," to create a reusable\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Card"})," component. The Stencil allows us to dynamic style the component based on the props."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"import {createStencil}from '@workday/canvas-kit-styling';\nimport {Card} from '@workday/canvas-kit-react/card';\nimport {system} from '@workday/canvas-tokens-webs';\n\nconst themedCardStencil = createStencil({\n  vars: {\n   // Create CSS variables for the color of the header\n    headerColor: ''\n  },\n  parts: {\n   // Allows for styling a sub element of the component that may not be exposed through the API\n    header: 'themed-card-header'\n  },\n  base: ({headerPart, headerColor}) => ({\n    padding: system.space.x4,\n    boxShadow: system.depth[2],\n    backgroundColor: system.color.bg.default,\n    color: system.color.text.default,\n    // Targets the header part via [data-part=\"themed-card-header\"]\"]\n    [headerPart]: {\n      color: headerColor\n    }\n  }),\n  modifiers: {\n    isDarkTheme: {\n    // If the prop `isDarkTheme` is true, style the component and it's parts\n      true: ({headerPart}) => ({\n        backgroundColor: system.color.bg.contrast.default,\n        color: system.color.text.inverse\n        [headerPart]: {\n          color: system.color.text.inverse\n        }\n      })\n    }\n  }\n})\n\nconst ThemedCard = ({isDarkTheme, headerColor, elemProps}) => {\n  return (\n    /* Use the `cs` prop to apply the stencil and pass it the dynamic properties it needs to style accordingly */\n    <Card cs={themedCardStencil({isDarkTheme, headerColor})} {...elemProps}>\n\t/* Apply the data part selector to the header */\n      <Card.Heading {...themedCardStencil.parts.header}>Canvas Supreme</Card.Heading>\n      <Card.Body>\n        Our house special supreme pizza includes pepperoni, sausage, bell peppers, mushrooms,\n        onions, and oregano.\n      </Card.Body>\n    </Card>\n  );\n};\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight,{className:"sb-unstyled",cs:{marginBlock:_workday_canvas_tokens_web__WEBPACK_IMPORTED_MODULE_5__.space.x4},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Icon,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Heading,{children:"Information"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_preview_react_information_highlight__WEBPACK_IMPORTED_MODULE_4__.InformationHighlight.Body,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["For a more in depth overview, please view our ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_workday_canvas_kit_react_button__WEBPACK_IMPORTED_MODULE_6__.Hyperlink,{src:"https://workday.github.io/canvas-kit/?path=/docs/styling-getting-started-stencils--docs",children:"Create Stencil"})," docs."]})})]})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_canvas_kit_canvas_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.RP)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)};function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);